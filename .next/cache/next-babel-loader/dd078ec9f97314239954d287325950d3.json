{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport SimpleSwitch from '../simple-switch';\nimport { useStores } from '../../hooks/use-stores';\nimport { toJS } from 'mobx';\nconst StyledA = styled.a.withConfig({\n  displayName: \"otp-unlocking__StyledA\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"otp-unlocking__StyledSpan\",\n  componentId: \"r234ff-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSwitch = styled(Switch).withConfig({\n  displayName: \"otp-unlocking__StyledSwitch\",\n  componentId: \"r234ff-2\"\n})([\"\", \"\"], ({\n  defaultChecked\n}) => defaultChecked && `\n      background-color: #F88008 !important;\n  `);\nexport default function OtpUnlocking() {\n  const {\n    0: idCard,\n    1: setIdCard\n  } = useState('');\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState(''); // const [stringSwitch, setStringSwitch] = useState([\n  //   { accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true },\n  //   { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }\n  // ])\n\n  const {\n    0: stringSwitch,\n    1: setStringSwitch\n  } = useState([[true, '123123123123', 'Binding to TCRB Mobile Banking'], [false, '00993445123123', 'Binding to Micro Pay']]);\n  const {\n    customerServicesMenuStore\n  } = useStores();\n\n  const searchIdCardNumber = value => {\n    console.log('eiei search:' + value);\n    setIdCard(value);\n    setIsSearch(true);\n  };\n\n  const replaceNewDataForSetString = () => {\n    let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber));\n    setStringSwitch([...newArray, toJS(customerServicesMenuStore.accountSelected)]);\n  };\n\n  const hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  const onChange = (switchSelected, index) => {\n    console.log(switchSelected);\n\n    if (switchSelected === true) {\n      customerServicesMenuStore.accountSelected = switchSelected;\n      setVisble(true);\n      setIsChecked(true);\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \"Unlocking OTP!!\")));\n    } else {// setIsChecked(false)\n    }\n  };\n\n  const unlockOTP = () => {\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false;\n    setVisble(false);\n    replaceNewDataForSetString();\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: \"ID Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(SimpleSwitch, {\n    data: stringSwitch,\n    onChange: switchSelected => onChange(switchSelected),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }) : '', __jsx(SimpleModal, {\n    onOk: () => unlockOTP(),\n    onCancel: () => setVisble(false),\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","SimpleSwitch","useStores","toJS","StyledA","a","theme","spacing","medium","StyledSpan","span","StyledSwitch","defaultChecked","OtpUnlocking","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","stringSwitch","setStringSwitch","customerServicesMenuStore","searchIdCardNumber","value","console","log","replaceNewDataForSetString","newArray","filter","accountInfo","accountNumber","accountSelected","hideModal","setState","onChange","switchSelected","index","textAlign","unlockOTP","accountStatus","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport SimpleSwitch from '../simple-switch'\nimport { useStores } from '../../hooks/use-stores'\nimport { toJS } from 'mobx';\n\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n\n      ${({ defaultChecked }) => defaultChecked && `\n      background-color: #F88008 !important;\n  `}\n`\n\nexport default function OtpUnlocking\n  () {\n  const [idCard, setIdCard] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  const [modalString, setModalString] = useState('')\n  // const [stringSwitch, setStringSwitch] = useState([\n  //   { accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true },\n  //   { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }\n  // ])\n  const [stringSwitch, setStringSwitch] = useState([\n    [true, '123123123123', 'Binding to TCRB Mobile Banking'],\n    [false, '00993445123123', 'Binding to Micro Pay'],\n  ])\n  const { customerServicesMenuStore } = useStores()\n  const searchIdCardNumber = (value) => {\n    console.log('eiei search:' + value)\n    setIdCard(value)\n    setIsSearch(true)\n  }\n\n  const replaceNewDataForSetString = () => {\n    let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber))\n    setStringSwitch([...newArray, toJS(customerServicesMenuStore.accountSelected)])\n  }\n\n  const hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  const onChange = (switchSelected, index) => {\n    console.log(switchSelected)\n    if (switchSelected === true) {\n      customerServicesMenuStore.accountSelected = switchSelected\n      setVisble(true)\n      setIsChecked(true)\n      setModalString(\n        <div style={{ textAlign: \"center\" }}>\n          <p>Unlocking OTP!!</p>\n          {/* <p>Account Number {switchSelected.accountNumber}</p> */}\n        </div>\n      )\n    } else {\n      // setIsChecked(false)\n    }\n  }\n\n  const unlockOTP = () => {\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false\n    setVisble(false)\n    replaceNewDataForSetString()\n  }\n\n\n  return (\n    <div style={{ margin: 20 }}>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (\n        <SimpleSwitch\n          data={stringSwitch}\n          onChange={(switchSelected) => onChange(switchSelected)} />\n      ) : ('')}\n      <SimpleModal\n        onOk={() => unlockOTP()}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}