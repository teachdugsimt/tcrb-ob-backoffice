{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$(),\n    _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Input, Row, Col, Button } from 'antd';\nimport styled from 'styled-components';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../i18n';\nimport SimpleModal from '../simple-modal';\nvar StyledInput = styled(Input).withConfig({\n  displayName: \"otp-setup__StyledInput\",\n  componentId: \"y1xkpv-0\"\n})([\"background-color:unset !important;border:unset !important;border-bottom:1px solid black !important;box-shadow:none !important;.ant-input{text-align:center !important;background-color:unset !important;\", \"}\"], ''\n/* cursor:not-allowed !important; */\n);\n_c = StyledInput;\n\nvar useFocus = function useFocus() {\n  _s();\n\n  var htmlElRef = useRef(null);\n\n  var setFocus = function setFocus() {\n    htmlElRef.current && htmlElRef.current.focus();\n  };\n\n  return [htmlElRef, setFocus];\n};\n\n_s(useFocus, \"sPMElNktqlbGoO1DmdgDOOzWQjQ=\");\n\nvar OtpSetup = inject('businessParameterSetup')(observer(_s2(function (props) {\n  _s2();\n\n  var t = props.t,\n      businessParameterSetup = props.businessParameterSetup;\n\n  var _useState = useState(null),\n      expireOtp = _useState[0],\n      setExpire = _useState[1];\n\n  var _useState2 = useState(true),\n      visibleExpireEdit = _useState2[0],\n      setvisibleExpireEdit = _useState2[1];\n\n  var _useState3 = useState(false),\n      visibleExpireSubmit = _useState3[0],\n      setvisibleExpireSubmit = _useState3[1];\n\n  var _useState4 = useState(false),\n      disExpire = _useState4[0],\n      setdisExpire = _useState4[1];\n\n  var _useState5 = useState(null),\n      maximumOtp = _useState5[0],\n      setMaximum = _useState5[1];\n\n  var _useState6 = useState(true),\n      visibleEditMaximum = _useState6[0],\n      setvisibleEditMaximum = _useState6[1];\n\n  var _useState7 = useState(false),\n      visibleSubmitMaximum = _useState7[0],\n      setvisibleSubmitMaximum = _useState7[1];\n\n  var _useState8 = useState(false),\n      disMaximum = _useState8[0],\n      setdisMaximum = _useState8[1];\n\n  var _useState9 = useState(false),\n      visible = _useState9[0],\n      setVisible = _useState9[1];\n\n  var _useState10 = useState(\"\"),\n      modalString = _useState10[0],\n      setModal = _useState10[1]; // const [inputRef, setInputFocus] = useFocus()\n\n\n  useEffect(function () {\n    var data = {\n      otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\"\n    };\n    businessParameterSetup.getOTPdata(data);\n  }, []);\n  useEffect(function () {\n    var newProps = JSON.parse(JSON.stringify(businessParameterSetup.responseGetOtpValue));\n    console.log(\"Will Receive props : \", newProps);\n\n    if (newProps && newProps != undefined) {\n      if (!expireOtp || !maximumOtp) {\n        var tmpExpire = newProps.find(function (e) {\n          return e.Name == \"OTP_EXPIRE_TIME\";\n        });\n        var tmpMaximum = newProps.find(function (e) {\n          return e.Name == \"OTP_MAXIMUM_ENTERED\";\n        });\n        setExpire(tmpExpire.Value);\n        setMaximum(tmpMaximum.Value);\n      }\n    }\n  }, [businessParameterSetup.responseGetOtpValue]);\n\n  var _onClickExpiration = function _onClickExpiration() {\n    var expire = document.getElementById(\"otp-expiration-period\");\n    expire.style.color = \"orange\";\n    expire.focus();\n    setvisibleExpireEdit(false);\n    setvisibleExpireSubmit(true);\n  };\n\n  var _onClickMaximumRetry = function _onClickMaximumRetry() {\n    var maximum = document.getElementById(\"otp-maximum-retrying\");\n    maximum.style.color = \"orange\";\n    maximum.focus();\n    setvisibleEditMaximum(false);\n    setvisibleSubmitMaximum(true);\n  };\n\n  var _openPopup = function _openPopup(text) {\n    setVisible(true);\n    setModal(\"Confirm update otp \" + text);\n  };\n\n  var _onConfirm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!modalString.includes(\"expire\")) {\n                _context.next = 10;\n                break;\n              }\n\n              if (!(getValueFromStore(\"expire\") != expireOtp)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 4;\n              return businessParameterSetup.updateOTPdata({\n                OTP_EXPIRE_TIME: expireOtp\n              });\n\n            case 4:\n              businessParameterSetup.closeExpire(true);\n              setdisExpire(false);\n              _context.next = 8;\n              break;\n\n            case 8:\n              _context.next = 17;\n              break;\n\n            case 10:\n              if (!(getValueFromStore(\"maximum\") != maximumOtp)) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 13;\n              return businessParameterSetup.updateOTPdata({\n                OTP_MAXIMUN_ENTERED: maximumOtp\n              });\n\n            case 13:\n              businessParameterSetup.closeMaximum(true);\n              setdisMaximum(false);\n              _context.next = 17;\n              break;\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function _onConfirm() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getValueFromStore = function getValueFromStore(type) {\n    var old_data = JSON.parse(JSON.stringify(businessParameterSetup.responseGetOtpValue));\n\n    if (type == \"expire\") {\n      var tmpExpire = old_data.find(function (e) {\n        return e.Name == \"OTP_EXPIRE_TIME\";\n      });\n      return tmpExpire.Value;\n    } else {\n      var tmpMaximum = old_data.find(function (e) {\n        return e.Name == \"OTP_MAXIMUM_ENTERED\";\n      });\n      return tmpMaximum.Value;\n    }\n  };\n\n  var _onCancel = function _onCancel() {\n    setVisible(false);\n\n    if (modalString.includes(\"expire\")) {\n      setModal(\"\");\n      setvisibleExpireEdit(true);\n      setvisibleExpireSubmit(false);\n      setExpire(getValueFromStore(\"expire\"));\n    } else {\n      setModal(\"\");\n      setvisibleEditMaximum(true);\n      setvisibleSubmitMaximum(false);\n      setMaximum(getValueFromStore(\"maximum\"));\n    }\n\n    var expire = document.getElementById(\"otp-expiration-period\");\n    var maximum = document.getElementById(\"otp-maximum-retrying\");\n    expire.style.color = \"rgba(0, 0, 0, 0.65)\";\n    expire.blur();\n    maximum.style.color = \"rgba(0, 0, 0, 0.65)\";\n    maximum.blur();\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [8, 8],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    disabled: businessParameterSetup.editOtpMaximumRetry != null ? businessParameterSetup.editOtpMaximumRetry : disMaximum,\n    id: \"otp-maximum-retrying\",\n    value: maximumOtp,\n    onChange: function onChange(e) {\n      return setMaximum(e.target.value);\n    },\n    prefix: \"OTP Maximum Retrying\",\n    suffix: \"Times\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, visibleEditMaximum && __jsx(Button, {\n    onClick: function onClick() {\n      return _onClickMaximumRetry();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 34\n    }\n  }, t(\"edit\")), visibleSubmitMaximum && __jsx(Button, {\n    onClick: function onClick() {\n      return _openPopup(\"maximum\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 36\n    }\n  }, t(\"submit\")))), __jsx(Row, {\n    gutter: [8, 8],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    disabled: businessParameterSetup.editOtpExpirationPeriod != null ? businessParameterSetup.editOtpExpirationPeriod : disExpire\n    /*ref={inputRef}*/\n    ,\n    id: \"otp-expiration-period\",\n    value: expireOtp,\n    onChange: function onChange(e) {\n      return setExpire(e.target.value);\n    },\n    prefix: \"OTP Expiration Perlod\",\n    suffix: \"Seconds\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, visibleExpireEdit && __jsx(Button\n  /*onClick={setInputFocus}*/\n  , {\n    onClick: function onClick() {\n      return _onClickExpiration();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, t(\"edit\")), visibleExpireSubmit && __jsx(Button\n  /*onClick={setInputFocus}*/\n  , {\n    onClick: function onClick() {\n      return _openPopup(\"expire\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 35\n    }\n  }, t(\"submit\")))), __jsx(SimpleModal, {\n    onOk: function onOk() {\n      return _onConfirm();\n    },\n    onCancel: function onCancel() {\n      return _onCancel();\n    },\n    okText: t(\"confirm\"),\n    cancelText: t(\"cancel\"),\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }));\n}, \"5sKmX5u4p9aFZRTIOeYdeCt2M4E=\")));\nexport default withTranslation('common')(OtpSetup); // original text : rgba(0, 0, 0, 0.65);\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledInput\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js"],"names":["React","useEffect","useRef","useState","Input","Row","Col","Button","styled","inject","observer","withTranslation","SimpleModal","StyledInput","useFocus","htmlElRef","setFocus","current","focus","OtpSetup","props","t","businessParameterSetup","expireOtp","setExpire","visibleExpireEdit","setvisibleExpireEdit","visibleExpireSubmit","setvisibleExpireSubmit","disExpire","setdisExpire","maximumOtp","setMaximum","visibleEditMaximum","setvisibleEditMaximum","visibleSubmitMaximum","setvisibleSubmitMaximum","disMaximum","setdisMaximum","visible","setVisible","modalString","setModal","data","otpParamsField","getOTPdata","newProps","JSON","parse","stringify","responseGetOtpValue","console","log","undefined","tmpExpire","find","e","Name","tmpMaximum","Value","_onClickExpiration","expire","document","getElementById","style","color","_onClickMaximumRetry","maximum","_openPopup","text","_onConfirm","includes","getValueFromStore","updateOTPdata","OTP_EXPIRE_TIME","closeExpire","OTP_MAXIMUN_ENTERED","closeMaximum","type","old_data","_onCancel","blur","editOtpMaximumRetry","target","value","editOtpExpirationPeriod"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { Input, Row, Col, Button } from 'antd'\nimport styled from 'styled-components'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../i18n'\nimport SimpleModal from '../simple-modal'\n\nconst StyledInput = styled(Input)`\n  background-color: unset !important;\n  border: unset !important;\n  border-bottom: 1px solid black !important;\n  box-shadow: none !important;\n  .ant-input{\n    text-align: center !important;\n    background-color: unset !important;\n    ${'' /* cursor:not-allowed !important; */}\n  }\n`\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null)\n  const setFocus = () => { htmlElRef.current && htmlElRef.current.focus() }\n  return [htmlElRef, setFocus]\n}\n\nconst OtpSetup = inject('businessParameterSetup')(observer((props) => {\n  const { t, businessParameterSetup } = props\n  const [expireOtp, setExpire] = useState(null)\n  const [visibleExpireEdit, setvisibleExpireEdit] = useState(true)\n  const [visibleExpireSubmit, setvisibleExpireSubmit] = useState(false)\n  const [disExpire, setdisExpire] = useState(false)\n\n  const [maximumOtp, setMaximum] = useState(null)\n  const [visibleEditMaximum, setvisibleEditMaximum] = useState(true)\n  const [visibleSubmitMaximum, setvisibleSubmitMaximum] = useState(false)\n  const [disMaximum, setdisMaximum] = useState(false)\n\n  const [visible, setVisible] = useState(false)\n  const [modalString, setModal] = useState(\"\")\n  // const [inputRef, setInputFocus] = useFocus()\n\n  useEffect(() => {\n    let data = { otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\" }\n    businessParameterSetup.getOTPdata(data)\n  }, [])\n\n  useEffect(() => {\n    let newProps = JSON.parse(JSON.stringify(businessParameterSetup.responseGetOtpValue))\n    console.log(\"Will Receive props : \", newProps)\n    if (newProps && newProps != undefined) {\n      if (!expireOtp || !maximumOtp) {\n        let tmpExpire = newProps.find(e => e.Name == \"OTP_EXPIRE_TIME\")\n        let tmpMaximum = newProps.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\")\n        setExpire(tmpExpire.Value)\n        setMaximum(tmpMaximum.Value)\n      }\n    }\n  }, [businessParameterSetup.responseGetOtpValue])\n\n  const _onClickExpiration = () => {\n    let expire = document.getElementById(\"otp-expiration-period\")\n    expire.style.color = \"orange\"\n    expire.focus()\n    setvisibleExpireEdit(false)\n    setvisibleExpireSubmit(true)\n  }\n\n  const _onClickMaximumRetry = () => {\n    let maximum = document.getElementById(\"otp-maximum-retrying\")\n    maximum.style.color = \"orange\"\n    maximum.focus()\n    setvisibleEditMaximum(false)\n    setvisibleSubmitMaximum(true)\n  }\n\n  const _openPopup = (text) => {\n    setVisible(true)\n    setModal(\"Confirm update otp \" + text)\n  }\n\n  const _onConfirm = async () => {\n    if (modalString.includes(\"expire\")) {\n      if (getValueFromStore(\"expire\") != expireOtp) {\n        await businessParameterSetup.updateOTPdata({\n          OTP_EXPIRE_TIME: expireOtp\n        })\n        businessParameterSetup.closeExpire(true)\n        setdisExpire(false)\n      } else {\n        // alert(\"don't have any change\")\n      }\n    } else {\n      if (getValueFromStore(\"maximum\") != maximumOtp) {\n        await businessParameterSetup.updateOTPdata({\n          OTP_MAXIMUN_ENTERED: maximumOtp\n        })\n        businessParameterSetup.closeMaximum(true)\n        setdisMaximum(false)\n      } else {\n        // alert(\"don't have any change\")\n      }\n    }\n  }\n\n  const getValueFromStore = (type) => {\n    let old_data = JSON.parse(JSON.stringify(businessParameterSetup.responseGetOtpValue))\n    if (type == \"expire\") {\n      let tmpExpire = old_data.find(e => e.Name == \"OTP_EXPIRE_TIME\")\n      return tmpExpire.Value\n    } else {\n      let tmpMaximum = old_data.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\")\n      return tmpMaximum.Value\n    }\n  }\n\n  const _onCancel = () => {\n    setVisible(false)\n    if (modalString.includes(\"expire\")) {\n      setModal(\"\")\n      setvisibleExpireEdit(true)\n      setvisibleExpireSubmit(false)\n      setExpire(getValueFromStore(\"expire\"))\n    } else {\n      setModal(\"\")\n      setvisibleEditMaximum(true)\n      setvisibleSubmitMaximum(false)\n      setMaximum(getValueFromStore(\"maximum\"))\n    }\n    let expire = document.getElementById(\"otp-expiration-period\")\n    let maximum = document.getElementById(\"otp-maximum-retrying\")\n    expire.style.color = \"rgba(0, 0, 0, 0.65)\"\n    expire.blur()\n    maximum.style.color = \"rgba(0, 0, 0, 0.65)\"\n    maximum.blur()\n  }\n\n  return (\n    <div>\n      <Row gutter={[8, 8]}>\n        <Col span={8}>\n          <StyledInput disabled={businessParameterSetup.editOtpMaximumRetry != null ? businessParameterSetup.editOtpMaximumRetry : disMaximum} id={\"otp-maximum-retrying\"} value={maximumOtp} onChange={(e) => setMaximum(e.target.value)} prefix=\"OTP Maximum Retrying\" suffix=\"Times\" />\n        </Col>\n        <Col span={6}>\n          {visibleEditMaximum && <Button onClick={() => _onClickMaximumRetry()}>{t(\"edit\")}</Button>}\n          {visibleSubmitMaximum && <Button onClick={() => _openPopup(\"maximum\")}>{t(\"submit\")}</Button>}\n        </Col>\n      </Row>\n      <Row gutter={[8, 8]}>\n        <Col span={8}>\n          <StyledInput disabled={businessParameterSetup.editOtpExpirationPeriod != null ? businessParameterSetup.editOtpExpirationPeriod : disExpire} /*ref={inputRef}*/ id={\"otp-expiration-period\"} value={expireOtp} onChange={(e) => setExpire(e.target.value)} prefix=\"OTP Expiration Perlod\" suffix=\"Seconds\" />\n        </Col>\n        <Col span={6}>\n          {visibleExpireEdit && <Button /*onClick={setInputFocus}*/ onClick={() => _onClickExpiration()} >{t(\"edit\")}</Button>}\n          {visibleExpireSubmit && <Button /*onClick={setInputFocus}*/ onClick={() => _openPopup(\"expire\")} >{t(\"submit\")}</Button>}\n        </Col>\n      </Row>\n      <SimpleModal\n        onOk={() => _onConfirm()}\n        onCancel={() => _onCancel()}\n        okText={t(\"confirm\")}\n        cancelText={t(\"cancel\")}\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}))\n\nexport default withTranslation('common')(OtpSetup)\n// original text : rgba(0, 0, 0, 0.65);\n"]},"metadata":{},"sourceType":"module"}