{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/group/group-list.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport SimpleModal from '../../simple-modal';\nimport SimpleInput from '../../simple-input';\nconst {\n  Option\n} = Select;\nlet groupName = null;\nlet roleSelect = null;\nconst GroupList = inject('UserAccessManagementStore')(observer(props => {\n  const {\n    UserAccessManagementStore\n  } = props;\n  const {\n    0: modalTitle,\n    1: setModalTitle\n  } = useState(\"\");\n  const {\n    0: textOk,\n    1: settextOk\n  } = useState(\"Submit\");\n  const {\n    0: textEdit,\n    1: setTextEdit\n  } = useState(\"Add Section\");\n  const {\n    0: textCancel,\n    1: settextCancel\n  } = useState(\"Cancel\");\n  const {\n    0: modalString,\n    1: setmodalString\n  } = useState(\"\");\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState('confirm');\n  const {\n    0: visible,\n    1: setvisible\n  } = useState(false);\n  const {\n    0: roleList,\n    1: setRoleList\n  } = useState([]);\n  useEffect(() => {\n    setRoleList(mockRoleList);\n  }, []);\n  const mockRoleList = [{\n    id: 1,\n    key: 1,\n    role_name: \"role_1\"\n  }, {\n    id: 2,\n    key: 2,\n    role_name: \"role_2\"\n  }, {\n    id: 3,\n    key: 3,\n    role_name: \"role_3\"\n  }, {\n    id: 4,\n    key: 4,\n    role_name: \"role_4\"\n  }, {\n    id: 5,\n    key: 5,\n    role_name: \"role_5\"\n  }];\n  const mockUserList = [{\n    id: 1,\n    key: 1,\n    user_name: \"name_1\"\n  }, {\n    id: 2,\n    key: 2,\n    user_name: \"name_2\"\n  }, {\n    id: 3,\n    key: 3,\n    user_name: \"name_3\"\n  }, {\n    id: 4,\n    key: 4,\n    user_name: \"name_4\"\n  }, {\n    id: 5,\n    key: 5,\n    user_name: \"name_5\"\n  }];\n\n  const viewUsers = () => {\n    setmodalString(__jsx(UserList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 22\n      }\n    }));\n    setModalType('');\n    setModalTitle('User List');\n    setvisible(true);\n  };\n\n  const renderUsers = record => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }\n    }, __jsx(\"a\", {\n      onClick: () => viewUsers(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, record.section, \" Section\"));\n  };\n\n  const columnGroup = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: (text, record) => checkStatus(record)\n  }, {\n    title: 'Name',\n    dataIndex: 'group_name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Role',\n    dataIndex: 'role_name' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Users',\n    dataIndex: 'user',\n    render: (text, record) => renderUsers(record)\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: (text, record) => renderActionDepartment(record)\n  }];\n  const columnUser = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: (text, record) => checkStatus(record)\n  }, {\n    title: 'Name',\n    dataIndex: 'user_name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Last Name',\n    dataIndex: 'role_name' // render: (text, record) => renderSection(record)\n\n  }];\n\n  const addNewGroup = () => {\n    //call api\n    setvisible(false);\n    console.log(groupName, roleSelect);\n  };\n\n  const FormAddNewGroup = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"Group Name\")), __jsx(Col, {\n      span: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, __jsx(SimpleInput, {\n      onChange: value => groupName = value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"Role\")), __jsx(Col, {\n      span: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => roleSelect = value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, roleList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 48\n      }\n    }, item.role_name))))));\n  };\n\n  const UserList = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      flex: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, __jsx(Table, {\n      dataSource: mockUserList,\n      columns: columnUser,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }))));\n  };\n\n  const openModalAddGroup = () => {\n    setModalTitle('Add New Group');\n    setmodalString(__jsx(FormAddNewGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 22\n      }\n    }));\n    setvisible(true);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: () => openModalAddGroup(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"Add Group\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: mockDataDepartment,\n    columns: columnDepartment,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleModal, {\n    title: modalTitle,\n    type: modalType,\n    onOk: () => addNewGroup(),\n    onCancel: () => setvisible(false),\n    textCancel: textCancel,\n    textOk: textOk,\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }));\n}));\nexport default GroupList;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/group/group-list.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","TcrbButton","TcrbPopconfirm","inject","observer","SimpleModal","SimpleInput","Option","groupName","roleSelect","GroupList","props","UserAccessManagementStore","modalTitle","setModalTitle","textOk","settextOk","textEdit","setTextEdit","textCancel","settextCancel","modalString","setmodalString","modalType","setModalType","visible","setvisible","roleList","setRoleList","mockRoleList","id","key","role_name","mockUserList","user_name","viewUsers","renderUsers","record","section","columnGroup","title","dataIndex","width","render","text","checkStatus","renderActionDepartment","columnUser","addNewGroup","console","log","FormAddNewGroup","padding","value","map","item","index","UserList","openModalAddGroup","mockDataDepartment","columnDepartment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\n\nimport SimpleModal from '../../simple-modal'\nimport SimpleInput from '../../simple-input'\n\nconst { Option } = Select;\nlet groupName = null\nlet roleSelect = null\nconst GroupList = inject('UserAccessManagementStore')\n  (observer((props) => {\n    const { UserAccessManagementStore } = props\n    const [modalTitle, setModalTitle] = useState(\"\")\n    const [textOk, settextOk] = useState(\"Submit\")\n    const [textEdit, setTextEdit] = useState(\"Add Section\")\n    const [textCancel, settextCancel] = useState(\"Cancel\")\n    const [modalString, setmodalString] = useState(\"\")\n    const [modalType, setModalType] = useState('confirm')\n    const [visible, setvisible] = useState(false)\n    const [roleList, setRoleList] = useState([])\n    useEffect(() => {\n      setRoleList(mockRoleList)\n    }, [])\n    const mockRoleList = [\n      {\n        id: 1,\n        key: 1,\n        role_name: \"role_1\"\n      },\n      {\n        id: 2,\n        key: 2,\n        role_name: \"role_2\",\n      },\n      {\n        id: 3,\n        key: 3,\n        role_name: \"role_3\",\n      },\n      {\n        id: 4,\n        key: 4,\n        role_name: \"role_4\",\n      },\n      {\n        id: 5,\n        key: 5,\n        role_name: \"role_5\",\n      }\n    ]\n\n    const mockUserList = [\n      {\n        id: 1,\n        key: 1,\n        user_name: \"name_1\"\n      },\n      {\n        id: 2,\n        key: 2,\n        user_name: \"name_2\",\n      },\n      {\n        id: 3,\n        key: 3,\n        user_name: \"name_3\",\n      },\n      {\n        id: 4,\n        key: 4,\n        user_name: \"name_4\",\n      },\n      {\n        id: 5,\n        key: 5,\n        user_name: \"name_5\",\n      }\n    ]\n\n    const viewUsers = () => {\n      setmodalString(<UserList />)\n      setModalType('')\n      setModalTitle('User List')\n      setvisible(true)\n    }\n\n    const renderUsers = (record) => {\n      return <div>\n        <a onClick={() => viewUsers(record)}>{record.section} Section</a>\n      </div>\n    }\n\n    const columnGroup = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkStatus(record)\n      },\n      {\n        title: 'Name',\n        dataIndex: 'group_name',\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Role',\n        dataIndex: 'role_name',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Users',\n        dataIndex: 'user',\n        render: (text, record) => renderUsers(record)\n      },\n      {\n        title: 'Action',\n        dataIndex: 'operation',\n        width: '10%',\n        render: (text, record) => renderActionDepartment(record)\n      }\n    ]\n\n    const columnUser = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkStatus(record)\n      },\n      {\n        title: 'Name',\n        dataIndex: 'user_name',\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Last Name',\n        dataIndex: 'role_name',\n        // render: (text, record) => renderSection(record)\n      }\n    ]\n\n    const addNewGroup = () => {\n      //call api\n      setvisible(false)\n      console.log(groupName, roleSelect)\n    }\n\n    const FormAddNewGroup = () => {\n      return (\n        <div>\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>\n                Group Name\n            </p>\n            </Col>\n            <Col span={14}>\n              <SimpleInput onChange={(value) => groupName = value} />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Role</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => roleSelect = value}\n              >\n                {roleList.map((item, index) => <Option key={index} value={item.id}>{item.role_name}</Option>)}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n\n    const UserList = () => {\n      return (\n        <div>\n          <Row>\n            <Col flex={100}>\n\n              <Table\n                dataSource={mockUserList}\n                columns={columnUser}\n                size=\"small\"\n              />\n            </Col>\n          </Row>\n\n        </div>\n      )\n    }\n\n    const openModalAddGroup = () => {\n      setModalTitle('Add New Group')\n      setmodalString(<FormAddNewGroup />)\n      setvisible(true)\n    }\n\n    return (\n      <div>\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"primary\" onClick={() => openModalAddGroup()} >Add Group</TcrbButton>\n          </Col>\n        </Row>\n        <Table\n          bordered\n          dataSource={mockDataDepartment}\n          columns={columnDepartment}\n          size=\"small\"\n        />\n        <SimpleModal\n          title={modalTitle}\n          type={modalType}\n          onOk={() => addNewGroup()}\n          onCancel={() => setvisible(false)}\n          textCancel={textCancel}\n          textOk={textOk}\n          width={600}\n          modalString={modalString}\n          visible={visible}\n        />\n      </div>\n    )\n  }))\n\nexport default GroupList\n"]},"metadata":{},"sourceType":"module"}