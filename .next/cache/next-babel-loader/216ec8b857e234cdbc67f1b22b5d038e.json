{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/table-result.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { columnsTranInfo, columnsPartnerInfo, columnsAccInfo, columnsTxn } from './table-column';\nimport { Table, Tabs } from 'antd';\nimport { TcrbTabs } from '../antd-styles/styles';\nimport { data } from './data';\nimport moment from 'moment';\nimport 'moment/locale/th';\nconst {\n  TabPane\n} = Tabs;\n\nfunction callback(key) {\n  console.log(\"CustomerEnquiry :: \", key);\n}\n\nexport const TableResult = inject('customerServiceEnquiry')(observer(props => {\n  const {\n    customerServiceEnquiry\n  } = props;\n  const {\n    0: transInfo,\n    1: setTransInfo\n  } = useState(null);\n  const {\n    0: partnerInfo,\n    1: setPartnerInfo\n  } = useState(null);\n  const {\n    0: accInfo,\n    1: setAccInfo\n  } = useState(null);\n  const {\n    0: txnInfo,\n    1: setTxnInfo\n  } = useState(null);\n  const {\n    0: allList,\n    1: setallList\n  } = useState(null);\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const _buildListData = () => {\n    let arr = customerServiceEnquiry.tmpListData ? customerServiceEnquiry.tmpListData : data;\n    let list1 = [],\n        list2 = [],\n        list3 = [],\n        list4 = [],\n        groupList = [];\n    arr.forEach((e, i) => {\n      let b = moment(e.date.toString()).format('l');\n      console.log(b);\n      list1.push({\n        no: i + 1,\n        tranDate: b,\n        tranTime: e.time,\n        // no: i + 1, tranDate: '29/6/2020', tranTime: e.time,\n        entity: e.parent_partner_code,\n        channel: e.channel,\n        tranType: e.transaction_type,\n        tranSubType: e.transaction_type,\n        prodType: e.product_type,\n        accNo: e.main_account_no,\n        amount: (i + 1) * 1000,\n        status: e.status\n      });\n      list2.push({\n        no: i + 1,\n        partnerTranRef: e.partner_transaction_reference,\n        partnerReqId: e.request_id,\n        bankTranRef: e.transaction_reference,\n        mobileNo: \"099345666\" + JSON.stringify(i)\n      });\n      list3.push({\n        no: i + 1,\n        tcrbAccRef: e.citizen_id,\n        subAcc: e.sub_account_no,\n        accName: e.account_name,\n        accRef1: e.reference_1,\n        accRef2: e.reference_2,\n        accRef3: e.reference_3\n      });\n      list4.push({\n        no: i + 1,\n        txnDrEntry: \"TXD-DR-\" + i,\n        txnCrEntry: \"CR-ENTRY-00\" + i,\n        feeDrEntry: JSON.stringify(i) + \"%\",\n        feeDrAmount: (i + 1) * (i + 30),\n        feeCrEntry: JSON.stringify(i) + \".5%\",\n        feeCrAmount: (i + 1) * 100 + i,\n        amount: (i + 1) * 23 + i\n      });\n      groupList.push({\n        no: i + 1,\n        tranDate: e.date,\n        tranTime: e.time,\n        entity: e.parent_partner_code,\n        channel: e.channel,\n        tranType: e.transaction_type,\n        tranSubType: e.transaction_type,\n        prodType: e.product_type,\n        accNo: e.main_account_no,\n        amount: (i + 1) * 1000,\n        status: e.status,\n        partnerReqId: e.request_id,\n        bankTranRef: e.transaction_reference,\n        mobileNo: \"099345666\" + JSON.stringify(i),\n        tcrbAccRef: e.citizen_id,\n        subAcc: e.sub_account_no,\n        accName: e.account_name,\n        accRef1: e.reference_1,\n        accRef2: e.reference_2,\n        accRef3: e.reference_3,\n        txnCrEntry: \"CR-ENTRY-00\" + i,\n        feeDrEntry: JSON.stringify(i) + \"%\",\n        feeDrAmount: (i + 1) * (i + 30),\n        feeCrEntry: JSON.stringify(i) + \".5%\",\n        feeCrAmount: (i + 1) * 100 + i,\n        amount: (i + 1) * 23 + i\n      });\n    });\n    setTransInfo(list1);\n    setPartnerInfo(list2);\n    setAccInfo(list3);\n    setTxnInfo(list4);\n    setallList(groupList);\n  };\n\n  useEffect(() => {\n    _buildListData();\n  }, []);\n  useEffect(() => {\n    _buildListData();\n  }, [customerServiceEnquiry.tmpListData]);\n  return __jsx(TcrbTabs, {\n    defaultActiveKey: \"1\",\n    onChange: callback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(TabPane, {\n    tab: \"Transaction Info\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    onRow: (item, index) => {\n      return {\n        onClick: () => {\n          let tmpList = allList.find(e => e.no == item.no);\n          console.log(\"ITEM CLICK : \", tmpList);\n          customerServiceEnquiry.setTmpEnquiryRow(tmpList);\n        }\n      };\n    },\n    columns: columnsTranInfo,\n    dataSource: transInfo,\n    pagination: {\n      current: page\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })), __jsx(TabPane, {\n    tab: \"Partner Info\",\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    onRow: (item, index) => ({\n      onClick: () => {\n        let tmpList = allList.find(e => e.no == item.no);\n        console.log(\"ITEM CLICK : \", tmpList);\n        customerServiceEnquiry.setTmpEnquiryRow(tmpList);\n      }\n    }),\n    columns: columnsPartnerInfo,\n    dataSource: partnerInfo,\n    pagination: {\n      current: page\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), __jsx(TabPane, {\n    tab: \"Account Info\",\n    key: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    onRow: (item, index) => ({\n      onClick: () => {\n        let tmpList = allList.find(e => e.no == item.no);\n        console.log(\"ITEM CLICK : \", tmpList);\n        customerServiceEnquiry.setTmpEnquiryRow(tmpList);\n      }\n    }),\n    columns: columnsAccInfo,\n    dataSource: accInfo,\n    pagination: {\n      current: page\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })), __jsx(TabPane, {\n    tab: \"Txn\",\n    key: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    onRow: (item, index) => ({\n      onClick: () => {\n        let tmpList = allList.find(e => e.no == item.no);\n        console.log(\"ITEM CLICK : \", tmpList);\n        customerServiceEnquiry.setTmpEnquiryRow(tmpList);\n      }\n    }),\n    columns: columnsTxn,\n    dataSource: txnInfo,\n    pagination: {\n      current: page\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })));\n}));","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/table-result.js"],"names":["React","useState","useEffect","inject","observer","styled","columnsTranInfo","columnsPartnerInfo","columnsAccInfo","columnsTxn","Table","Tabs","TcrbTabs","data","moment","TabPane","callback","key","console","log","TableResult","props","customerServiceEnquiry","transInfo","setTransInfo","partnerInfo","setPartnerInfo","accInfo","setAccInfo","txnInfo","setTxnInfo","allList","setallList","page","setPage","_buildListData","arr","tmpListData","list1","list2","list3","list4","groupList","forEach","e","i","b","date","toString","format","push","no","tranDate","tranTime","time","entity","parent_partner_code","channel","tranType","transaction_type","tranSubType","prodType","product_type","accNo","main_account_no","amount","status","partnerTranRef","partner_transaction_reference","partnerReqId","request_id","bankTranRef","transaction_reference","mobileNo","JSON","stringify","tcrbAccRef","citizen_id","subAcc","sub_account_no","accName","account_name","accRef1","reference_1","accRef2","reference_2","accRef3","reference_3","txnDrEntry","txnCrEntry","feeDrEntry","feeDrAmount","feeCrEntry","feeCrAmount","current","item","index","onClick","tmpList","find","setTmpEnquiryRow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport styled from 'styled-components';\nimport { columnsTranInfo, columnsPartnerInfo, columnsAccInfo, columnsTxn } from './table-column';\nimport { Table, Tabs } from 'antd';\nimport { TcrbTabs } from '../antd-styles/styles'\nimport { data } from './data'\nimport moment from 'moment'\nimport 'moment/locale/th'\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(\"CustomerEnquiry :: \", key);\n}\n\nexport const TableResult =\n  inject('customerServiceEnquiry')\n    (observer((props) => {\n      const { customerServiceEnquiry } = props\n      const [transInfo, setTransInfo] = useState(null)\n      const [partnerInfo, setPartnerInfo] = useState(null)\n      const [accInfo, setAccInfo] = useState(null)\n      const [txnInfo, setTxnInfo] = useState(null)\n      const [allList, setallList] = useState(null)\n      const [page, setPage] = useState(1)\n\n      const _buildListData = () => {\n        let arr = customerServiceEnquiry.tmpListData ? customerServiceEnquiry.tmpListData : data\n        let list1 = [], list2 = [], list3 = [], list4 = [], groupList = []\n        arr.forEach((e, i) => {\n          let b = moment((e.date).toString()).format('l')\n          console.log(b)\n          list1.push({\n            no: i + 1, tranDate: b, tranTime: e.time,\n            // no: i + 1, tranDate: '29/6/2020', tranTime: e.time,\n            entity: e.parent_partner_code, channel: e.channel,\n            tranType: e.transaction_type, tranSubType: e.transaction_type,\n            prodType: e.product_type,\n            accNo: e.main_account_no, amount: (i + 1) * 1000, status: e.status\n          })\n          list2.push({\n            no: i + 1, partnerTranRef: e.partner_transaction_reference,\n            partnerReqId: e.request_id, bankTranRef: e.transaction_reference,\n            mobileNo: \"099345666\" + JSON.stringify(i)\n          })\n          list3.push({\n            no: i + 1,\n            tcrbAccRef: e.citizen_id, subAcc: e.sub_account_no,\n            accName: e.account_name, accRef1: e.reference_1,\n            accRef2: e.reference_2, accRef3: e.reference_3,\n          })\n          list4.push({\n            no: i + 1, txnDrEntry: \"TXD-DR-\" + i,\n            txnCrEntry: \"CR-ENTRY-00\" + i, feeDrEntry: JSON.stringify(i) + \"%\",\n            feeDrAmount: (i + 1) * (i + 30), feeCrEntry: JSON.stringify(i) + \".5%\",\n            feeCrAmount: ((i + 1) * 100) + i, amount: ((i + 1) * 23) + i\n          })\n          groupList.push({\n            no: i + 1, tranDate: e.date, tranTime: e.time,\n            entity: e.parent_partner_code, channel: e.channel,\n            tranType: e.transaction_type, tranSubType: e.transaction_type,\n            prodType: e.product_type,\n            accNo: e.main_account_no, amount: (i + 1) * 1000, status: e.status,\n            partnerReqId: e.request_id, bankTranRef: e.transaction_reference,\n            mobileNo: \"099345666\" + JSON.stringify(i),\n            tcrbAccRef: e.citizen_id, subAcc: e.sub_account_no,\n            accName: e.account_name, accRef1: e.reference_1,\n            accRef2: e.reference_2, accRef3: e.reference_3,\n            txnCrEntry: \"CR-ENTRY-00\" + i, feeDrEntry: JSON.stringify(i) + \"%\",\n            feeDrAmount: (i + 1) * (i + 30), feeCrEntry: JSON.stringify(i) + \".5%\",\n            feeCrAmount: ((i + 1) * 100) + i, amount: ((i + 1) * 23) + i\n          })\n        })\n\n        setTransInfo(list1)\n        setPartnerInfo(list2)\n        setAccInfo(list3)\n        setTxnInfo(list4)\n        setallList(groupList)\n      }\n\n      useEffect(() => {\n        _buildListData()\n      }, [])\n\n      useEffect(() => {\n        _buildListData()\n      }, [customerServiceEnquiry.tmpListData])\n\n      return (\n        <TcrbTabs defaultActiveKey=\"1\" onChange={callback}>\n          <TabPane tab=\"Transaction Info\" key=\"1\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => {\n                return {\n                  onClick: () => {\n                    let tmpList = allList.find(e => e.no == item.no)\n                    console.log(\"ITEM CLICK : \", tmpList)\n                    customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                  },\n                }\n              }}\n              columns={columnsTranInfo} dataSource={transInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"Partner Info\" key=\"2\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => ({\n                onClick: () => {\n                  let tmpList = allList.find(e => e.no == item.no)\n                  console.log(\"ITEM CLICK : \", tmpList)\n                  customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                },\n              })}\n              columns={columnsPartnerInfo} dataSource={partnerInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"Account Info\" key=\"3\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => ({\n                onClick: () => {\n                  let tmpList = allList.find(e => e.no == item.no)\n                  console.log(\"ITEM CLICK : \", tmpList)\n                  customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                },\n              })}\n              columns={columnsAccInfo} dataSource={accInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"Txn\" key=\"4\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => ({\n                onClick: () => {\n                  let tmpList = allList.find(e => e.no == item.no)\n                  console.log(\"ITEM CLICK : \", tmpList)\n                  customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                },\n              })}\n              columns={columnsTxn} dataSource={txnInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n        </TcrbTabs>\n      )\n\n    }))\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}