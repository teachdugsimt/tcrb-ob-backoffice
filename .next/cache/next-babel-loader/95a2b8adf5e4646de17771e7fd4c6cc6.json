{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/group/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport GroupList from './group-list';\nimport ManageGroup from './manage-group';\nconst Group = inject('userAccessManagementStore')(observer(props => {\n  const {\n    userAccessManagementStore\n  } = props;\n  const {\n    0: isViewManageGroup,\n    1: setIsViewManageGroup\n  } = useState(false);\n  useEffect(() => {\n    if (userAccessManagementStore.nextPageIsManageGroup) {\n      setIsViewManageGroup(true);\n    } else {\n      setIsViewManageGroup(false);\n    }\n  }, [userAccessManagementStore.nextPageIsManageGroup]);\n  return isViewManageGroup ? __jsx(ManageGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }\n  }) : __jsx(GroupList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 45\n    }\n  });\n}));\nexport default Group;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/group/index.js"],"names":["React","useState","useEffect","inject","observer","GroupList","ManageGroup","Group","props","userAccessManagementStore","isViewManageGroup","setIsViewManageGroup","nextPageIsManageGroup"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,KAAK,GAAGJ,MAAM,CAAC,2BAAD,CAAN,CACXC,QAAQ,CAAEI,KAAD,IAAW;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAgCD,KAAtC;AACA,QAAM;AAAA,OAACE,iBAAD;AAAA,OAAoBC;AAApB,MAA4CV,QAAQ,CAAC,KAAD,CAA1D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,yBAAyB,CAACG,qBAA9B,EAAqD;AACnDD,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,KAFD,MAEO;AACLA,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AACF,GANQ,EAMN,CAACF,yBAAyB,CAACG,qBAA3B,CANM,CAAT;AAOA,SACEF,iBAAiB,GAAG,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAqB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxC;AAGD,CAdQ,CADG,CAAd;AAiBA,eAAeH,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport GroupList from './group-list'\nimport ManageGroup from './manage-group'\n\nconst Group = inject('userAccessManagementStore')\n  (observer((props) => {\n    const { userAccessManagementStore } = props\n    const [isViewManageGroup, setIsViewManageGroup] = useState(false)\n\n    useEffect(() => {\n      if (userAccessManagementStore.nextPageIsManageGroup) {\n        setIsViewManageGroup(true)\n      } else {\n        setIsViewManageGroup(false)\n      }\n    }, [userAccessManagementStore.nextPageIsManageGroup])\n    return (\n      isViewManageGroup ? <ManageGroup /> : <GroupList />\n    )\n  }))\n\nexport default Group\n"]},"metadata":{},"sourceType":"module"}