{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/group/group-list.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport SimpleModal from '../../simple-modal';\nimport SimpleInput from '../../simple-input';\nvar Option = Select.Option;\nvar groupName = null;\nvar roleSelect = null;\nvar GroupList = inject('UserAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var UserAccessManagementStore = props.UserAccessManagementStore;\n\n  var _useState = useState(\"\"),\n      modalTitle = _useState[0],\n      setModalTitle = _useState[1];\n\n  var _useState2 = useState(\"Submit\"),\n      textOk = _useState2[0],\n      settextOk = _useState2[1];\n\n  var _useState3 = useState(\"Add Section\"),\n      textEdit = _useState3[0],\n      setTextEdit = _useState3[1];\n\n  var _useState4 = useState(\"Cancel\"),\n      textCancel = _useState4[0],\n      settextCancel = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      modalString = _useState5[0],\n      setmodalString = _useState5[1];\n\n  var _useState6 = useState('confirm'),\n      modalType = _useState6[0],\n      setModalType = _useState6[1];\n\n  var _useState7 = useState(false),\n      visible = _useState7[0],\n      setvisible = _useState7[1];\n\n  var _useState8 = useState([]),\n      roleList = _useState8[0],\n      setRoleList = _useState8[1];\n\n  useEffect(function () {\n    setRoleList(mockRoleList);\n  }, []);\n  var mockRoleList = [{\n    id: 1,\n    key: 1,\n    role_name: \"role_1\"\n  }, {\n    id: 2,\n    key: 2,\n    role_name: \"role_2\"\n  }, {\n    id: 3,\n    key: 3,\n    role_name: \"role_3\"\n  }, {\n    id: 4,\n    key: 4,\n    role_name: \"role_4\"\n  }, {\n    id: 5,\n    key: 5,\n    role_name: \"role_5\"\n  }];\n  var mockUserList = [{\n    id: 1,\n    key: 1,\n    user_name: \"name_1\"\n  }, {\n    id: 2,\n    key: 2,\n    user_name: \"name_2\"\n  }, {\n    id: 3,\n    key: 3,\n    user_name: \"name_3\"\n  }, {\n    id: 4,\n    key: 4,\n    user_name: \"name_4\"\n  }, {\n    id: 5,\n    key: 5,\n    user_name: \"name_5\"\n  }];\n\n  var viewUsers = function viewUsers() {\n    setmodalString(__jsx(UserList, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 22\n      }\n    }));\n    setModalType('');\n    setModalTitle('User List');\n    setvisible(true);\n  };\n\n  var renderUsers = function renderUsers(record) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }\n    }, __jsx(\"a\", {\n      onClick: function onClick() {\n        return viewUsers(record);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, record.section, \" Section\"));\n  };\n\n  var columnGroup = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkStatus(record);\n    }\n  }, {\n    title: 'Name',\n    dataIndex: 'group_name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Role',\n    dataIndex: 'role_name' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Users',\n    dataIndex: 'user',\n    render: function render(text, record) {\n      return renderUsers(record);\n    }\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: function render(text, record) {\n      return renderActionDepartment(record);\n    }\n  }];\n  var columnUser = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkStatus(record);\n    }\n  }, {\n    title: 'Name',\n    dataIndex: 'user_name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Last Name',\n    dataIndex: 'role_name' // render: (text, record) => renderSection(record)\n\n  }];\n\n  var addNewGroup = function addNewGroup() {\n    //call api\n    setvisible(false);\n    console.log(groupName, roleSelect);\n  };\n\n  var FormAddNewGroup = function FormAddNewGroup() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"Group Name\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, __jsx(SimpleInput, {\n      onChange: function onChange(value) {\n        return groupName = value;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"Role\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return roleSelect = value;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, roleList.map(function (item, index) {\n      return __jsx(Option, {\n        key: index,\n        value: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 48\n        }\n      }, item.role_name);\n    })))));\n  };\n\n  var UserList = function UserList() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      flex: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, __jsx(Table, {\n      dataSource: mockUserList,\n      columns: columnUser,\n      size: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }))));\n  };\n\n  var openModalAddGroup = function openModalAddGroup() {\n    setModalTitle('Add New Group');\n    setmodalString(__jsx(FormAddNewGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 22\n      }\n    }));\n    setvisible(true);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      return openModalAddGroup();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"Add Group\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: mockDataDepartment,\n    columns: columnDepartment,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleModal, {\n    title: modalTitle,\n    type: modalType,\n    onOk: function onOk() {\n      return addNewGroup();\n    },\n    onCancel: function onCancel() {\n      return setvisible(false);\n    },\n    textCancel: textCancel,\n    textOk: textOk,\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }));\n}, \"tKk+a3vSH2z8X7vZ7SESTVSRdtw=\")));\nexport default GroupList;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/group/group-list.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","TcrbButton","TcrbPopconfirm","inject","observer","SimpleModal","SimpleInput","Option","groupName","roleSelect","GroupList","props","UserAccessManagementStore","modalTitle","setModalTitle","textOk","settextOk","textEdit","setTextEdit","textCancel","settextCancel","modalString","setmodalString","modalType","setModalType","visible","setvisible","roleList","setRoleList","mockRoleList","id","key","role_name","mockUserList","user_name","viewUsers","renderUsers","record","section","columnGroup","title","dataIndex","width","render","text","checkStatus","renderActionDepartment","columnUser","addNewGroup","console","log","FormAddNewGroup","padding","value","map","item","index","UserList","openModalAddGroup","mockDataDepartment","columnDepartment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\n\nimport SimpleModal from '../../simple-modal'\nimport SimpleInput from '../../simple-input'\n\nconst { Option } = Select;\nlet groupName = null\nlet roleSelect = null\nconst GroupList = inject('UserAccessManagementStore')\n  (observer((props) => {\n    const { UserAccessManagementStore } = props\n    const [modalTitle, setModalTitle] = useState(\"\")\n    const [textOk, settextOk] = useState(\"Submit\")\n    const [textEdit, setTextEdit] = useState(\"Add Section\")\n    const [textCancel, settextCancel] = useState(\"Cancel\")\n    const [modalString, setmodalString] = useState(\"\")\n    const [modalType, setModalType] = useState('confirm')\n    const [visible, setvisible] = useState(false)\n    const [roleList, setRoleList] = useState([])\n    useEffect(() => {\n      setRoleList(mockRoleList)\n    }, [])\n    const mockRoleList = [\n      {\n        id: 1,\n        key: 1,\n        role_name: \"role_1\"\n      },\n      {\n        id: 2,\n        key: 2,\n        role_name: \"role_2\",\n      },\n      {\n        id: 3,\n        key: 3,\n        role_name: \"role_3\",\n      },\n      {\n        id: 4,\n        key: 4,\n        role_name: \"role_4\",\n      },\n      {\n        id: 5,\n        key: 5,\n        role_name: \"role_5\",\n      }\n    ]\n\n    const mockUserList = [\n      {\n        id: 1,\n        key: 1,\n        user_name: \"name_1\"\n      },\n      {\n        id: 2,\n        key: 2,\n        user_name: \"name_2\",\n      },\n      {\n        id: 3,\n        key: 3,\n        user_name: \"name_3\",\n      },\n      {\n        id: 4,\n        key: 4,\n        user_name: \"name_4\",\n      },\n      {\n        id: 5,\n        key: 5,\n        user_name: \"name_5\",\n      }\n    ]\n\n    const viewUsers = () => {\n      setmodalString(<UserList />)\n      setModalType('')\n      setModalTitle('User List')\n      setvisible(true)\n    }\n\n    const renderUsers = (record) => {\n      return <div>\n        <a onClick={() => viewUsers(record)}>{record.section} Section</a>\n      </div>\n    }\n\n    const columnGroup = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkStatus(record)\n      },\n      {\n        title: 'Name',\n        dataIndex: 'group_name',\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Role',\n        dataIndex: 'role_name',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Users',\n        dataIndex: 'user',\n        render: (text, record) => renderUsers(record)\n      },\n      {\n        title: 'Action',\n        dataIndex: 'operation',\n        width: '10%',\n        render: (text, record) => renderActionDepartment(record)\n      }\n    ]\n\n    const columnUser = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkStatus(record)\n      },\n      {\n        title: 'Name',\n        dataIndex: 'user_name',\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Last Name',\n        dataIndex: 'role_name',\n        // render: (text, record) => renderSection(record)\n      }\n    ]\n\n    const addNewGroup = () => {\n      //call api\n      setvisible(false)\n      console.log(groupName, roleSelect)\n    }\n\n    const FormAddNewGroup = () => {\n      return (\n        <div>\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>\n                Group Name\n            </p>\n            </Col>\n            <Col span={14}>\n              <SimpleInput onChange={(value) => groupName = value} />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Role</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => roleSelect = value}\n              >\n                {roleList.map((item, index) => <Option key={index} value={item.id}>{item.role_name}</Option>)}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n\n    const UserList = () => {\n      return (\n        <div>\n          <Row>\n            <Col flex={100}>\n\n              <Table\n                dataSource={mockUserList}\n                columns={columnUser}\n                size=\"small\"\n              />\n            </Col>\n          </Row>\n\n        </div>\n      )\n    }\n\n    const openModalAddGroup = () => {\n      setModalTitle('Add New Group')\n      setmodalString(<FormAddNewGroup />)\n      setvisible(true)\n    }\n\n    return (\n      <div>\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"primary\" onClick={() => openModalAddGroup()} >Add Group</TcrbButton>\n          </Col>\n        </Row>\n        <Table\n          bordered\n          dataSource={mockDataDepartment}\n          columns={columnDepartment}\n          size=\"small\"\n        />\n        <SimpleModal\n          title={modalTitle}\n          type={modalType}\n          onOk={() => addNewGroup()}\n          onCancel={() => setvisible(false)}\n          textCancel={textCancel}\n          textOk={textOk}\n          width={600}\n          modalString={modalString}\n          visible={visible}\n        />\n      </div>\n    )\n  }))\n\nexport default GroupList\n"]},"metadata":{},"sourceType":"module"}