{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport SimpleSearch from '../simple-search';\nimport styled from 'styled-components';\nimport { Row, Switch, Col, Button, Input } from 'antd';\nimport { useStores } from '../../hooks/use-stores';\nimport SimpleModal from '../simple-modal';\nvar StyledA = styled.a.withConfig({\n  displayName: \"account-unbinding__StyledA\",\n  componentId: \"sc-1wve73-0\"\n})([\"display:initial;padding-right:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.spacing.medium;\n});\n_c = StyledA;\nvar StyledP = styled.p.withConfig({\n  displayName: \"account-unbinding__StyledP\",\n  componentId: \"sc-1wve73-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.spacing.medium;\n});\n_c2 = StyledP;\nvar StyledSpan = styled.span.withConfig({\n  displayName: \"account-unbinding__StyledSpan\",\n  componentId: \"sc-1wve73-2\"\n})([\"display:initial;padding-left:\", \"px !important;\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.spacing.medium;\n});\n_c3 = StyledSpan;\nvar StyledInput = styled(Input).withConfig({\n  displayName: \"account-unbinding__StyledInput\",\n  componentId: \"sc-1wve73-3\"\n})([\"\", \"\"], function (_ref4) {\n  var readOnly = _ref4.readOnly;\n  return readOnly && \"\\n          border-style: solid !important;\\n          border-width: 0px 0px 1px 0px !important;\\n          border-color: black !important;\\n          box-shadow: none !important;\\n          border-right-style: unset !important;\\n          border-right-width: 0px !important\\n      \";\n});\n_c4 = StyledInput;\nexport default function AccountUnbinding() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      isSearch = _useState[0],\n      setIsSearch = _useState[1];\n\n  var _useState2 = useState(false),\n      viewDetail = _useState2[0],\n      setViewDetail = _useState2[1];\n\n  var _useState3 = useState(false),\n      visible = _useState3[0],\n      setVisble = _useState3[1];\n\n  var _useState4 = useState(''),\n      modalString = _useState4[0],\n      setModalString = _useState4[1];\n\n  var _useState5 = useState(''),\n      accountId = _useState5[0],\n      setAccountId = _useState5[1];\n\n  var _useStores = useStores(),\n      customerServicesMenuStore = _useStores.customerServicesMenuStore;\n\n  var numbers = [1, 2, 3, 4, 5];\n  var stringSwitch = [{\n    accountName: 'Binding to TCRB Mobile Banking',\n    accountBindingStatus: true,\n    accountType: '1'\n  }, {\n    accountName: 'Binding to Micro Pay',\n    accountBindingStatus: true,\n    accountType: '2'\n  }, {\n    accountName: 'Binding to True Money Wallet',\n    accountBindingStatus: true,\n    accountType: '3'\n  }];\n  var stringAccount = [{\n    accountNumber: '2233344514',\n    accountName: 'Normal Saving',\n    accountType: '1'\n  }, {\n    accountNumber: '123456789032',\n    accountName: 'Revolving Loan Non TCG Nano',\n    accountType: '2'\n  }];\n\n  var searchIdCardNumber = function searchIdCardNumber(value) {\n    // console.log('eiei search:' + value)\n    // setIdCard(value)\n    setIsSearch(true);\n  };\n\n  var selectedMenu = function selectedMenu(selectedAccount) {\n    switch (selectedAccount.accountType) {\n      case '1':\n        customerServicesMenuStore.setAccountId(selectedAccount.accountNumber);\n        setViewDetail(true);\n        break;\n\n      case '2':\n        console.log('eiei menu2', selectedAccount);\n        customerServicesMenuStore.setAccountId(selectedAccount.accountNumber); // setAccountId(accountId)\n\n        setViewDetail(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var _onChange = function onChange(switchSelected, index) {\n    // console.log(\"change:\" + value + \",indexOf :\" + index)\n    if (switchSelected.accountBindingStatus === true) {\n      setVisble(true);\n\n      switch (switchSelected.accountType) {\n        case '1':\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }\n          }, __jsx(\"p\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }\n          }, \"Unbinding !!!\"), __jsx(\"p\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }\n          }, \"Account \", customerServicesMenuStore.accountId, \" from Mobile Banking\")));\n          break;\n\n        case '2':\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }\n          }, __jsx(\"p\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }\n          }, \"Unbinding !!!\"), __jsx(\"p\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }\n          }, \"Account \", customerServicesMenuStore.accountId, \" from Micro Pay\")));\n          break;\n\n        case '3':\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }\n          }, __jsx(\"p\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }\n          }, \"Unbinding !!!\"), __jsx(\"p\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }\n          }, \"Account \", customerServicesMenuStore.accountId, \" from True Money Wallet\")));\n          break;\n\n        default:\n          break;\n      }\n    } else {// setIsChecked(false)\n    }\n  };\n\n  var unBindingAccount = function unBindingAccount() {};\n\n  var SwitchList = function SwitchList() {\n    var listItems = stringSwitch.map(function (string, index) {\n      return __jsx(Row, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, __jsx(Col, {\n        span: 24,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, __jsx(Switch, {\n        defaultChecked: string.accountBindingStatus,\n        onChange: function onChange(checked) {\n          return _onChange(string);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }), __jsx(StyledP, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 105\n        }\n      }, string.accountName)));\n    });\n    return __jsx(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  var AccountList = function AccountList() {\n    var listItems = stringAccount.map(function (string, index) {\n      return __jsx(Row, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, __jsx(Col, {\n        span: 24,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, __jsx(StyledA, {\n        onClick: function onClick() {\n          selectedMenu(string);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, string.accountNumber), __jsx(StyledSpan, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 93\n        }\n      }, \" \", string.accountName)));\n    });\n    return __jsx(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  var newSearch = __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: \"ID Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(AccountList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }) : '');\n\n  var accountDetail = __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setViewDetail(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Back\")), __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    readOnly: true,\n    prefix: 'Account No',\n    defaultValue: customerServicesMenuStore.accountId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, __jsx(SwitchList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleModal, {\n    onOk: function onOk() {\n      return setVisble(false);\n    },\n    onCancel: function onCancel() {\n      return setVisble(false);\n    },\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })));\n\n  return viewDetail ? accountDetail : newSearch;\n}\n\n_s(AccountUnbinding, \"EBxRX93Sk93J+fUJxeXwWDEjoLA=\", false, function () {\n  return [useStores];\n});\n\n_c5 = AccountUnbinding;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledA\");\n$RefreshReg$(_c2, \"StyledP\");\n$RefreshReg$(_c3, \"StyledSpan\");\n$RefreshReg$(_c4, \"StyledInput\");\n$RefreshReg$(_c5, \"AccountUnbinding\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js"],"names":["React","useState","SimpleSearch","styled","Row","Switch","Col","Button","Input","useStores","SimpleModal","StyledA","a","theme","spacing","medium","StyledP","p","StyledSpan","span","StyledInput","readOnly","AccountUnbinding","isSearch","setIsSearch","viewDetail","setViewDetail","visible","setVisble","modalString","setModalString","accountId","setAccountId","customerServicesMenuStore","numbers","stringSwitch","accountName","accountBindingStatus","accountType","stringAccount","accountNumber","searchIdCardNumber","value","selectedMenu","selectedAccount","console","log","onChange","switchSelected","index","textAlign","unBindingAccount","SwitchList","listItems","map","string","checked","AccountList","newSearch","marginTop","accountDetail"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport SimpleSearch from '../simple-search'\nimport styled from 'styled-components'\nimport { Row, Switch, Col, Button, Input } from 'antd';\nimport { useStores } from '../../hooks/use-stores'\nimport SimpleModal from '../simple-modal'\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-right: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledP = styled.p`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledInput = styled(Input)`\n      ${({ readOnly }) => readOnly && `\n          border-style: solid !important;\n          border-width: 0px 0px 1px 0px !important;\n          border-color: black !important;\n          box-shadow: none !important;\n          border-right-style: unset !important;\n          border-right-width: 0px !important\n      `}\n`\nexport default function AccountUnbinding() {\n  const [isSearch, setIsSearch] = useState(false);\n  const [viewDetail, setViewDetail] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const [accountId, setAccountId] = useState('')\n  const { customerServicesMenuStore } = useStores()\n  const numbers = [1, 2, 3, 4, 5];\n  const stringSwitch = [{ accountName: 'Binding to TCRB Mobile Banking', accountBindingStatus: true, accountType: '1' }, { accountName: 'Binding to Micro Pay', accountBindingStatus: true, accountType: '2' }, { accountName: 'Binding to True Money Wallet', accountBindingStatus: true, accountType: '3' }]\n  const stringAccount = [{ accountNumber: '2233344514', accountName: 'Normal Saving', accountType: '1' }, { accountNumber: '123456789032', accountName: 'Revolving Loan Non TCG Nano', accountType: '2' }]\n\n  const searchIdCardNumber = (value) => {\n    // console.log('eiei search:' + value)\n    // setIdCard(value)\n    setIsSearch(true)\n  }\n  const selectedMenu = (selectedAccount) => {\n    switch (selectedAccount.accountType) {\n      case '1':\n        customerServicesMenuStore.setAccountId(selectedAccount.accountNumber)\n        setViewDetail(true)\n        break;\n      case '2':\n        console.log('eiei menu2', selectedAccount)\n        customerServicesMenuStore.setAccountId(selectedAccount.accountNumber)\n        // setAccountId(accountId)\n        setViewDetail(true)\n        break;\n      default:\n        break;\n    }\n  }\n  const onChange = (switchSelected, index) => {\n    // console.log(\"change:\" + value + \",indexOf :\" + index)\n\n    if (switchSelected.accountBindingStatus === true) {\n      setVisble(true)\n      switch (switchSelected.accountType) {\n        case '1':\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p>Unbinding !!!</p>\n              <p>Account {customerServicesMenuStore.accountId} from Mobile Banking</p>\n            </div>\n          )\n          break;\n        case '2':\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p>Unbinding !!!</p>\n              <p>Account {customerServicesMenuStore.accountId} from Micro Pay</p>\n            </div>\n          )\n          break;\n        case '3':\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p>Unbinding !!!</p>\n              <p>Account {customerServicesMenuStore.accountId} from True Money Wallet</p>\n            </div>\n          )\n          break;\n        default:\n          break;\n      }\n    } else {\n      // setIsChecked(false)\n    }\n  }\n\n  const unBindingAccount = () => {\n\n  }\n\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) =>\n      <Row key={index}>\n        <Col span={24}>\n          <Switch defaultChecked={string.accountBindingStatus} onChange={checked => onChange(string)} /><StyledP>{string.accountName}</StyledP>\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  const AccountList = () => {\n    const listItems = stringAccount.map((string, index) =>\n      <Row key={index}>\n        <Col span={24}>\n          <StyledA onClick={() => { selectedMenu(string) }}>{string.accountNumber}</StyledA><StyledSpan> {string.accountName}</StyledSpan>\n\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  const newSearch = (\n    <div style={{ marginTop: 20 }}>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (\n        <AccountList />\n      ) : ('')}\n    </div>)\n\n  const accountDetail = (\n    <div style={{ marginTop: 20 }}>\n      <Row gutter={[4, 24]}>\n        <Button onClick={() => setViewDetail(false)}>Back</Button>\n      </Row>\n      <Row gutter={[4, 24]}>\n        <Col span={6}>\n          <StyledInput readOnly={true} prefix={'Account No'} defaultValue={customerServicesMenuStore.accountId} />\n\n        </Col>\n      </Row>\n      <div style={{ marginTop: 20 }} >\n        <SwitchList />\n        <SimpleModal\n          onOk={() => setVisble(false)}\n          onCancel={() => setVisble(false)}\n          okText=\"Confirm\"\n          cancelText=\"Cancel\"\n          modalString={modalString}\n          visible={visible}\n        />\n      </div>\n    </div>\n  )\n  return (viewDetail) ? accountDetail : newSearch\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}