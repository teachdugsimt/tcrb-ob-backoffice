{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, createRef } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../i18n';\nimport styled from 'styled-components';\nimport { toJS } from 'mobx';\nimport SimpleMenu from '../simple-menu';\nimport SimpleInput from '../simple-input';\nimport SimpleModal from '../simple-modal';\nconst {\n  Option\n} = _Select;\nconst ProductLimitSetup = inject('businessParametersSetupStore')(observer(props => {\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    0: viewDetailProduct,\n    1: setViewDetailProduct\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: showLimitPartner,\n    1: setShowLimitPartner\n  } = useState(false);\n  const {\n    0: editingKey,\n    1: setEditingKey\n  } = useState('');\n  const {\n    0: titleModal,\n    1: setTitleModal\n  } = useState('');\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState('');\n  const {\n    0: selectPartnerAndProduct,\n    1: setSelectPartnerAndProduct\n  } = useState({});\n  const {\n    0: channelPartnerList,\n    1: setChannelPartnerList\n  } = useState([]);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n  const {\n    0: viewSpecificProduct,\n    1: setViewSpecificProduct\n  } = useState(false);\n  const {\n    businessParametersSetupStore,\n    t\n  } = props;\n\n  const [form] = _Form.useForm();\n\n  var txnLimit,\n      dailyLimit = ''; // var selectPartnerAndProduct = {}\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue(_objectSpread({\n      product_type: '',\n      product_description: '',\n      transaction_limit: '',\n      daily_limit: '',\n      Specific: ''\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  const EditableCell = (_ref) => {\n    let {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children\n    } = _ref,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    const inputNode = inputType === 'number' ? __jsx(_InputNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 52\n      }\n    }) : __jsx(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 70\n      }\n    });\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(_Form.Item, {\n      name: dataIndex == 'product_type' ? 'product_code' : dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: inputType === 'number' ? true : false,\n        message: `Please Input ${title}!`\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, dataIndex == 'product_type' ? __jsx(_Select, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, productList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.product_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 55\n      }\n    }, item.product_type))) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, inputNode)) : children);\n  };\n\n  useEffect(() => {\n    // setDataSource(mockDataSource)\n    businessParametersSetupStore.getDataProductLimit();\n    businessParametersSetupStore.getDataChannelPartnerList();\n    businessParametersSetupStore.getDataProductList();\n  }, []);\n  useEffect(() => {\n    if (businessParametersSetupStore.productLimit.length > 0) {\n      addKeyToDataSource(businessParametersSetupStore.productLimit).then(result => {\n        businessParametersSetupStore.arrayProductLimit = result;\n        setDataSource(result);\n      });\n    }\n  }, [businessParametersSetupStore.productLimit]);\n  useEffect(() => {\n    //if(businessParametersSetupStore.productLimitDetail)\n    console.log(toJS(businessParametersSetupStore.productLimitDetail));\n\n    if (businessParametersSetupStore.productLimitDetail != null) {\n      setViewDetailProduct(true);\n    }\n  }, [businessParametersSetupStore.productLimitDetail]);\n  useEffect(() => {\n    if (businessParametersSetupStore.channelPartnerList.length > 1) {\n      setChannelPartnerList(businessParametersSetupStore.channelPartnerList);\n    }\n  }, [businessParametersSetupStore.channelPartnerList]);\n  useEffect(() => {\n    if (businessParametersSetupStore.productList.length > 1) {\n      setProductList(businessParametersSetupStore.productList);\n    }\n  }, [businessParametersSetupStore.productList]);\n\n  const handleDelete = key => {\n    // const dataSource = [...this.state.dataSource];\n    // setDataSource(dataSource.filter(item => item.key !== key))\n    console.log(key);\n  };\n\n  const addKeyToDataSource = arrayDataSource => {\n    let newDataSource = arrayDataSource;\n\n    for (let index = 0; index < newDataSource.length; index++) {\n      newDataSource[index].key = index + 1;\n    }\n\n    return new Promise(resolve => {\n      resolve(newDataSource);\n    });\n  };\n\n  const convertToArrayOptionSelect = arrayObject => {\n    let result = arrayObject.map(partnerList => [partnerList.partner_code, partnerList.partner_code + '/' + partnerList.partner_abbreviation]);\n    return new Promise(resolve => resolve(result));\n  };\n\n  const submitChangeLimit = () => {// txnLimit, dailyLimit\n    // call api\n  };\n\n  const submitChangeProductLimitSelect = () => {\n    //call api\n    setVisble(true);\n    setTitleModal('Confirm');\n    setModalType(\"confirm\");\n    setModalString(__jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, \" Change Product Code \", selectPartnerAndProduct.partner_code, \" Limit \"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, \"for \", selectPartnerAndProduct.partner_code, \"/\", selectPartnerAndProduct.partner_abbreviation, \" Channel/Partner !!!\")));\n  };\n\n  const selectPartnerChanel = value => {\n    let productSelectObject = channelPartnerList.filter(item => item.partner_code == value);\n    setSelectPartnerAndProduct(productSelectObject[0]); //partner_code, product_code\n\n    setShowLimitPartner(true);\n  };\n\n  const selectProductToViewDetail = rowSelected => {\n    //call api to get Detail Product\n    businessParametersSetupStore.getDataDetailProductLimit(rowSelected.product_code); // businessParametersSetupStore.getDataChannelPartnerList()\n  };\n\n  const selectS = () => {\n    viewSpecificProduct;\n  };\n\n  const addRowProductList = () => {\n    let newProduct = {\n      key: dataSource.length + 1,\n      product_code: '',\n      product_description: '',\n      transaction_limit: '',\n      daily_limit: '',\n      Specific: ''\n    };\n    setDataSource([...dataSource, newProduct]);\n    edit(newProduct);\n    businessParametersSetupStore.arrayProductLimit = dataSource;\n  };\n\n  const goBackProductList = () => {\n    setViewDetailProduct(false);\n  };\n\n  const submitAddnewProduct = async key => {\n    // Call api to update record status\n    const row = await form.validateFields();\n    row.status = 2;\n    row.transaction_code = \"6931\";\n    const newData = [...dataSource];\n    const index = newData.findIndex(item => key === item.key);\n\n    if (index > -1) {\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n      setDataSource(newData);\n      setEditingKey('');\n    } else {\n      newData.push(row);\n      setDataSource(newData);\n      setEditingKey('');\n    }\n\n    businessParametersSetupStore.addNewProductLimit(row);\n  };\n\n  const submitDeleteProduct = record => {\n    //call api to update record status\n    dataSource.map(detailDataSource => {\n      if (detailDataSource.key === record.key) {\n        record.status = 2;\n      }\n    });\n    console.log(toJS(dataSource)); //businessParametersSetupStore.deleteProductLimit(record)\n\n    setDataSource(dataSource); //<<waiting result api and  add key index\n  };\n\n  const renderOnclickHandler = (text, record) => {\n    return __jsx(\"p\", {\n      onClick: () => selectProductToViewDetail(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 16\n      }\n    }, text);\n  };\n\n  const renderActionAddDeleteHandler = (record, index) => {\n    if (index + 1 <= businessParametersSetupStore.arrayProductLimit.length) {\n      return __jsx(_Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: e => {\n          submitDeleteProduct(record);\n        },\n        disabled: editingKey !== '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 18\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }, \"Delete\"));\n    } else if (record.status === 2) {\n      return null;\n    } else {\n      return __jsx(_Popconfirm, {\n        title: \"Confirm to add !!!\",\n        onConfirm: () => {\n          submitAddnewProduct(record.key);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 18\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, \"confirm\"));\n    }\n  };\n\n  const renderActionSpecificHandler = record => {\n    return __jsx(\"p\", {\n      onClick: () => selectProductToSpecificLimit(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 16\n      }\n    }, \".....\");\n  };\n\n  const columns = [{\n    dataIndex: 'operation',\n    render: (text, record, index) => renderActionAddDeleteHandler(record, index)\n  }, {\n    title: 'Product_Code',\n    dataIndex: 'product_type',\n    width: '10%',\n    editable: true\n  }, {\n    title: 'Product_Description',\n    dataIndex: 'product_description',\n    editable: true,\n    render: (text, record) => renderOnclickHandler(text, record)\n  }, {\n    title: 'All-Channel Txn Limit',\n    dataIndex: 'transaction_limit',\n    editable: true,\n    render: (text, record) => renderOnclickHandler(text, record)\n  }, {\n    title: 'All-Channel Daily Limit',\n    dataIndex: 'daily_limit',\n    editable: true,\n    render: (text, record) => renderOnclickHandler(text, record)\n  }, {\n    title: 'Specific Channel Limit',\n    dataIndex: 'Specific',\n    // editable: true,\n    render: (text, record) => renderActionSpecificHandler(text, record)\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    });\n  });\n\n  const detailProduct = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    }, __jsx(_Card, {\n      style: {\n        padding: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }, __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 15\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, \"Product_Code\"), __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.product_type)), __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 15\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }\n    }, \"Product_Description\"), __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.product_description))), __jsx(_Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    }, __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 15\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, \"All-Channel Txn Limit\"), __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.transaction_limit)), __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }\n    }, \"All-Channel Daily Limit\"), __jsx(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.daily_limit))), __jsx(_Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }\n    }, __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, \"Channel/Partner\"), __jsx(_Col, {\n      span: 12,\n      flex: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }, __jsx(_Select, {\n      onChange: value => selectPartnerChanel(value),\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 19\n      }\n    }, channelPartnerList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.partner_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 62\n      }\n    }, item.partner_code, \"/\", item.partner_abbreviation))))), showLimitPartner ? __jsx(React.Fragment, null, __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 19\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }\n    }, __jsx(SimpleInput, {\n      readOnly: false,\n      defaultValue: null,\n      prefix: 'Txn Limit',\n      onChange: e => {\n        txnLimit = e;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 23\n      }\n    })), __jsx(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      style: {\n        paddingTop: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 23\n      }\n    }, \"THB\"))), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 19\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }\n    }, __jsx(SimpleInput, {\n      readOnly: false,\n      defaultValue: null,\n      prefix: 'Daily Limit',\n      onChange: e => {\n        dailyLimit = e;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 23\n      }\n    })), __jsx(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      style: {\n        paddingTop: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 23\n      }\n    }, \"THB\")))) : ''), __jsx(_Row, {\n      justify: \"center\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 15\n      }\n    }, __jsx(_Button, {\n      onClick: () => goBackProductList(),\n      shape: \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }\n    }, \"Back\")), __jsx(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 15\n      }\n    }, __jsx(_Button, {\n      shape: \"round\",\n      type: \"primary\",\n      onClick: () => {\n        submitChangeProductLimitSelect();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }\n    }, \"Submit\"))), __jsx(SimpleModal, {\n      title: titleModal,\n      type: modalType,\n      onOk: () => unlockOTP(),\n      onCancel: () => setVisble(false),\n      textOk: t(\"confirm\"),\n      textCancel: t(\"cancel\"),\n      modalString: modalString,\n      visible: visible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const productLimitList = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }\n    }, __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }\n    }, __jsx(_Button, {\n      onClick: () => addRowProductList(),\n      type: \"primary\",\n      style: {\n        marginBottom: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }, \"Add a row\")), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      flex: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 15\n      }\n    }, __jsx(_Form, {\n      form: form,\n      component: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }\n    }, __jsx(_Table, {\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: dataSource,\n      columns: mergedColumns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 19\n      }\n    })))));\n  };\n\n  const addLimitProduct = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }\n    }, __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 15\n      }\n    }, \"Channel/Partner\"), __jsx(_Col, {\n      span: 12,\n      flex: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 15\n      }\n    }, __jsx(_Select, {\n      onChange: value => selectPartnerChanel(value),\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }\n    }, channelPartnerList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.partner_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 60\n      }\n    }, item.partner_code, \"/\", item.partner_abbreviation))))), showLimitPartner ? __jsx(React.Fragment, null, __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 19\n      }\n    }, __jsx(SimpleInput, {\n      readOnly: false,\n      defaultValue: null,\n      prefix: 'Txn Limit',\n      onChange: e => {\n        txnLimit = e;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 21\n      }\n    })), __jsx(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      style: {\n        paddingTop: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 21\n      }\n    }, \"THB\"))), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 19\n      }\n    }, __jsx(SimpleInput, {\n      readOnly: false,\n      defaultValue: null,\n      prefix: 'Daily Limit',\n      onChange: e => {\n        dailyLimit = e;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 21\n      }\n    })), __jsx(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      style: {\n        paddingTop: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 21\n      }\n    }, \"THB\")))) : '');\n  };\n\n  return viewDetailProduct ? detailProduct() : productLimitList();\n}));\nexport default withTranslation('common')(ProductLimitSetup);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup.js"],"names":["React","useState","useEffect","createRef","inject","observer","withTranslation","styled","toJS","SimpleMenu","SimpleInput","SimpleModal","Option","ProductLimitSetup","props","dataSource","setDataSource","viewDetailProduct","setViewDetailProduct","visible","setVisble","modalString","setModalString","showLimitPartner","setShowLimitPartner","editingKey","setEditingKey","titleModal","setTitleModal","modalType","setModalType","selectPartnerAndProduct","setSelectPartnerAndProduct","channelPartnerList","setChannelPartnerList","productList","setProductList","viewSpecificProduct","setViewSpecificProduct","businessParametersSetupStore","t","form","useForm","txnLimit","dailyLimit","isEditing","record","key","edit","setFieldsValue","product_type","product_description","transaction_limit","daily_limit","Specific","EditableCell","editing","dataIndex","title","inputType","index","children","restProps","inputNode","margin","required","message","width","map","item","product_code","getDataProductLimit","getDataChannelPartnerList","getDataProductList","productLimit","length","addKeyToDataSource","then","result","arrayProductLimit","console","log","productLimitDetail","handleDelete","arrayDataSource","newDataSource","Promise","resolve","convertToArrayOptionSelect","arrayObject","partnerList","partner_code","partner_abbreviation","submitChangeLimit","submitChangeProductLimitSelect","textAlign","selectPartnerChanel","value","productSelectObject","filter","selectProductToViewDetail","rowSelected","getDataDetailProductLimit","selectS","addRowProductList","newProduct","goBackProductList","submitAddnewProduct","row","validateFields","status","transaction_code","newData","findIndex","splice","push","addNewProductLimit","submitDeleteProduct","detailDataSource","renderOnclickHandler","text","renderActionAddDeleteHandler","e","renderActionSpecificHandler","selectProductToSpecificLimit","columns","render","editable","mergedColumns","col","onCell","detailProduct","padding","paddingTop","marginTop","unlockOTP","productLimitList","marginBottom","body","cell","addLimitProduct"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from 'react'\nimport { Button, Table, Popconfirm, Row, Col, Menu, Card, Input, Select, Form, InputNumber } from 'antd'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../i18n'\nimport styled from 'styled-components'\nimport { toJS } from 'mobx'\nimport SimpleMenu from '../simple-menu'\nimport SimpleInput from '../simple-input'\nimport SimpleModal from '../simple-modal'\n\nconst { Option } = Select;\n\nconst ProductLimitSetup =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const [dataSource, setDataSource] = useState([])\n      const [viewDetailProduct, setViewDetailProduct] = useState(false)\n      const [visible, setVisble] = useState(false)\n      const [modalString, setModalString] = useState('')\n      const [showLimitPartner, setShowLimitPartner] = useState(false)\n      const [editingKey, setEditingKey] = useState('')\n      const [titleModal, setTitleModal] = useState('')\n      const [modalType, setModalType] = useState('')\n      const [selectPartnerAndProduct, setSelectPartnerAndProduct] = useState({})\n      const [channelPartnerList, setChannelPartnerList] = useState([])\n      const [productList, setProductList] = useState([])\n      const [viewSpecificProduct, setViewSpecificProduct] = useState(false)\n      const { businessParametersSetupStore, t } = props\n      const [form] = Form.useForm();\n      var txnLimit, dailyLimit = ''\n      // var selectPartnerAndProduct = {}\n\n\n      const isEditing = record => record.key === editingKey;\n      const edit = record => {\n        form.setFieldsValue({\n          product_type: '',\n          product_description: '',\n          transaction_limit: '',\n          daily_limit: '',\n          Specific: '',\n          ...record,\n        });\n        setEditingKey(record.key);\n      };\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n        return (\n          <td {...restProps}>\n            {editing ? (\n\n              <Form.Item\n                name={dataIndex == 'product_type' ? 'product_code' : dataIndex}\n                style={{\n                  margin: 0,\n                }}\n                rules={[\n                  {\n                    required: (inputType === 'number') ? true : false,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                {/* {inputNode} */}\n                {dataIndex == 'product_type' ? (\n                  <Select\n                    style={{ width: '100%' }}\n                  >\n                    {productList.map((item, index) => <Option key={index} value={item.product_code}>{item.product_type}</Option>)}\n                  </Select>) : (\n                    <div>\n                      {inputNode}\n                    </div>\n                  )}\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        );\n      };\n\n      useEffect(() => {\n        // setDataSource(mockDataSource)\n        businessParametersSetupStore.getDataProductLimit()\n        businessParametersSetupStore.getDataChannelPartnerList()\n        businessParametersSetupStore.getDataProductList()\n      }, []);\n\n      useEffect(() => {\n        if (businessParametersSetupStore.productLimit.length > 0) {\n          addKeyToDataSource(businessParametersSetupStore.productLimit).then((result) => {\n            businessParametersSetupStore.arrayProductLimit = result\n            setDataSource(result)\n          })\n        }\n      }, [businessParametersSetupStore.productLimit])\n\n      useEffect(() => {\n        //if(businessParametersSetupStore.productLimitDetail)\n        console.log(toJS(businessParametersSetupStore.productLimitDetail))\n        if (businessParametersSetupStore.productLimitDetail != null) {\n          setViewDetailProduct(true)\n        }\n      }, [businessParametersSetupStore.productLimitDetail])\n\n      useEffect(() => {\n        if (businessParametersSetupStore.channelPartnerList.length > 1) {\n          setChannelPartnerList(businessParametersSetupStore.channelPartnerList)\n        }\n      }, [businessParametersSetupStore.channelPartnerList])\n\n      useEffect(() => {\n        if (businessParametersSetupStore.productList.length > 1) {\n          setProductList(businessParametersSetupStore.productList)\n        }\n      }, [businessParametersSetupStore.productList])\n\n      const handleDelete = key => {\n        // const dataSource = [...this.state.dataSource];\n        // setDataSource(dataSource.filter(item => item.key !== key))\n        console.log(key)\n\n      };\n\n      const addKeyToDataSource = (arrayDataSource) => {\n        let newDataSource = arrayDataSource\n        for (let index = 0; index < newDataSource.length; index++) {\n          newDataSource[index].key = index + 1;\n        }\n        return new Promise((resolve) => {\n          resolve(newDataSource)\n        })\n      }\n\n      const convertToArrayOptionSelect = (arrayObject) => {\n        let result = arrayObject.map(partnerList => [partnerList.partner_code, partnerList.partner_code + '/' + partnerList.partner_abbreviation]);\n        return new Promise((resolve) => resolve(result))\n      }\n\n      const submitChangeLimit = () => {\n        // txnLimit, dailyLimit\n        // call api\n      }\n\n      const submitChangeProductLimitSelect = () => {\n        //call api\n        setVisble(true)\n        setTitleModal('Confirm')\n        setModalType(\"confirm\")\n        setModalString(\n          <div style={{ textAlign: \"center\" }}>\n            <p> Change Product Code {selectPartnerAndProduct.partner_code} Limit </p>\n            <p>for {selectPartnerAndProduct.partner_code}/{selectPartnerAndProduct.partner_abbreviation} Channel/Partner !!!</p>\n          </div>\n        )\n      }\n\n      const selectPartnerChanel = (value) => {\n        let productSelectObject = channelPartnerList.filter(item => item.partner_code == value)\n        setSelectPartnerAndProduct(productSelectObject[0])\n        //partner_code, product_code\n        setShowLimitPartner(true)\n      }\n\n      const selectProductToViewDetail = (rowSelected) => {\n        //call api to get Detail Product\n        businessParametersSetupStore.getDataDetailProductLimit(rowSelected.product_code)\n        // businessParametersSetupStore.getDataChannelPartnerList()\n      }\n\n      const selectS = () => {\n        viewSpecificProduct\n      }\n\n      const addRowProductList = () => {\n        let newProduct = {\n          key: dataSource.length + 1,\n          product_code: '',\n          product_description: '',\n          transaction_limit: '',\n          daily_limit: '',\n          Specific: '',\n        }\n        setDataSource([...dataSource, newProduct])\n        edit(newProduct)\n        businessParametersSetupStore.arrayProductLimit = dataSource\n      }\n      const goBackProductList = () => {\n        setViewDetailProduct(false)\n      }\n      const submitAddnewProduct = async (key) => {\n        // Call api to update record status\n        const row = await form.validateFields();\n        row.status = 2\n        row.transaction_code = \"6931\"\n        const newData = [...dataSource];\n        const index = newData.findIndex(item => key === item.key);\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, { ...item, ...row });\n          setDataSource(newData);\n          setEditingKey('');\n        } else {\n          newData.push(row);\n          setDataSource(newData);\n          setEditingKey('');\n        }\n        businessParametersSetupStore.addNewProductLimit(row)\n      }\n\n      const submitDeleteProduct = (record) => {\n        //call api to update record status\n        dataSource.map(detailDataSource => {\n          if (detailDataSource.key === record.key) {\n            record.status = 2\n          }\n        })\n        console.log(toJS(dataSource))\n        //businessParametersSetupStore.deleteProductLimit(record)\n        setDataSource(dataSource) //<<waiting result api and  add key index\n      }\n      const renderOnclickHandler = (text, record) => {\n        return <p onClick={() => selectProductToViewDetail(record)}>{text}</p>\n      }\n      const renderActionAddDeleteHandler = (record, index) => {\n        if (index + 1 <= businessParametersSetupStore.arrayProductLimit.length) {\n          return <Popconfirm title=\"Sure to delete?\" onConfirm={(e) => { submitDeleteProduct(record) }} disabled={editingKey !== ''}>\n            <a>Delete</a>\n          </Popconfirm>\n        } else if (record.status === 2) {\n          return null\n        } else {\n          return <Popconfirm title={\"Confirm to add !!!\"} onConfirm={() => { submitAddnewProduct(record.key) }} >\n            <a>confirm</a>\n          </Popconfirm>\n        }\n      }\n      const renderActionSpecificHandler = (record) => {\n        return <p onClick={() => selectProductToSpecificLimit(record)} >.....</p>\n      }\n      const columns = [\n        {\n          dataIndex: 'operation',\n          render: (text, record, index) =>\n            renderActionAddDeleteHandler(record, index)\n        },\n        {\n          title: 'Product_Code',\n          dataIndex: 'product_type',\n          width: '10%',\n          editable: true,\n        },\n        {\n          title: 'Product_Description',\n          dataIndex: 'product_description',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'All-Channel Txn Limit',\n          dataIndex: 'transaction_limit',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'All-Channel Daily Limit',\n          dataIndex: 'daily_limit',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'Specific Channel Limit',\n          dataIndex: 'Specific',\n          // editable: true,\n          render: (text, record) => renderActionSpecificHandler(text, record)\n\n        },\n      ];\n\n      const mergedColumns = columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n\n\n      const detailProduct = () => {\n        return (\n          <div>\n            <Card style={{ padding: 8 }}>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>Product_Code</Col>\n                <Col span={12}>{businessParametersSetupStore.productLimitDetail.product_type}</Col>\n              </Row>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>Product_Description</Col>\n                <Col span={12}>{businessParametersSetupStore.productLimitDetail.product_description}</Col>\n              </Row>\n            </Card>\n            <Card>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>All-Channel Txn Limit</Col>\n                <Col span={12}>{businessParametersSetupStore.productLimitDetail.transaction_limit}</Col>\n              </Row>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>All-Channel Daily Limit</Col>\n                <Col span={12}>{businessParametersSetupStore.productLimitDetail.daily_limit}</Col>\n              </Row>\n            </Card>\n            <Card>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>Channel/Partner</Col>\n                <Col span={12} flex={100}>\n                  {/* <SimpleMenu options={optionList} onChange={(e) => { selectPartnerChanel(e) }} /> */}\n                  <Select\n                    onChange={(value) => selectPartnerChanel(value)}\n                    style={{ width: '100%' }}\n                  >\n                    {channelPartnerList.map((item, index) => <Option key={index} value={item.partner_code}>{item.partner_code}/{item.partner_abbreviation}</Option>)}\n                  </Select>\n                </Col>\n              </Row>\n              {(showLimitPartner) ? (\n                <>\n                  <Row>\n                    <Col span={6}>\n                      <SimpleInput readOnly={false} defaultValue={null} prefix={'Txn Limit'} onChange={(e) => { txnLimit = e }} />\n                    </Col>\n                    <Col span={2}>\n                      <p style={{ paddingTop: 4 }}>THB</p>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col span={6}>\n                      <SimpleInput readOnly={false} defaultValue={null} prefix={'Daily Limit'} onChange={(e) => { dailyLimit = e }} />\n                    </Col>\n                    <Col span={2}>\n                      <p style={{ paddingTop: 4 }}>THB</p>\n                    </Col>\n                  </Row>\n\n                </>\n              ) : ('')}\n\n            </Card>\n            <Row justify=\"center\" style={{ marginTop: 8 }}>\n              <Col span={2}>\n                <Button onClick={() => goBackProductList()} shape=\"round\">Back</Button>\n              </Col>\n              <Col span={2}>\n                <Button shape=\"round\" type=\"primary\" onClick={() => { submitChangeProductLimitSelect() }}>Submit</Button>\n              </Col>\n            </Row>\n            <SimpleModal\n              title={titleModal}\n              type={modalType}\n              onOk={() => unlockOTP()}\n              onCancel={() => setVisble(false)}\n              textOk={t(\"confirm\")}\n              textCancel={t(\"cancel\")}\n              modalString={modalString}\n              visible={visible}\n            />\n          </div>\n        )\n      }\n\n      const productLimitList = () => {\n        return (\n          <div>\n            <Row>\n              <Button\n                onClick={() => addRowProductList()}\n                type=\"primary\"\n                style={{\n                  marginBottom: 16,\n                }}\n              >Add a row</Button>\n            </Row>\n            <Row>\n              <Col flex={100}>\n                <Form form={form} component={false}>\n\n                  <Table\n                    components={{\n                      body: {\n                        cell: EditableCell,\n                      },\n                    }}\n                    bordered\n                    dataSource={dataSource}\n                    columns={mergedColumns}\n                  />\n                </Form>\n              </Col>\n\n            </Row>\n          </div>\n        )\n      }\n\n      const addLimitProduct = () => {\n        return (\n          <div>\n            <Row gutter={[4, 24]}>\n              <Col span={6}>Channel/Partner</Col>\n              <Col span={12} flex={100}>\n                {/* <SimpleMenu options={optionList} onChange={(e) => { selectPartnerChanel(e) }} /> */}\n                <Select\n                  onChange={(value) => selectPartnerChanel(value)}\n                  style={{ width: '100%' }}\n                >\n                  {channelPartnerList.map((item, index) => <Option key={index} value={item.partner_code}>{item.partner_code}/{item.partner_abbreviation}</Option>)}\n                </Select>\n              </Col>\n            </Row>\n            {(showLimitPartner) ? (\n              <>\n                <Row>\n                  <Col span={6}>\n                    <SimpleInput readOnly={false} defaultValue={null} prefix={'Txn Limit'} onChange={(e) => { txnLimit = e }} />\n                  </Col>\n                  <Col span={2}>\n                    <p style={{ paddingTop: 4 }}>THB</p>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col span={6}>\n                    <SimpleInput readOnly={false} defaultValue={null} prefix={'Daily Limit'} onChange={(e) => { dailyLimit = e }} />\n                  </Col>\n                  <Col span={2}>\n                    <p style={{ paddingTop: 4 }}>THB</p>\n                  </Col>\n                </Row>\n\n              </>\n            ) : ('')}\n          </div>\n        )\n      }\n      return (viewDetailProduct) ? detailProduct() : productLimitList()\n    }))\nexport default withTranslation('common')(ProductLimitSetup)\n"]},"metadata":{},"sourceType":"module"}