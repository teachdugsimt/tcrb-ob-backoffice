{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department/manage-department.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport { orange, green, gold } from '@ant-design/colors';\nimport SimpleInput from '../../simple-input';\nvar ManageDepartment = inject('UserAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState(false),\n      showEditDepartment = _useState[0],\n      setShowEditDepartment = _useState[1];\n\n  var UserAccessManagementStore = props.UserAccessManagementStore,\n      t = props.t;\n\n  var onEditSection = function onEditSection() {\n    setAddSection(true);\n    setModalType('');\n  };\n\n  var mockSection = [{\n    section_name: 'section_1',\n    team_name: 'team_1',\n    section_id: '01',\n    status: '1',\n    key: 1\n  }, {\n    section_name: 'section_2',\n    team_name: 'team_2',\n    section_id: '02',\n    status: '1',\n    key: 2\n  }, {\n    section_name: 'section_3',\n    team_name: 'team_3',\n    section_id: '03',\n    status: '1',\n    key: 3\n  }];\n\n  var goBackToDepartmentList = function goBackToDepartmentList() {\n    UserAccessManagementStore.nextPageIsManageDepartment = false;\n  };\n\n  var SelectDepartment = function SelectDepartment(props) {\n    return __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Section / Team\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      mode: \"tags\",\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return props.onChange(value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    })));\n  };\n\n  var renderActionSectionAndTeam = function renderActionSectionAndTeam(record) {\n    var editable = isEditingSection(record);\n\n    if (record.status === '1') {\n      return editable ? __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Save?\",\n        onConfirm: function onConfirm() {\n          return save(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, \"Save\")), __jsx(TcrbPopconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: function onConfirm() {\n          return setEditingKeySection('');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))) : __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        disabled: editingKeySection !== '',\n        onClick: function onClick() {\n          return editSection(record);\n        },\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, \"Deactivate\")));\n    } else if (record.status === '2') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  var columnSection = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkStatus(record);\n    }\n  }, {\n    title: 'Section',\n    dataIndex: 'section_name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Team',\n    dataIndex: 'team_name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: function render(text, record) {\n      return renderActionSectionAndTeam(record);\n    }\n  }];\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      return goBackToDepartmentList();\n    },\n    shape: \"round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Back\"))), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Department\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \" \", showEditDepartment ? UserAccessManagementStore.productLimitDetail.daily_limit : __jsx(SimpleInput, {\n    defaultValue: null,\n    onChange: function onChange(e) {\n      return e;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }))), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Department\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \" \", showEditDepartment ? UserAccessManagementStore.productLimitDetail.daily_limit : __jsx(SelectDepartment, {\n    onChange: function onChange(e) {\n      return e;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }))), __jsx(Row, {\n    justify: \"center\",\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    shape: \"round\",\n    className: \"primary\",\n    onClick: function onClick() {\n      prepareAllLimitToSubmitAndUpdate();\n    },\n    disabled: showLimitPartner == false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Submit\"))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    flex: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    bordered: true,\n    dataSource: mockSection,\n    columns: columnSection,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }))));\n}, \"yk9813gUG7mGkTa3lvk4oADGGXk=\")));\nexport default ManageDepartment;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department/manage-department.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","TcrbButton","TcrbPopconfirm","inject","observer","orange","green","gold","SimpleInput","ManageDepartment","props","showEditDepartment","setShowEditDepartment","UserAccessManagementStore","t","onEditSection","setAddSection","setModalType","mockSection","section_name","team_name","section_id","status","key","goBackToDepartmentList","nextPageIsManageDepartment","SelectDepartment","padding","width","value","onChange","renderActionSectionAndTeam","record","editable","isEditingSection","save","marginRight","setEditingKeySection","color","textAlign","editingKeySection","editSection","columnSection","title","dataIndex","render","text","checkStatus","productLimitDetail","daily_limit","e","marginTop","prepareAllLimitToSubmitAndUpdate","showLimitPartner"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\nimport { orange, green, gold } from '@ant-design/colors';\n\nimport SimpleInput from '../../simple-input'\n\nconst ManageDepartment =\n  inject('UserAccessManagementStore')\n    (observer((props) => {\n      const [showEditDepartment, setShowEditDepartment] = useState(false)\n      const { UserAccessManagementStore, t } = props\n\n      const onEditSection = () => {\n        setAddSection(true)\n        setModalType('')\n      }\n\n      const mockSection = [{\n        section_name: 'section_1',\n        team_name: 'team_1',\n        section_id: '01',\n        status: '1',\n        key: 1\n      },\n      {\n        section_name: 'section_2',\n        team_name: 'team_2',\n        section_id: '02',\n        status: '1',\n        key: 2\n      },\n      {\n        section_name: 'section_3',\n        team_name: 'team_3',\n        section_id: '03',\n        status: '1',\n        key: 3\n      }]\n\n      const goBackToDepartmentList = () => {\n        UserAccessManagementStore.nextPageIsManageDepartment = false\n      }\n\n      const SelectDepartment = (props) => {\n        return (\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Section / Team</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                mode=\"tags\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => props.onChange(value)}\n              >\n                {/* {children} */}\n              </Select>\n            </Col>\n          </Row>\n\n        )\n      }\n\n      const renderActionSectionAndTeam = (record) => {\n        const editable = isEditingSection(record);\n        if (record.status === '1') {\n          return editable ? (\n            <span>\n              <TcrbPopconfirm title=\"Sure to Save?\" onConfirm={() => save(record.key)}>\n                <a style={{ marginRight: 8, }}>\n                  Save\n          </a>\n              </TcrbPopconfirm>\n              <TcrbPopconfirm title=\"Sure to cancel?\" onConfirm={() => setEditingKeySection('')}>\n                <a style={{ color: '#3e3e3e' }}>Cancel</a>\n              </TcrbPopconfirm>\n            </span>\n          ) : (\n              <div style={{ textAlign: \"center\" }}>\n                {/* <TcrbPopconfirm title=\"Sure to Edit?\" onConfirm={() => edit(record)}> */}\n                <a disabled={editingKeySection !== ''} onClick={() => editSection(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n                  Edit\n          </a>\n                <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n                  <a style={{ color: '#3e3e3e' }}>Deactivate</a>\n                </TcrbPopconfirm>\n              </div>\n            );\n        } else if (record.status === '2') {\n          return null\n        } else {\n          return null\n        }\n      }\n\n      const columnSection = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          render: (text, record) => checkStatus(record)\n        },\n        {\n          title: 'Section',\n          dataIndex: 'section_name',\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Team',\n          dataIndex: 'team_name',\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          width: '10%',\n          render: (text, record) => renderActionSectionAndTeam(record)\n        }\n\n      ]\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"default\" onClick={() => goBackToDepartmentList()} shape=\"round\">Back</TcrbButton>\n            </Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={6}>Department</Col>\n            <Col span={6}> {showEditDepartment ?\n              UserAccessManagementStore.productLimitDetail.daily_limit :\n              <SimpleInput defaultValue={null} onChange={(e) => e} />}\n            </Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={6}>Department</Col>\n            <Col span={6}> {showEditDepartment ?\n              UserAccessManagementStore.productLimitDetail.daily_limit :\n              <SelectDepartment onChange={(e) => e} />}\n            </Col>\n          </Row>\n          <Row justify=\"center\" style={{ marginTop: 8 }}>\n            <Col span={2}>\n              <TcrbButton shape=\"round\" className=\"primary\" onClick={() => { prepareAllLimitToSubmitAndUpdate() }} disabled={showLimitPartner == false}>Submit</TcrbButton>\n            </Col>\n          </Row>\n          <Divider />\n          <Row>\n            <Col flex={100}>\n\n              <Table\n                bordered\n                dataSource={mockSection}\n                columns={columnSection}\n                size=\"small\"\n              />\n            </Col>\n          </Row>\n\n        </div>\n      )\n    }))\n\nexport default ManageDepartment\n"]},"metadata":{},"sourceType":"module"}