{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport { checkDefaultStatus, addKeyToDataSource } from '../../data-utility';\nimport SimpleInput from '../../simple-input';\nconst {\n  Option\n} = Select;\nconst UserList = inject('userAccessManagementStore')(observer(props => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: userList,\n    1: setUserList\n  } = useState([]);\n  const [form] = Form.useForm();\n  const {\n    userAccessManagementStore\n  } = props;\n  useEffect(() => {\n    userAccessManagementStore.getDataUser();\n  }, []);\n  useEffect(() => {\n    if (userAccessManagementStore.userList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.userList).then(result => {\n        setUserList(result);\n      });\n    }\n  }, [userAccessManagementStore.userList]);\n\n  const CollectionCreateForm = ({\n    visible,\n    onCreate,\n    onCancel\n  }) => {\n    return __jsx(Modal, {\n      visible: visible,\n      title: \"Add new User\",\n      okText: \"Submit\",\n      cancelText: \"Cancel\",\n      onCancel: onCancel,\n      width: 900,\n      onOk: () => {\n        form.validateFields().then(values => {\n          form.resetFields();\n          onCreate(values);\n        }).catch(info => {\n          console.log('Validate Failed:', info);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, __jsx(Form, {\n      form: form,\n      layout: \"vertical\",\n      name: \"form_in_modal\",\n      initialValues: {\n        modifier: 'public'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Employee ID\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Supervisor\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"supervisor\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Name\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Surname\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"surname\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"Username\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"Username\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \"Email\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"email\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, \"Join Date\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"jonDate\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, \"Last working date\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"lastWorkingDate\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, \"Status\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"status\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, \"Section\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"section\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }))))));\n  };\n\n  const onCreate = values => {\n    console.log('Received values of form: ', values);\n    setVisible(false);\n  };\n\n  const viewUserDetail = record => {\n    userAccessManagementStore.userSelected = record;\n    userAccessManagementStore.nextPageIsManageUser = true;\n  };\n\n  const renderActionUser = record => {\n    if (record.request_status == 'APPROVE') {\n      return __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        onClick: () => viewUserDetail(record),\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#FBA928'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }\n      }, \"Deactivate\")));\n    } else if (record.request_status == 'PENDING') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  const columnUser = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: (text, record) => checkDefaultStatus(record.request_status)\n  }, {\n    title: 'Username',\n    dataIndex: 'username',\n    editable: true // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Name',\n    dataIndex: 'name' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Surname',\n    dataIndex: 'surname' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Supervisor',\n    dataIndex: 'supervisor' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Department',\n    dataIndex: 'department' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Groups',\n    dataIndex: 'groups' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: (text, record) => renderActionUser(record)\n  }];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: () => setVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }, \"Add User\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: userList,\n    columns: columnUser,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }\n  }), __jsx(CollectionCreateForm, {\n    visible: visible,\n    onCreate: onCreate,\n    onCancel: () => {\n      setVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }\n  }));\n}));\nexport default UserList;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","InputNumber","Divider","Button","Modal","Drawer","Form","DatePicker","Space","TcrbButton","TcrbPopconfirm","inject","observer","checkDefaultStatus","addKeyToDataSource","SimpleInput","Option","UserList","props","visible","setVisible","userList","setUserList","form","useForm","userAccessManagementStore","getDataUser","length","then","result","CollectionCreateForm","onCreate","onCancel","validateFields","values","resetFields","catch","info","console","log","modifier","padding","required","message","paddingLeft","width","value","type","viewUserDetail","record","userSelected","nextPageIsManageUser","renderActionUser","request_status","textAlign","marginRight","color","columnUser","title","dataIndex","render","text","editable"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\n\nimport { checkDefaultStatus, addKeyToDataSource } from '../../data-utility'\nimport SimpleInput from '../../simple-input'\n\nconst { Option } = Select;\n\nconst UserList = inject('userAccessManagementStore')\n  (observer((props) => {\n    const [visible, setVisible] = useState(false)\n    const [userList, setUserList] = useState([])\n    const [form] = Form.useForm();\n    const { userAccessManagementStore } = props\n\n    useEffect(() => {\n      userAccessManagementStore.getDataUser()\n    }, [])\n\n    useEffect(() => {\n      if (userAccessManagementStore.userList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.userList).then(result => {\n          setUserList(result)\n        })\n      }\n    }, [userAccessManagementStore.userList])\n\n    const CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\n      return (\n        <Modal\n          visible={visible}\n          title=\"Add new User\"\n          okText=\"Submit\"\n          cancelText=\"Cancel\"\n          onCancel={onCancel}\n          width={900}\n          onOk={() => {\n            form\n              .validateFields()\n              .then(values => {\n                form.resetFields();\n                onCreate(values);\n              })\n              .catch(info => {\n                console.log('Validate Failed:', info);\n              });\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"form_in_modal\"\n            initialValues={{\n              modifier: 'public',\n            }}\n          >\n\n            <Row >\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Employee ID\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"title\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Supervisor\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"supervisor\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => null}\n                  >\n                    {/* {children} */}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row >\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Name\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Surname\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"surname\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Username\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"Username\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Email\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"email\"\n                  rules={[\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Join Date\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"jonDate\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: '100%' }} />\n\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Last working date\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"lastWorkingDate\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Status\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"status\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => null}\n                  >\n                    {/* {children} */}\n                  </Select>\n\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Section\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"section\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => null}\n                  >\n                    {/* {children} */}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n      );\n    }\n\n    const onCreate = values => {\n      console.log('Received values of form: ', values);\n      setVisible(false);\n    }\n\n    const viewUserDetail = (record) => {\n      userAccessManagementStore.userSelected = record\n      userAccessManagementStore.nextPageIsManageUser = true\n    }\n\n    const renderActionUser = (record) => {\n      if (record.request_status == 'APPROVE') {\n        return (\n          <div style={{ textAlign: \"center\" }}>\n            <a onClick={() => viewUserDetail(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n              Edit\n          </a>\n            <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n              <a style={{ color: '#FBA928' }}>Deactivate</a>\n            </TcrbPopconfirm>\n          </div>\n        )\n      } else if (record.request_status == 'PENDING') {\n        return null\n      } else {\n        return null\n      }\n    }\n\n    const columnUser = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkDefaultStatus(record.request_status)\n      },\n      {\n        title: 'Username',\n        dataIndex: 'username',\n        editable: true,\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Surname',\n        dataIndex: 'surname',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Supervisor',\n        dataIndex: 'supervisor',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Department',\n        dataIndex: 'department',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Groups',\n        dataIndex: 'groups',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Action',\n        dataIndex: 'operation',\n        width: '10%',\n        render: (text, record) => renderActionUser(record)\n      }\n    ]\n\n\n    return (\n      <div>\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"primary\" onClick={() => setVisible(true)} >Add User</TcrbButton>\n          </Col>\n        </Row>\n        <Table\n          bordered\n          dataSource={userList}\n          columns={columnUser}\n          size=\"small\"\n        />\n        <CollectionCreateForm\n          visible={visible}\n          onCreate={onCreate}\n          onCancel={() => {\n            setVisible(false);\n          }}\n        />\n      </div>\n    )\n  }))\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}