{"ast":null,"code":"var _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, action } from 'mobx'; // const fruits = observable([]);\n\nlet BusinessParametersSetupStore = (_class = (_temp = class BusinessParametersSetupStore {\n  constructor() {\n    _initializerDefineProperty(this, \"pendingApprovals\", _descriptor, this);\n  }\n\n  // const fruits = observable([\"apple\", \"orange\"]);\n  selectProductToDelete(productSelected) {\n    console.log(productSelected); // this.pendingApprovals.push(1)\n    // fruits.push(1)\n\n    console.log(this.pendingApprovals); // console.log(this.pendingApprovals)\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"pendingApprovals\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"selectProductToDelete\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"selectProductToDelete\"), _class.prototype)), _class);\nexport { BusinessParametersSetupStore as default };","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/business-parameters-setup-store.js"],"names":["observable","action","BusinessParametersSetupStore","selectProductToDelete","productSelected","console","log","pendingApprovals"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC,C,CACA;;IAEqBC,4B,sBAAN,MAAMA,4BAAN,CAAmC;AAAA;AAAA;AAAA;;AAEhD;AAGAC,EAAAA,qBADA,CACuBC,eADvB,EACuC;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ,EADqC,CAErC;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,gBAAjB,EAJqC,CAKrC;AACD;;AAX+C,C,0FAC/CP,U;;;;;WAA8B,E;;0EAG9BC,M;SAJkBC,4B","sourcesContent":["import { observable, action } from 'mobx'\n// const fruits = observable([]);\n\nexport default class BusinessParametersSetupStore {\n  @observable pendingApprovals = []\n  // const fruits = observable([\"apple\", \"orange\"]);\n\n  @action\n  selectProductToDelete (productSelected){\n    console.log(productSelected)\n    // this.pendingApprovals.push(1)\n    // fruits.push(1)\n    console.log(this.pendingApprovals)\n    // console.log(this.pendingApprovals)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}