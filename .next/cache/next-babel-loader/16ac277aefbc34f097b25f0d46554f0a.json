{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport SimpleSearch from '../simple-search';\nimport styled from 'styled-components';\nimport { Row, Switch, Col, Button, Input } from 'antd';\nimport { useStores } from '../../hooks/use-stores';\nimport SimpleModal from '../simple-modal';\nimport { i18n, withNamespaces } from '../../i18n';\nconst StyledA = styled.a.withConfig({\n  displayName: \"account-unbinding__StyledA\",\n  componentId: \"sc-1wve73-0\"\n})([\"display:initial;padding-right:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledP = styled.p.withConfig({\n  displayName: \"account-unbinding__StyledP\",\n  componentId: \"sc-1wve73-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"account-unbinding__StyledSpan\",\n  componentId: \"sc-1wve73-2\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledInput = styled(Input).withConfig({\n  displayName: \"account-unbinding__StyledInput\",\n  componentId: \"sc-1wve73-3\"\n})([\"\", \"\"], ({\n  readOnly\n}) => readOnly && `\n          border-style: solid !important;\n          border-width: 0px 0px 1px 0px !important;\n          border-color: black !important;\n          box-shadow: none !important;\n          border-right-style: unset !important;\n          border-right-width: 0px !important\n      `);\nexport default function AccountUnbinding() {\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: viewDetail,\n    1: setViewDetail\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: accountId,\n    1: setAccountId\n  } = useState('');\n  const {\n    customerServicesMenuStore\n  } = useStores();\n  const numbers = [1, 2, 3, 4, 5];\n  const stringSwitch = [{\n    accountName: i18n.t(\"bindingTCRBMobilBanking\"),\n    accountBindingStatus: true,\n    accountType: '1'\n  }, {\n    accountName: i18n.t(\"bindingMicroPay\"),\n    accountBindingStatus: true,\n    accountType: '2'\n  }, {\n    accountName: i18n.t(\"bindingTrueMoneyWallet\"),\n    accountBindingStatus: true,\n    accountType: '3'\n  }];\n  const stringAccount = [{\n    accountNumber: '2233344514',\n    accountName: i18n.t(\"normalSaving\"),\n    accountType: '1'\n  }, {\n    accountNumber: '123456789032',\n    accountName: i18n.t(\"revolvingLoanNonTCG\"),\n    accountType: '2'\n  }];\n\n  const searchIdCardNumber = value => {\n    // console.log('eiei search:' + value)\n    // setIdCard(value)\n    setIsSearch(true);\n  };\n\n  const selectedMenu = selectedAccount => {\n    switch (selectedAccount.accountType) {\n      case '1':\n        customerServicesMenuStore.setAccountId(selectedAccount.accountNumber);\n        setViewDetail(true);\n        break;\n\n      case '2':\n        console.log('eiei menu2', selectedAccount);\n        customerServicesMenuStore.setAccountId(selectedAccount.accountNumber); // setAccountId(accountId)\n\n        setViewDetail(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onChange = (switchSelected, index) => {\n    // console.log(\"change:\" + value + \",indexOf :\" + index)\n    if (switchSelected.accountBindingStatus === true) {\n      setVisble(true);\n\n      switch (switchSelected.accountType) {\n        case '1':\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }\n          }, \"Unbinding !!!\"), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }\n          }, \"Account \", customerServicesMenuStore.accountId, \" from Mobile Banking\")));\n          break;\n\n        case '2':\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }\n          }, \"Unbinding !!!\"), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }\n          }, \"Account \", customerServicesMenuStore.accountId, \" from Micro Pay\")));\n          break;\n\n        case '3':\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }\n          }, \"Unbinding !!!\"), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }\n          }, \"Account \", customerServicesMenuStore.accountId, \" from True Money Wallet\")));\n          break;\n\n        default:\n          break;\n      }\n    } else {// setIsChecked(false)\n    }\n  };\n\n  const unBindingAccount = () => {};\n\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) => __jsx(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, __jsx(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, __jsx(Switch, {\n      defaultChecked: string.accountBindingStatus,\n      onChange: checked => onChange(string),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), __jsx(StyledP, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 105\n      }\n    }, string.accountName))));\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  const AccountList = () => {\n    const listItems = stringAccount.map((string, index) => __jsx(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, __jsx(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, __jsx(StyledA, {\n      onClick: () => {\n        selectedMenu(string);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, string.accountNumber), __jsx(StyledSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 93\n      }\n    }, \" \", string.accountName))));\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  const newSearch = __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: i18n.t(\"idCard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(AccountList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }) : '');\n\n  const accountDetail = __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: () => setViewDetail(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, i18n.t(\"back\"))), __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    readOnly: true,\n    prefix: i18n.t('accountNumber'),\n    defaultValue: customerServicesMenuStore.accountId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, __jsx(SwitchList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleModal, {\n    onOk: () => setVisble(false),\n    onCancel: () => setVisble(false),\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  })));\n\n  return viewDetail ? accountDetail : newSearch;\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js"],"names":["React","useState","SimpleSearch","styled","Row","Switch","Col","Button","Input","useStores","SimpleModal","i18n","withNamespaces","StyledA","a","theme","spacing","medium","StyledP","p","StyledSpan","span","StyledInput","readOnly","AccountUnbinding","isSearch","setIsSearch","viewDetail","setViewDetail","visible","setVisble","modalString","setModalString","accountId","setAccountId","customerServicesMenuStore","numbers","stringSwitch","accountName","t","accountBindingStatus","accountType","stringAccount","accountNumber","searchIdCardNumber","value","selectedMenu","selectedAccount","console","log","onChange","switchSelected","index","textAlign","unBindingAccount","SwitchList","listItems","map","string","checked","AccountList","newSearch","margin","accountDetail","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport SimpleSearch from '../simple-search'\nimport styled from 'styled-components'\nimport { Row, Switch, Col, Button, Input } from 'antd';\nimport { useStores } from '../../hooks/use-stores'\nimport SimpleModal from '../simple-modal'\nimport { i18n, withNamespaces } from '../../i18n'\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-right: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledP = styled.p`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledInput = styled(Input)`\n      ${({ readOnly }) => readOnly && `\n          border-style: solid !important;\n          border-width: 0px 0px 1px 0px !important;\n          border-color: black !important;\n          box-shadow: none !important;\n          border-right-style: unset !important;\n          border-right-width: 0px !important\n      `}\n`\nexport default function AccountUnbinding() {\n  const [isSearch, setIsSearch] = useState(false);\n  const [viewDetail, setViewDetail] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const [accountId, setAccountId] = useState('')\n  const { customerServicesMenuStore } = useStores()\n  const numbers = [1, 2, 3, 4, 5];\n  const stringSwitch = [{ accountName: i18n.t(\"bindingTCRBMobilBanking\"), accountBindingStatus: true, accountType: '1' }, { accountName: i18n.t(\"bindingMicroPay\"), accountBindingStatus: true, accountType: '2' }, { accountName: i18n.t(\"bindingTrueMoneyWallet\"), accountBindingStatus: true, accountType: '3' }]\n  const stringAccount = [{ accountNumber: '2233344514', accountName: i18n.t(\"normalSaving\"), accountType: '1' }, { accountNumber: '123456789032', accountName: i18n.t(\"revolvingLoanNonTCG\"), accountType: '2' }]\n\n  const searchIdCardNumber = (value) => {\n    // console.log('eiei search:' + value)\n    // setIdCard(value)\n    setIsSearch(true)\n  }\n  const selectedMenu = (selectedAccount) => {\n    switch (selectedAccount.accountType) {\n      case '1':\n        customerServicesMenuStore.setAccountId(selectedAccount.accountNumber)\n        setViewDetail(true)\n        break;\n      case '2':\n        console.log('eiei menu2', selectedAccount)\n        customerServicesMenuStore.setAccountId(selectedAccount.accountNumber)\n        // setAccountId(accountId)\n        setViewDetail(true)\n        break;\n      default:\n        break;\n    }\n  }\n  const onChange = (switchSelected, index) => {\n    // console.log(\"change:\" + value + \",indexOf :\" + index)\n\n    if (switchSelected.accountBindingStatus === true) {\n      setVisble(true)\n      switch (switchSelected.accountType) {\n        case '1':\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p>Unbinding !!!</p>\n              <p>Account {customerServicesMenuStore.accountId} from Mobile Banking</p>\n            </div>\n          )\n          break;\n        case '2':\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p>Unbinding !!!</p>\n              <p>Account {customerServicesMenuStore.accountId} from Micro Pay</p>\n            </div>\n          )\n          break;\n        case '3':\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p>Unbinding !!!</p>\n              <p>Account {customerServicesMenuStore.accountId} from True Money Wallet</p>\n            </div>\n          )\n          break;\n        default:\n          break;\n      }\n    } else {\n      // setIsChecked(false)\n    }\n  }\n\n  const unBindingAccount = () => {\n\n  }\n\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) =>\n      <Row key={index}>\n        <Col span={24}>\n          <Switch defaultChecked={string.accountBindingStatus} onChange={checked => onChange(string)} /><StyledP>{string.accountName}</StyledP>\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  const AccountList = () => {\n    const listItems = stringAccount.map((string, index) =>\n      <Row key={index}>\n        <Col span={24}>\n          <StyledA onClick={() => { selectedMenu(string) }}>{string.accountNumber}</StyledA><StyledSpan> {string.accountName}</StyledSpan>\n\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  const newSearch = (\n    <div style={{ margin: 20 }}>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording={i18n.t(\"idCard\")} />\n      </Row>\n      {(isSearch) ? (\n        <AccountList />\n      ) : ('')}\n    </div>)\n\n  const accountDetail = (\n    <div style={{ margin: 20 }}>\n      <Row gutter={[4, 24]}>\n        <Button onClick={() => setViewDetail(false)}>{i18n.t(\"back\")}</Button>\n      </Row>\n      <Row gutter={[4, 24]}>\n        <Col span={6}>\n          <StyledInput readOnly={true} prefix={i18n.t('accountNumber')} defaultValue={customerServicesMenuStore.accountId} />\n\n        </Col>\n      </Row>\n      <div style={{ marginTop: 20 }} >\n        <SwitchList />\n        <SimpleModal\n          onOk={() => setVisble(false)}\n          onCancel={() => setVisble(false)}\n          okText=\"Confirm\"\n          cancelText=\"Cancel\"\n          modalString={modalString}\n          visible={visible}\n        />\n      </div>\n    </div>\n  )\n  return (viewDetail) ? accountDetail : newSearch\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}