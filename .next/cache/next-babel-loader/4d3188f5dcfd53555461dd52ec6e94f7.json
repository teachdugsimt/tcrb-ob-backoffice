{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ApisauceInstance, create, ApiResponse } from 'apisauce';\nimport Header from './header';\nimport https from 'https';\nvar httpsAgent = new https.Agent({\n  rejectUnauthorized: false,\n  requestCert: false\n});\n\nvar ExcuteApi = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, params, method) {\n    var api, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(url);\n            _context.prev = 1;\n            api = create(Header());\n\n            if (!(method == \"get\" || method == \"GET\")) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return api.get(url, params);\n\n          case 6:\n            response = _context.sent;\n            _context.next = 25;\n            break;\n\n          case 9:\n            if (!(method == \"post\" || method == \"POST\")) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 12;\n            return api.post(url, params);\n\n          case 12:\n            response = _context.sent;\n            _context.next = 25;\n            break;\n\n          case 15:\n            if (!(method == \"put\" || method == \"PUT\")) {\n              _context.next = 21;\n              break;\n            }\n\n            _context.next = 18;\n            return api.put(url, params);\n\n          case 18:\n            response = _context.sent;\n            _context.next = 25;\n            break;\n\n          case 21:\n            if (!(method == \"delete\" || method == \"DELETE\")) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 24;\n            return api[\"delete\"](url, params);\n\n          case 24:\n            response = _context.sent;\n\n          case 25:\n            console.log(response);\n            return _context.abrupt(\"return\", response);\n\n          case 29:\n            _context.prev = 29;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 29]]);\n  }));\n\n  return function ExcuteApi(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = ExcuteApi;\nexport default ExcuteApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExcuteApi\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/services/api-integrations/excute-api.js"],"names":["ApisauceInstance","create","ApiResponse","Header","https","httpsAgent","Agent","rejectUnauthorized","requestCert","ExcuteApi","url","params","method","console","log","api","get","response","post","put"],"mappings":";;AAAA,SAASA,gBAAT,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,UAAtD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAMC,UAAU,GAAG,IAAID,KAAK,CAACE,KAAV,CAAgB;AACjCC,EAAAA,kBAAkB,EAAE,KADa;AAEjCC,EAAAA,WAAW,EAAE;AAFoB,CAAhB,CAAnB;;AAKA,IAAMC,SAAS;AAAA,sEAAG,iBAAOC,GAAP,EAAYC,MAAZ,EAAoBC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AADgB;AAGRK,YAAAA,GAHQ,GAGFd,MAAM,CAACE,MAAM,EAAP,CAHJ;;AAAA,kBAKVS,MAAM,IAAI,KAAV,IAAmBA,MAAM,IAAI,KALnB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMKG,GAAG,CAACC,GAAJ,CAAQN,GAAR,EAAaC,MAAb,CANL;;AAAA;AAMZM,YAAAA,QANY;AAAA;AAAA;;AAAA;AAAA,kBAQLL,MAAM,IAAI,MAAV,IAAoBA,MAAM,IAAI,MARzB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASKG,GAAG,CAACG,IAAJ,CAASR,GAAT,EAAcC,MAAd,CATL;;AAAA;AASZM,YAAAA,QATY;AAAA;AAAA;;AAAA;AAAA,kBAWLL,MAAM,IAAI,KAAV,IAAmBA,MAAM,IAAI,KAXxB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAYKG,GAAG,CAACI,GAAJ,CAAQT,GAAR,EAAaC,MAAb,CAZL;;AAAA;AAYZM,YAAAA,QAZY;AAAA;AAAA;;AAAA;AAAA,kBAcLL,MAAM,IAAI,QAAV,IAAsBA,MAAM,IAAI,QAd3B;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAeKG,GAAG,UAAH,CAAWL,GAAX,EAAgBC,MAAhB,CAfL;;AAAA;AAeZM,YAAAA,QAfY;;AAAA;AAiBdJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAjBc,6CAkBPA,QAlBO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATR,SAAS;AAAA;AAAA;AAAA,GAAf;;KAAMA,S;AAwBN,eAAeA,SAAf","sourcesContent":["import { ApisauceInstance, create, ApiResponse } from 'apisauce'\nimport Header from './header'\nimport https from 'https';\nconst httpsAgent = new https.Agent({\n  rejectUnauthorized: false,\n  requestCert: false,\n})\n\nconst ExcuteApi = async (url, params, method) => {\n  console.log(url)\n  try {\n    const api = create(Header())\n    let response\n    if (method == \"get\" || method == \"GET\") {\n      response = await api.get(url, params)\n    }\n    else if (method == \"post\" || method == \"POST\") {\n      response = await api.post(url, params)\n    }\n    else if (method == \"put\" || method == \"PUT\") {\n      response = await api.put(url, params)\n    }\n    else if (method == \"delete\" || method == \"DELETE\") {\n      response = await api.delete(url, params)\n    }\n    console.log(response)\n    return response\n  } catch (error) {\n    return error\n  }\n}\n\nexport default ExcuteApi\n"]},"metadata":{},"sourceType":"module"}