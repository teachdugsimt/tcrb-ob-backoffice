{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/form-modal-user.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space, Spin } from 'antd';\nimport { TcrbModal, TcrbSpin } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport SimpleInput from '../../simple-input';\nimport tableProductReg from '../../partner-onboard/table-product-reg';\nimport { addKeyToDataSource } from '../../data-utility';\nvar Option = Select.Option;\nvar FormModalUser = inject('userAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState([]),\n      supervisorList = _useState[0],\n      setSupervisorList = _useState[1];\n\n  var _useState2 = useState([]),\n      sectionList = _useState2[0],\n      setSectionLIst = _useState2[1]; // const { userAccessManagementStore } = props\n\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var visible = props.visible,\n      onCreate = props.onCreate,\n      _onCancel = props.onCancel,\n      userAccessManagementStore = props.userAccessManagementStore;\n  var dateFormat = 'YYYY-MM-DD';\n  useEffect(function () {\n    if (visible === true) {\n      setSupervisorList([]);\n      getOptionSectionList();\n    }\n  }, [visible]);\n  useEffect(function () {\n    if (userAccessManagementStore.optionSectionList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.optionSectionList).then(function (result) {\n        setSectionLIst(result);\n      });\n    }\n  }, [userAccessManagementStore.optionSectionList]);\n  useEffect(function () {\n    if (userAccessManagementStore.supervisorList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.supervisorList).then(function (result) {\n        setSupervisorList(result);\n      });\n    }\n  }, [userAccessManagementStore.optionSectionList]);\n\n  var getOptionSectionList = function getOptionSectionList() {\n    userAccessManagementStore.getDataSectionList();\n  };\n\n  var testAddSupervisor = function testAddSupervisor(sectionId) {\n    userAccessManagementStore.getDataSupervisor(sectionId);\n  };\n\n  return __jsx(TcrbModal, {\n    visible: visible,\n    title: \"Add new User\",\n    okText: \"Submit\",\n    cancelText: \"Cancel\",\n    destroyOnClose: true,\n    forceRender: true,\n    onCancel: function onCancel() {\n      _onCancel();\n\n      form.resetFields();\n    },\n    width: 900,\n    onOk: function onOk() {\n      form.validateFields().then(function (values) {\n        form.resetFields();\n        onCreate(values);\n      })[\"catch\"](function (info) {\n        console.log('Validate Failed:', info);\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(TcrbSpin, {\n    spinning: userAccessManagementStore.apiFetching,\n    size: \"large\",\n    tip: \"Loading...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    form: form,\n    layout: \"vertical\",\n    name: \"form_in_modal\",\n    initialValues: {\n      modifier: 'public'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    style: {\n      padding: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Employee ID\")), __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"employee_code\",\n    rules: [{\n      required: true,\n      message: 'Please input Employee Id!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    style: {\n      paddingLeft: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Supervisor\")), __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"supervisor_id\",\n    rules: [{\n      required: true,\n      message: 'Please input Supervisor!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Please select\",\n    onChange: function onChange(value) {\n      return null;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, supervisorList.map(function (item, index) {\n    return __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 58\n      }\n    }, item.name);\n  }))))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    style: {\n      padding: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Name\")), __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: 'Please input Name!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    style: {\n      paddingLeft: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Surname\")), __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"surname\",\n    rules: [{\n      required: true,\n      message: 'Please input Surname!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  })))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    style: {\n      padding: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Username\")), __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"user_name\",\n    rules: [{\n      required: true,\n      message: 'Please input Username!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    style: {\n      paddingLeft: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, \"Email\")), __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input Email!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  })))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    style: {\n      padding: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, \"Join Date\")), __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"join_date\",\n    rules: [{\n      required: true,\n      message: 'Please input the title of collection!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, __jsx(DatePicker, {\n    style: {\n      width: '100%'\n    },\n    format: dateFormat,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    style: {\n      paddingLeft: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, \"Last working date\")), __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"last_working_date\",\n    rules: [{\n      required: true,\n      message: 'Please input the title of collection!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, __jsx(DatePicker, {\n    style: {\n      width: '100%'\n    },\n    format: dateFormat,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  })))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    style: {\n      padding: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, \"Status\")), __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"status\",\n    rules: [{\n      required: true,\n      message: 'Please input Status!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    style: {\n      width: '100'\n    },\n    placeholder: \"Please select\",\n    onChange: function onChange(value) {\n      return testAddSupervisor(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, __jsx(Option, {\n    value: \"INACTIVE\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, \"INACTIVE\"), __jsx(Option, {\n    value: \"ACTIVE\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, \"ACTIVE\"), __jsx(Option, {\n    value: \"SUSPEND\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, \"SUSPEND\")))), __jsx(Col, {\n    span: 4,\n    style: {\n      paddingLeft: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, \"Section\")), __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"section_id\",\n    rules: [{\n      required: true,\n      message: 'Please input Section!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Please select\",\n    onChange: function onChange(value) {\n      return testAddSupervisor(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }\n  }, sectionList.map(function (item, index) {\n    return __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 55\n      }\n    }, item.name);\n  }))))))));\n}, \"/HemOYttPBT/7yH/odpywjGm0B0=\", false, function () {\n  return [Form.useForm];\n})));\nexport default FormModalUser;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/form-modal-user.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","InputNumber","Divider","Button","Modal","Drawer","Form","DatePicker","Space","Spin","TcrbModal","TcrbSpin","inject","observer","SimpleInput","tableProductReg","addKeyToDataSource","Option","FormModalUser","props","supervisorList","setSupervisorList","sectionList","setSectionLIst","useForm","form","visible","onCreate","onCancel","userAccessManagementStore","dateFormat","getOptionSectionList","optionSectionList","length","then","result","getDataSectionList","testAddSupervisor","sectionId","getDataSupervisor","resetFields","validateFields","values","info","console","log","apiFetching","modifier","padding","required","message","paddingLeft","width","value","map","item","index","id","name","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space, Spin } from 'antd'\nimport { TcrbModal, TcrbSpin } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react'\n\nimport SimpleInput from '../../simple-input'\nimport tableProductReg from '../../partner-onboard/table-product-reg';\nimport { addKeyToDataSource } from '../../data-utility';\nconst { Option } = Select;\n\nconst FormModalUser = inject('userAccessManagementStore')\n  (observer((props) => {\n    const [supervisorList, setSupervisorList] = useState([])\n    const [sectionList, setSectionLIst] = useState([])\n    // const { userAccessManagementStore } = props\n    const [form] = Form.useForm();\n    const { visible, onCreate, onCancel, userAccessManagementStore } = props\n    const dateFormat = 'YYYY-MM-DD'\n    useEffect(() => {\n      if (visible === true) {\n        setSupervisorList([])\n        getOptionSectionList()\n      }\n    }, [visible])\n\n    useEffect(() => {\n      if (userAccessManagementStore.optionSectionList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.optionSectionList).then(result => {\n          setSectionLIst(result)\n        })\n      }\n    }, [userAccessManagementStore.optionSectionList])\n\n    useEffect(() => {\n      if (userAccessManagementStore.supervisorList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.supervisorList).then(result => {\n          setSupervisorList(result)\n        })\n      }\n    }, [userAccessManagementStore.optionSectionList])\n\n\n    const getOptionSectionList = () => {\n      userAccessManagementStore.getDataSectionList()\n    }\n    const testAddSupervisor = (sectionId) => {\n      userAccessManagementStore.getDataSupervisor(sectionId)\n    }\n    return (\n      <TcrbModal\n        visible={visible}\n        title=\"Add new User\"\n        okText=\"Submit\"\n        cancelText=\"Cancel\"\n        destroyOnClose={true}\n        forceRender={true}\n        onCancel={() => {\n          onCancel()\n          form.resetFields();\n        }}\n        width={900}\n        onOk={() => {\n          form\n            .validateFields()\n            .then(values => {\n              form.resetFields();\n              onCreate(values);\n            })\n            .catch(info => {\n              console.log('Validate Failed:', info);\n            });\n        }}\n      >\n        <TcrbSpin spinning={userAccessManagementStore.apiFetching} size=\"large\" tip=\"Loading...\" >\n\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"form_in_modal\"\n            initialValues={{\n              modifier: 'public',\n            }}\n          >\n\n            <Row >\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Employee ID\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"employee_code\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Employee Id!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Supervisor\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"supervisor_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Supervisor!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => null}\n                  >\n                    {supervisorList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row >\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Name\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Name!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Surname\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"surname\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Surname!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Username\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"user_name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Username!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Email\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"email\"\n                  rules={[\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input Email!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Join Date\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"join_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: '100%' }} format={dateFormat} />\n\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Last working date\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"last_working_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: '100%' }} format={dateFormat} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Status\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"status\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Status!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => testAddSupervisor(value)}\n                  >\n                    {/* {children} */}\n                    <Option value=\"INACTIVE\">INACTIVE</Option>\n                    <Option value=\"ACTIVE\">ACTIVE</Option>\n                    <Option value=\"SUSPEND\">SUSPEND</Option>\n                  </Select>\n\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Section\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"section_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Section!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => testAddSupervisor(value)}\n                  >\n                    {sectionList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n                    {/* {children} */}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </TcrbSpin>\n      </TcrbModal>\n    );\n  }\n  ))\n\nexport default FormModalUser\n"]},"metadata":{},"sourceType":"module"}