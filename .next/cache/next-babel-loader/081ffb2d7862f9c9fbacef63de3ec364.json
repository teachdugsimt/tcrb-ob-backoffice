{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport { ApisauceInstance, create, ApiResponse } from 'apisauce'; // import Header from './api-integrations/header-otp'\n\nimport header from './api-integrations/header';\nimport getGeneralApiProblem from './api-integrations/error-handler'; // v1/parameterstore\n\nvar BusinessParameterSetupApi = function BusinessParameterSetupApi() {\n  _classCallCheck(this, BusinessParameterSetupApi);\n\n  this.getOtpValue = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n      var api, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              api = create(header);\n              _context.next = 3;\n              return api.get('api/backoffice/v1/parameterstore', params);\n\n            case 3:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.setOtpValue = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n      var api, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              api = create(header);\n              _context2.next = 3;\n              return api.put('api/backoffice/v1/parameterstore', params);\n\n            case 3:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.getProductLimit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n      var api, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              api = create(header);\n              _context3.next = 3;\n              return api.get('api/backoffice/v1/partnertransactionlimit', params);\n\n            case 3:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", response);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  this.submitPartnerLimit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params) {\n      var api;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              api = create(header);\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\n\nexport default new BusinessParameterSetupApi();","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/services/business-parameter-setup-api.js"],"names":["ApisauceInstance","create","ApiResponse","header","getGeneralApiProblem","BusinessParameterSetupApi","getOtpValue","params","api","get","response","setOtpValue","put","getProductLimit","submitPartnerLimit"],"mappings":";;;AAAA,SAASA,gBAAT,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,UAAtD,C,CACA;;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,oBAAP,MAAiC,kCAAjC,C,CACA;;IACMC,yB;;;OAEJC,W;wEAAc,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,cAAAA,GADM,GACAP,MAAM,CAACE,MAAD,CADN;AAAA;AAAA,qBAEWK,GAAG,CAACC,GAAJ,CAAQ,kCAAR,EAA4CF,MAA5C,CAFX;;AAAA;AAENG,cAAAA,QAFM;AAAA,+CAGLA,QAHK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAMdC,W;yEAAc,kBAAOJ,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,cAAAA,GADM,GACAP,MAAM,CAACE,MAAD,CADN;AAAA;AAAA,qBAEWK,GAAG,CAACI,GAAJ,CAAQ,kCAAR,EAA4CL,MAA5C,CAFX;;AAAA;AAENG,cAAAA,QAFM;AAAA,gDAGLA,QAHK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAMdG,e;yEAAkB,kBAAON,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,GADU,GACJP,MAAM,CAACE,MAAD,CADF;AAAA;AAAA,qBAEOK,GAAG,CAACC,GAAJ,CAAQ,2CAAR,EAAqDF,MAArD,CAFP;;AAAA;AAEVG,cAAAA,QAFU;AAAA,gDAGTA,QAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAMlBI,kB;yEAAqB,kBAAOP,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,cAAAA,GADa,GACPP,MAAM,CAACE,MAAD,CADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;AAKvB,eAAe,IAAIE,yBAAJ,EAAf","sourcesContent":["import { ApisauceInstance, create, ApiResponse } from 'apisauce'\n// import Header from './api-integrations/header-otp'\nimport header from './api-integrations/header'\nimport getGeneralApiProblem from './api-integrations/error-handler'\n// v1/parameterstore\nclass BusinessParameterSetupApi {\n\n  getOtpValue = async (params) => {\n    const api = create(header)\n    const response = await api.get('api/backoffice/v1/parameterstore', params)\n    return response\n  }\n\n  setOtpValue = async (params) => {\n    const api = create(header)\n    const response = await api.put('api/backoffice/v1/parameterstore', params)\n    return response\n  }\n\n  getProductLimit = async (params) => {\n    const api = create(header)\n    const response = await api.get('api/backoffice/v1/partnertransactionlimit', params)\n    return response\n  }\n\n  submitPartnerLimit = async (params) => {\n    const api = create(header)\n\n  }\n}\nexport default new BusinessParameterSetupApi()\n"]},"metadata":{},"sourceType":"module"}