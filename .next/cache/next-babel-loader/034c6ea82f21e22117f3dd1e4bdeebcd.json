{"ast":null,"code":"import { ApisauceInstance, create, ApiResponse } from 'apisauce';\nimport Header from './api-integrations/header';\nimport ExcuteApi from './api-integrations/excute-api';\n\nclass CustomerServicesMenuApi {\n  constructor() {\n    this.getAccountInfo = async params => {\n      // const api = create(Header())\n      // const response = await api.get('api/backoffice/v1/otp/blacklist', params)\n      const response = await ExcuteApi('api/backoffice/v1/otp/blacklist', params, \"get\");\n      return response;\n    };\n\n    this.getAccountInfoUnbinding = async params => {\n      // const api = create(Header())\n      // const response = await api.get('api/backoffice/v1/accounts', params)\n      const response = await ExcuteApi('api/backoffice/v1/accounts', params, \"get\");\n      return response;\n    };\n\n    this.getAccountProductsInfo = async params => {\n      // const api = create(Header())\n      // const response = await api.get('api/backoffice/v1/accounts/partner-info', params)\n      const response = await ExcuteApi('api/backoffice/v1/accounts/partner-info', params, \"get\");\n      return response;\n    };\n\n    this.unlockOTPAccount = async params => {\n      // const api = create(Header())\n      // const response = await api.post('api/backoffice/v1/otp/unlock', params)\n      const response = await ExcuteApi('api/backoffice/v1/otp/unlock', params, \"post\");\n      return response;\n    };\n\n    this.unbindAccount = async params => {\n      // const api = create(Header())\n      // const response = await api.post('api/accounts/unbind', params)\n      const response = await ExcuteApi('api/accounts/unbind', params, \"post\");\n      return response;\n    };\n  }\n\n}\n\nexport default new CustomerServicesMenuApi(); // HTTPS=true SSL_CRT_FILE=Certificate_chain.txt SSL_KEY_FILE=private_key.txt npm run dev","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/services/customer-services-menu-api.js"],"names":["ApisauceInstance","create","ApiResponse","Header","ExcuteApi","CustomerServicesMenuApi","getAccountInfo","params","response","getAccountInfoUnbinding","getAccountProductsInfo","unlockOTPAccount","unbindAccount"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,UAAtD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAEA,MAAMC,uBAAN,CAA8B;AAAA;AAAA,SAE5BC,cAF4B,GAEX,MAAOC,MAAP,IAAkB;AACjC;AACA;AACA,YAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAAC,iCAAD,EAAoCG,MAApC,EAA4C,KAA5C,CAAhC;AACA,aAAOC,QAAP;AACD,KAP2B;;AAAA,SAS5BC,uBAT4B,GASF,MAAOF,MAAP,IAAkB;AAC1C;AACA;AACA,YAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAAC,4BAAD,EAA+BG,MAA/B,EAAuC,KAAvC,CAAhC;AACA,aAAOC,QAAP;AACD,KAd2B;;AAAA,SAgB5BE,sBAhB4B,GAgBH,MAAOH,MAAP,IAAkB;AACzC;AACA;AACA,YAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAAC,yCAAD,EAA4CG,MAA5C,EAAoD,KAApD,CAAhC;AACA,aAAOC,QAAP;AACD,KArB2B;;AAAA,SAuB5BG,gBAvB4B,GAuBT,MAAOJ,MAAP,IAAkB;AACnC;AACA;AACA,YAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAAC,8BAAD,EAAiCG,MAAjC,EAAyC,MAAzC,CAAhC;AACA,aAAOC,QAAP;AACD,KA5B2B;;AAAA,SA8B5BI,aA9B4B,GA8BZ,MAAOL,MAAP,IAAkB;AAChC;AACA;AACA,YAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAAC,qBAAD,EAAwBG,MAAxB,EAAgC,MAAhC,CAAhC;AACA,aAAOC,QAAP;AACD,KAnC2B;AAAA;;AAAA;;AAqC9B,eAAe,IAAIH,uBAAJ,EAAf,C,CACA","sourcesContent":["import { ApisauceInstance, create, ApiResponse } from 'apisauce'\nimport Header from './api-integrations/header'\nimport ExcuteApi from './api-integrations/excute-api'\n\nclass CustomerServicesMenuApi {\n\n  getAccountInfo = async (params) => {\n    // const api = create(Header())\n    // const response = await api.get('api/backoffice/v1/otp/blacklist', params)\n    const response = await ExcuteApi('api/backoffice/v1/otp/blacklist', params, \"get\")\n    return response\n  }\n\n  getAccountInfoUnbinding = async (params) => {\n    // const api = create(Header())\n    // const response = await api.get('api/backoffice/v1/accounts', params)\n    const response = await ExcuteApi('api/backoffice/v1/accounts', params, \"get\")\n    return response\n  }\n\n  getAccountProductsInfo = async (params) => {\n    // const api = create(Header())\n    // const response = await api.get('api/backoffice/v1/accounts/partner-info', params)\n    const response = await ExcuteApi('api/backoffice/v1/accounts/partner-info', params, \"get\")\n    return response\n  }\n\n  unlockOTPAccount = async (params) => {\n    // const api = create(Header())\n    // const response = await api.post('api/backoffice/v1/otp/unlock', params)\n    const response = await ExcuteApi('api/backoffice/v1/otp/unlock', params, \"post\")\n    return response\n  }\n\n  unbindAccount = async (params) => {\n    // const api = create(Header())\n    // const response = await api.post('api/accounts/unbind', params)\n    const response = await ExcuteApi('api/accounts/unbind', params, \"post\")\n    return response\n  }\n}\nexport default new CustomerServicesMenuApi()\n// HTTPS=true SSL_CRT_FILE=Certificate_chain.txt SSL_KEY_FILE=private_key.txt npm run dev\n"]},"metadata":{},"sourceType":"module"}