{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _temp;\n\n// src/stores/counter-store.tsx\nimport { observable, action, computed, toJS } from 'mobx';\nimport { BusinessParameterSetupApi } from '../services';\nimport { create, persist } from 'mobx-persist';\nvar pendingApprovals = (_class = (_temp = function pendingApprovals() {\n  var _this = this;\n\n  _classCallCheck(this, pendingApprovals);\n\n  _initializerDefineProperty(this, \"apiLoading\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"responseGetPendingApproveList\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"requestGetPendingApproveList\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"errorGetPendingApproveList\", _descriptor4, this);\n\n  _initializerDefineProperty(this, \"responseProcessPendingList\", _descriptor5, this);\n\n  _initializerDefineProperty(this, \"requestProcessPendingList\", _descriptor6, this);\n\n  _initializerDefineProperty(this, \"errorProcessPendingList\", _descriptor7, this);\n\n  _initializerDefineProperty(this, \"tmpPendingListID\", _descriptor8, this);\n\n  _initializerDefineProperty(this, \"pendingApprovals\", _descriptor9, this);\n\n  _initializerDefineProperty(this, \"fetchingApi\", _descriptor10, this);\n\n  this.updatePendingList = function () {\n    if (_this.tmpPendingListID && _this.responseProcessPendingList) {\n      var old_id = JSON.parse(JSON.stringify(_this.tmpPendingListID));\n      var old_list = JSON.parse(JSON.stringify(_this.responseGetPendingApproveList));\n      old_list.map(function (e, i) {\n        if (old_id == e.id) {\n          old_list.splice(i, 1);\n        }\n      });\n      _this.responseGetPendingApproveList = old_list;\n    }\n  };\n\n  _initializerDefineProperty(this, \"setTmpPendingListID\", _descriptor11, this);\n\n  _initializerDefineProperty(this, \"processPendingListApprove\", _descriptor12, this);\n\n  _initializerDefineProperty(this, \"getPendingApprove\", _descriptor13, this);\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"apiLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"responseGetPendingApproveList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"requestGetPendingApproveList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"errorGetPendingApproveList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"responseProcessPendingList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"requestProcessPendingList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"errorProcessPendingList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"tmpPendingListID\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"pendingApprovals\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"fetchingApi\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"setTmpPendingListID\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (id) {\n      _this2.tmpPendingListID = id;\n    };\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"processPendingListApprove\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n        var tmp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this3.apiLoading = true;\n                _context.next = 3;\n                return BusinessParameterSetupApi.processPendingList(params);\n\n              case 3:\n                tmp = _context.sent;\n                console.log(\"Response process Pending Approve APISAUCE : \", tmp);\n\n                if (tmp.ok) {\n                  _this3.apiLoading = false;\n                  _this3.errorProcessPendingList = null;\n                  _this3.responseProcessPendingList = tmp.ok;\n\n                  _this3.updatePendingList();\n\n                  _this3.tmpPendingListID = null;\n                } else {\n                  _this3.apiLoading = false;\n                  _this3.responseProcessPendingList = null;\n                  _this3.errorProcessPendingList = tmp.problem;\n                  _this3.tmpPendingListID = null;\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"getPendingApprove\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n        var tmp, raw_Data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this4.apiLoading = true;\n                _context2.next = 3;\n                return BusinessParameterSetupApi.getPendingApproveList(params);\n\n              case 3:\n                tmp = _context2.sent;\n                console.log(\"Response get Pending Approve APISAUCE : \", tmp);\n\n                if (tmp.ok == true) {\n                  raw_Data = toJS(tmp.data.responseData);\n                  _this4.apiLoading = false;\n                  _this4.errorGetPendingApproveList = null;\n                  _this4.responseGetPendingApproveList = raw_Data;\n                } else {\n                  _this4.apiLoading = false;\n                  _this4.responseGetPendingApproveList = null;\n                  _this4.errorGetPendingApproveList = tmp.problem;\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n})), _class);\nexport default pendingApprovals;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/pending-approve-store.js"],"names":["observable","action","computed","toJS","BusinessParameterSetupApi","create","persist","pendingApprovals","updatePendingList","tmpPendingListID","responseProcessPendingList","old_id","JSON","parse","stringify","old_list","responseGetPendingApproveList","map","e","i","id","splice","params","apiLoading","processPendingList","tmp","console","log","ok","errorProcessPendingList","problem","getPendingApproveList","raw_Data","data","responseData","errorGetPendingApproveList"],"mappings":"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","sourcesContent":["// src/stores/counter-store.tsx\nimport { observable, action, computed, toJS } from 'mobx'\nimport { BusinessParameterSetupApi } from '../services'\nimport { create, persist } from 'mobx-persist'\n\nclass pendingApprovals {\n  @observable apiLoading = null\n\n  @observable responseGetPendingApproveList = null\n  @observable requestGetPendingApproveList = null\n  @observable errorGetPendingApproveList = null\n\n  @observable responseProcessPendingList = null\n  @observable requestProcessPendingList = null\n  @observable errorProcessPendingList = null\n  @observable tmpPendingListID = null\n\n  @observable pendingApprovals = []\n  @observable fetchingApi = false\n\n\n\n  updatePendingList = () => {\n    if (this.tmpPendingListID && this.responseProcessPendingList) {\n      let old_id = JSON.parse(JSON.stringify(this.tmpPendingListID))\n      let old_list = JSON.parse(JSON.stringify(this.responseGetPendingApproveList))\n      old_list.map((e, i) => {\n        if (old_id == e.id) {\n          old_list.splice(i, 1)\n        }\n      })\n      this.responseGetPendingApproveList = old_list\n    }\n  }\n\n  @action setTmpPendingListID = (id) => {\n    this.tmpPendingListID = id\n  }\n\n  @action processPendingListApprove = async (params) => {\n    this.apiLoading = true\n    let tmp = await BusinessParameterSetupApi.processPendingList(params)\n    console.log(\"Response process Pending Approve APISAUCE : \", tmp)\n    if (tmp.ok) {\n      this.apiLoading = false\n      this.errorProcessPendingList = null\n      this.responseProcessPendingList = tmp.ok\n      this.updatePendingList()\n      this.tmpPendingListID = null\n    } else {\n      this.apiLoading = false\n      this.responseProcessPendingList = null\n      this.errorProcessPendingList = tmp.problem\n      this.tmpPendingListID = null\n    }\n  }\n\n  @action getPendingApprove = async (params) => {\n    this.apiLoading = true\n    let tmp = await BusinessParameterSetupApi.getPendingApproveList(params)\n    console.log(\"Response get Pending Approve APISAUCE : \", tmp)\n    if (tmp.ok == true) {\n      let raw_Data = toJS(tmp.data.responseData)\n      this.apiLoading = false\n      this.errorGetPendingApproveList = null\n      this.responseGetPendingApproveList = raw_Data\n    } else {\n      this.apiLoading = false\n      this.responseGetPendingApproveList = null\n      this.errorGetPendingApproveList = tmp.problem\n    }\n  }\n}\nexport default pendingApprovals\n"]},"metadata":{},"sourceType":"module"}