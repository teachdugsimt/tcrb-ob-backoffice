{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/product-list.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { DeleteOutlined, SettingOutlined, FormOutlined } from '@ant-design/icons';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider } from 'antd';\nimport { green, gold } from '@ant-design/colors';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../../i18n';\nimport styled from 'styled-components';\nimport { toJS } from 'mobx';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { addKeyToDataSource } from '../data-utility';\nvar ProductList = inject('businessParametersSetupStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState(''),\n      editingKey = _useState[0],\n      setEditingKey = _useState[1];\n\n  var _useState2 = useState(false),\n      disabledButtonAddRow = _useState2[0],\n      setDisabledButtonAddRow = _useState2[1];\n\n  var isEditing = function isEditing(record) {\n    return record.key === editingKey;\n  };\n\n  var _useState3 = useState([]),\n      dataSource = _useState3[0],\n      setDataSource = _useState3[1];\n\n  useEffect(function () {\n    businessParametersSetupStore.getDataProductLimit();\n    businessParametersSetupStore.getDataChannelPartnerList();\n    businessParametersSetupStore.getDataProductList();\n  }, []);\n  useEffect(function () {\n    if (businessParametersSetupStore.productLimit.length > 0) {\n      addKeyToDataSource(businessParametersSetupStore.productLimit).then(function (result) {\n        businessParametersSetupStore.arrayProductLimit = result;\n        setDataSource(result);\n      });\n    }\n  }, [businessParametersSetupStore.productLimit]);\n  useEffect(function () {\n    if (businessParametersSetupStore.productList.length > 1) {\n      setProductList(businessParametersSetupStore.productList);\n    }\n  }, [businessParametersSetupStore.productList]);\n\n  var edit = function edit(record) {\n    form.setFieldsValue(_objectSpread({\n      product_type: '',\n      product_description: '',\n      transaction_limit: '',\n      daily_limit: '',\n      Specific: ''\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  var EditableCell = function EditableCell(_ref) {\n    var editing = _ref.editing,\n        dataIndex = _ref.dataIndex,\n        title = _ref.title,\n        inputType = _ref.inputType,\n        record = _ref.record,\n        index = _ref.index,\n        children = _ref.children,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    var inputNode = inputType === 'number' ? __jsx(InputNumber, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 52\n      }\n    }) : __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 70\n      }\n    });\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(Form.Item, {\n      name: dataIndex == 'product_type' ? 'product_code' : dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: inputType === 'number' ? true : false,\n        message: \"Please Input \".concat(title, \"!\")\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, dataIndex == 'product_type' ? __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, productList.map(function (item, index) {\n      return __jsx(Option, {\n        key: index,\n        value: item.product_code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 55\n        }\n      }, item.product_type);\n    })) : __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, inputNode)) : children);\n  };\n\n  var addRowProductList = function addRowProductList() {\n    var newProduct = {\n      key: dataSource.length + 1,\n      product_code: '',\n      product_description: '',\n      transaction_limit: '',\n      daily_limit: '',\n      Specific: ''\n    };\n    setDataSource([].concat(_toConsumableArray(dataSource), [newProduct]));\n    edit(newProduct);\n    setDisabledButtonAddRow(true);\n    businessParametersSetupStore.arrayProductLimit = dataSource;\n  };\n\n  var submitAddnewProduct = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n      var row, indexProduct, newData, index, item;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return form.validateFields();\n\n            case 2:\n              row = _context.sent;\n              row.status = '2';\n              row.transaction_code = \"6931\";\n              indexProduct = productList.findIndex(function (item) {\n                return row.product_code === item.product_code;\n              });\n              row.product_type = productList[indexProduct].product_type;\n              newData = _toConsumableArray(dataSource);\n              index = newData.findIndex(function (item) {\n                return key === item.key;\n              });\n\n              if (index > -1) {\n                item = newData[index];\n                newData.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n                setDataSource(newData);\n                setEditingKey('');\n              } else {\n                newData.push(row);\n                setDataSource(newData);\n                setEditingKey('');\n              }\n\n              setDisabledButtonAddRow(false);\n              businessParametersSetupStore.addNewProductLimit(row);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitAddnewProduct(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var cancelAddNewProduct = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(key) {\n      var indexProduct, newData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setDisabledButtonAddRow(false);\n              indexProduct = dataSource.findIndex(function (item) {\n                return key === item.key;\n              });\n              newData = _toConsumableArray(dataSource);\n              newData.splice(indexProduct, 1);\n              setDataSource(newData);\n              setEditingKey('');\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function cancelAddNewProduct(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var submitDeleteProduct = function submitDeleteProduct(record) {\n    //call api to update record status\n    console.log(toJS(record));\n    var indexRecordDelete = dataSource.findIndex(function (item) {\n      return record.key === item.key;\n    });\n\n    var newData = _toConsumableArray(dataSource);\n\n    newData[indexRecordDelete].status = '2';\n    businessParametersSetupStore.deleteProductLimit(record);\n    setDataSource(newData); //waiting useEffect to check api success\n  };\n\n  var renderOnclickHandler = function renderOnclickHandler(text, record) {\n    var stringToNumber = new Number(text);\n\n    if (isNaN(stringToNumber)) {\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 18\n        }\n      }, text);\n    } else {\n      var customText = stringToNumber.toLocaleString();\n      return __jsx(\"p\", {\n        style: {\n          textAlign: \"right\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 18\n        }\n      }, customText);\n    }\n  };\n\n  var renderActionAddDeleteHandler = function renderActionAddDeleteHandler(record, index) {\n    if (record.status === '1') {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Delete?\",\n        onConfirm: function onConfirm(e) {\n          submitDeleteProduct(record);\n        },\n        disabled: editingKey !== '',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, __jsx(DeleteOutlined, {\n        style: {\n          fontSize: '18px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 20\n        }\n      }))), __jsx(\"a\", {\n        onClick: function onClick() {\n          return selectProductToViewDetail(record);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }, __jsx(SettingOutlined, {\n        style: {\n          fontSize: '18px',\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 68\n        }\n      })), __jsx(\"a\", {\n        onClick: function onClick() {\n          return selectProductToSpecificLimit(record);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, __jsx(FormOutlined, {\n        style: {\n          fontSize: '18px',\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 71\n        }\n      })));\n    } else if (record.status === '2') {\n      return null;\n    } else {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Confirm to Add !!!\",\n        onConfirm: function onConfirm() {\n          submitAddnewProduct(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }, \"Confirm\")), __jsx(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 30\n        }\n      }), __jsx(TcrbPopconfirm, {\n        title: \"Confirm to Cancel !!!\",\n        onConfirm: function onConfirm() {\n          cancelAddNewProduct(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }, \"Cancel\")));\n    }\n  };\n\n  var renderStatus = function renderStatus(record) {\n    if (record.status === '1') {\n      return __jsx(\"p\", {\n        style: {\n          color: green[6]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 18\n        }\n      }, \"Active\");\n    } else if (record.status === '2') {\n      return __jsx(\"p\", {\n        style: {\n          color: gold[6]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 18\n        }\n      }, \"Pending\");\n    } else {\n      return null;\n    }\n  };\n\n  var renderActionSpecificHandler = function renderActionSpecificHandler(record) {\n    return __jsx(\"p\", {\n      onClick: function onClick() {\n        return selectProductToSpecificLimit(record);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 16\n      }\n    }, \".....\");\n  };\n\n  var columns = [{\n    dataIndex: 'operation',\n    render: function render(text, record, index) {\n      return renderStatus(record, index);\n    }\n  }, {\n    title: 'Product_Code',\n    dataIndex: 'product_type',\n    width: '5%',\n    editable: true,\n    render: function render(text, record) {\n      return renderOnclickHandler(text, record);\n    }\n  }, {\n    title: 'Product_Description',\n    dataIndex: 'product_description',\n    editable: true,\n    render: function render(text, record) {\n      return renderOnclickHandler(text, record);\n    }\n  }, {\n    title: 'All-Channel Txn Limit',\n    dataIndex: 'transaction_limit',\n    editable: true,\n    render: function render(text, record) {\n      return renderOnclickHandler(text, record);\n    }\n  }, {\n    title: 'All-Channel Daily Limit',\n    dataIndex: 'daily_limit',\n    editable: true,\n    render: function render(text, record) {\n      return renderOnclickHandler(text, record);\n    }\n  }, {\n    title: 'Specific Channel Limit',\n    dataIndex: 'Specific',\n    // editable: true,\n    render: function render(text, record) {\n      return renderActionSpecificHandler(text, record);\n    }\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    render: function render(text, record, index) {\n      return renderActionAddDeleteHandler(record, index);\n    }\n  }];\n  var mergedColumns = columns.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        };\n      }\n    });\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    onClick: function onClick() {\n      return addRowProductList();\n    },\n    style: {\n      marginBottom: 16\n    },\n    disabled: disabledButtonAddRow,\n    className: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, \"Add a Product\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    flex: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, __jsx(Form, {\n    form: form,\n    component: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, __jsx(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: dataSource,\n    columns: mergedColumns,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  })))));\n}, \"cyUQ1vcWOaXL0j8wV2+UrybH49o=\")));\nexport default withTranslation('common')(ProductList);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/product-list.js"],"names":["React","useState","useEffect","DeleteOutlined","SettingOutlined","FormOutlined","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","green","gold","inject","observer","withTranslation","styled","toJS","TcrbButton","TcrbPopconfirm","addKeyToDataSource","ProductList","props","editingKey","setEditingKey","disabledButtonAddRow","setDisabledButtonAddRow","isEditing","record","key","dataSource","setDataSource","businessParametersSetupStore","getDataProductLimit","getDataChannelPartnerList","getDataProductList","productLimit","length","then","result","arrayProductLimit","productList","setProductList","edit","form","setFieldsValue","product_type","product_description","transaction_limit","daily_limit","Specific","EditableCell","editing","dataIndex","title","inputType","index","children","restProps","inputNode","margin","required","message","width","map","item","product_code","addRowProductList","newProduct","submitAddnewProduct","validateFields","row","status","transaction_code","indexProduct","findIndex","newData","splice","push","addNewProductLimit","cancelAddNewProduct","submitDeleteProduct","console","log","indexRecordDelete","deleteProductLimit","renderOnclickHandler","text","stringToNumber","Number","isNaN","customText","toLocaleString","textAlign","renderActionAddDeleteHandler","e","fontSize","selectProductToViewDetail","color","selectProductToSpecificLimit","renderStatus","renderActionSpecificHandler","columns","render","editable","mergedColumns","col","onCell","marginBottom","body","cell"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { DeleteOutlined, SettingOutlined, FormOutlined } from '@ant-design/icons';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider } from 'antd'\nimport { green, gold } from '@ant-design/colors';\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../../i18n'\nimport styled from 'styled-components'\nimport { toJS } from 'mobx'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { addKeyToDataSource } from '../data-utility'\n\n\nconst ProductList =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const [editingKey, setEditingKey] = useState('')\n      const [disabledButtonAddRow, setDisabledButtonAddRow] = useState(false)\n      const isEditing = record => record.key === editingKey;\n      const [dataSource, setDataSource] = useState([])\n\n      useEffect(() => {\n        businessParametersSetupStore.getDataProductLimit()\n        businessParametersSetupStore.getDataChannelPartnerList()\n        businessParametersSetupStore.getDataProductList()\n      }, []);\n\n      useEffect(() => {\n        if (businessParametersSetupStore.productLimit.length > 0) {\n          addKeyToDataSource(businessParametersSetupStore.productLimit).then((result) => {\n            businessParametersSetupStore.arrayProductLimit = result\n            setDataSource(result)\n          })\n        }\n      }, [businessParametersSetupStore.productLimit])\n\n      useEffect(() => {\n        if (businessParametersSetupStore.productList.length > 1) {\n          setProductList(businessParametersSetupStore.productList)\n        }\n      }, [businessParametersSetupStore.productList])\n\n      const edit = record => {\n        form.setFieldsValue({\n          product_type: '',\n          product_description: '',\n          transaction_limit: '',\n          daily_limit: '',\n          Specific: '',\n          ...record,\n        });\n        setEditingKey(record.key);\n      };\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n        return (\n          <td {...restProps}>\n            {editing ? (\n\n              <Form.Item\n                name={dataIndex == 'product_type' ? 'product_code' : dataIndex}\n                style={{\n                  margin: 0,\n                }}\n                rules={[\n                  {\n                    required: (inputType === 'number') ? true : false,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                {/* {inputNode} */}\n                {dataIndex == 'product_type' ? (\n                  <Select\n                    style={{ width: '100%' }}\n                  >\n                    {productList.map((item, index) => <Option key={index} value={item.product_code}>{item.product_type}</Option>)}\n                  </Select>) : (\n                    <div>\n                      {inputNode}\n                    </div>\n                  )}\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        );\n      };\n      const addRowProductList = () => {\n        let newProduct = {\n          key: dataSource.length + 1,\n          product_code: '',\n          product_description: '',\n          transaction_limit: '',\n          daily_limit: '',\n          Specific: '',\n        }\n        setDataSource([...dataSource, newProduct])\n        edit(newProduct)\n        setDisabledButtonAddRow(true)\n        businessParametersSetupStore.arrayProductLimit = dataSource\n      }\n      const submitAddnewProduct = async (key) => {\n        // Call api to update record status\n        const row = await form.validateFields();\n        row.status = '2'\n        row.transaction_code = \"6931\"\n        let indexProduct = productList.findIndex(item => row.product_code === item.product_code)\n        row.product_type = productList[indexProduct].product_type\n        const newData = [...dataSource];\n        const index = newData.findIndex(item => key === item.key);\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, { ...item, ...row });\n          setDataSource(newData);\n          setEditingKey('');\n        } else {\n          newData.push(row);\n          setDataSource(newData);\n          setEditingKey('');\n        }\n        setDisabledButtonAddRow(false)\n        businessParametersSetupStore.addNewProductLimit(row)\n      }\n\n      const cancelAddNewProduct = async (key) => {\n        setDisabledButtonAddRow(false)\n        let indexProduct = dataSource.findIndex(item => key === item.key)\n        const newData = [...dataSource]\n        newData.splice(indexProduct, 1)\n        setDataSource(newData);\n        setEditingKey('');\n      }\n\n      const submitDeleteProduct = (record) => {\n        //call api to update record status\n        console.log(toJS(record))\n        let indexRecordDelete = dataSource.findIndex(item => record.key === item.key)\n        const newData = [...dataSource];\n        newData[indexRecordDelete].status = '2'\n        businessParametersSetupStore.deleteProductLimit(record)\n        setDataSource(newData) //waiting useEffect to check api success\n      }\n      const renderOnclickHandler = (text, record) => {\n        let stringToNumber = new Number(text)\n        if (isNaN(stringToNumber)) {\n          return <p>{text}</p>\n        } else {\n          let customText = stringToNumber.toLocaleString()\n          return <p style={{ textAlign: \"right\" }}>{customText}</p>\n        }\n      }\n      const renderActionAddDeleteHandler = (record, index) => {\n        if (record.status === '1') {\n          return (\n            <div>\n              <TcrbPopconfirm title=\"Sure to Delete?\" onConfirm={(e) => { submitDeleteProduct(record) }} disabled={editingKey !== ''}>\n                <a><DeleteOutlined style={{ fontSize: '18px' }} /></a>\n              </TcrbPopconfirm>\n              <a onClick={() => selectProductToViewDetail(record)}><SettingOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n              <a onClick={() => selectProductToSpecificLimit(record)}><FormOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n            </div>)\n        } else if (record.status === '2') {\n          return null\n        } else {\n          return (<div>\n            <TcrbPopconfirm title={\"Confirm to Add !!!\"} onConfirm={() => { submitAddnewProduct(record.key) }} >\n              <a>Confirm</a>\n            </TcrbPopconfirm><br />\n            <TcrbPopconfirm title={\"Confirm to Cancel !!!\"} onConfirm={() => { cancelAddNewProduct(record.key) }} >\n              <a>Cancel</a>\n            </TcrbPopconfirm>\n          </div>)\n        }\n      }\n      const renderStatus = (record) => {\n        if (record.status === '1') {\n          return <p style={{ color: green[6] }}>Active</p>\n        } else if (record.status === '2') {\n          return <p style={{ color: gold[6] }}>Pending</p>\n        } else {\n          return null\n        }\n      }\n      const renderActionSpecificHandler = (record) => {\n        return <p onClick={() => selectProductToSpecificLimit(record)} >.....</p>\n      }\n      const columns = [\n        {\n          dataIndex: 'operation',\n          render: (text, record, index) =>\n            renderStatus(record, index)\n        },\n        {\n          title: 'Product_Code',\n          dataIndex: 'product_type',\n          width: '5%',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'Product_Description',\n          dataIndex: 'product_description',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'All-Channel Txn Limit',\n          dataIndex: 'transaction_limit',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'All-Channel Daily Limit',\n          dataIndex: 'daily_limit',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'Specific Channel Limit',\n          dataIndex: 'Specific',\n          // editable: true,\n          render: (text, record) => renderActionSpecificHandler(text, record)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          render: (text, record, index) =>\n            renderActionAddDeleteHandler(record, index)\n        },\n      ];\n\n      const mergedColumns = columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n      return (\n        <div>\n          <Row>\n            <TcrbButton\n              onClick={() => addRowProductList()}\n              style={{\n                marginBottom: 16,\n              }}\n              disabled={disabledButtonAddRow}\n              className=\"primary\">Add a Product</TcrbButton>\n          </Row>\n          <Row>\n            <Col flex={100}>\n              <Form form={form} component={false}>\n\n                <Table\n                  components={{\n                    body: {\n                      cell: EditableCell,\n                    },\n                  }}\n                  bordered\n                  dataSource={dataSource}\n                  columns={mergedColumns}\n                  size=\"small\"\n                />\n              </Form>\n            </Col>\n\n          </Row>\n        </div>\n      )\n    }))\nexport default withTranslation('common')(ProductList)\n"]},"metadata":{},"sourceType":"module"}