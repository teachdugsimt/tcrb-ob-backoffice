{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Button, Table, Popconfirm, Row, Col } from 'antd';\nimport { useStores } from '../../hooks/use-stores';\nimport { observer } from 'mobx-react';\nexport default observer(function ProductLimitSetup() {\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    businessParametersSetupStore\n  } = useStores();\n  useEffect(() => {\n    setDataSource(mockDataSource);\n  }, []);\n\n  const handleDelete = key => {\n    // const dataSource = [...this.state.dataSource];\n    // setDataSource(dataSource.filter(item => item.key !== key))\n    console.log(key);\n  };\n\n  console.log(businessParametersSetupStore.pendingApprovals);\n  const columns = [{\n    // title: 'Specific Channel Limit',\n    dataIndex: 'operation',\n    render: (text, record) => dataSource.length >= 1 ? __jsx(Popconfirm, {\n      title: \"Sure to delete?\",\n      onConfirm: () => businessParametersSetupStore.selectProductToDelete(record),\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"Delete\")) : null\n  }, {\n    title: 'Product_Code',\n    dataIndex: 'ProductCode',\n    width: '10%',\n    editable: true\n  }, {\n    title: 'Product_Description',\n    dataIndex: 'ProductDescription'\n  }, {\n    title: 'All-Channel Txn Limit',\n    dataIndex: 'TxnLimit'\n  }, {\n    title: 'All-Channel Daily Limit',\n    dataIndex: 'DailyLimit'\n  }, {\n    title: 'Specific Channel Limit',\n    dataIndex: 'Specific'\n  }];\n  const mockDataSource = [{\n    key: '0',\n    ProductCode: 'NE',\n    ProductDescription: 'Revolving Loan-Non TCG Nano',\n    TxnLimit: '100,000.00',\n    DailyLimit: '100,000.00'\n  }, {\n    key: '1',\n    ProductCode: 'NG',\n    ProductDescription: 'Revolving Loan-Non TCG Micro',\n    TxnLimit: '200,000.00',\n    DailyLimit: '200,000.00'\n  }, {\n    key: '2',\n    ProductCode: 'NH',\n    ProductDescription: 'Revolving Loan-TCG Nano',\n    TxnLimit: '100,000.00',\n    DailyLimit: '100,000.00'\n  }];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Button // onClick={this.handleAdd}\n  , {\n    type: \"primary\",\n    style: {\n      marginBottom: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Add a row\")), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    flex: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Table // components={components}\n  , {\n    rowClassName: () => 'editable-row',\n    bordered: true,\n    dataSource: dataSource,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }))));\n});","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup.js"],"names":["React","useState","useEffect","Button","Table","Popconfirm","Row","Col","useStores","observer","ProductLimitSetup","dataSource","setDataSource","businessParametersSetupStore","mockDataSource","handleDelete","key","console","log","pendingApprovals","columns","dataIndex","render","text","record","length","selectProductToDelete","title","width","editable","ProductCode","ProductDescription","TxnLimit","DailyLimit","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, Table, Popconfirm, Row, Col } from 'antd'\nimport { useStores } from '../../hooks/use-stores'\nimport { observer } from 'mobx-react'\n\nexport default (observer(function ProductLimitSetup() {\n  const [dataSource, setDataSource] = useState([])\n  const { businessParametersSetupStore } = useStores()\n\n  useEffect(() => {\n      setDataSource(mockDataSource)\n\n  }, []);\n  const handleDelete = key => {\n    // const dataSource = [...this.state.dataSource];\n    // setDataSource(dataSource.filter(item => item.key !== key))\n    console.log(key)\n\n  };\n  console.log(businessParametersSetupStore.pendingApprovals)\n  const columns = [\n    {\n      // title: 'Specific Channel Limit',\n      dataIndex: 'operation',\n      render: (text, record) =>\n        dataSource.length >= 1 ? (\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => businessParametersSetupStore.selectProductToDelete(record)} disabled={true}>\n            <a>Delete</a>\n          </Popconfirm>\n        ) : null,\n    },\n    {\n      title: 'Product_Code',\n      dataIndex: 'ProductCode',\n      width: '10%',\n      editable: true,\n    },\n    {\n      title: 'Product_Description',\n      dataIndex: 'ProductDescription',\n    },\n    {\n      title: 'All-Channel Txn Limit',\n      dataIndex: 'TxnLimit',\n    },\n    {\n      title: 'All-Channel Daily Limit',\n      dataIndex: 'DailyLimit',\n    },\n    {\n      title: 'Specific Channel Limit',\n      dataIndex: 'Specific',\n    },\n  ];\n  const mockDataSource = [\n    {\n      key: '0',\n      ProductCode: 'NE',\n      ProductDescription: 'Revolving Loan-Non TCG Nano',\n      TxnLimit: '100,000.00',\n      DailyLimit: '100,000.00'\n    },\n    {\n      key: '1',\n      ProductCode: 'NG',\n      ProductDescription: 'Revolving Loan-Non TCG Micro',\n      TxnLimit: '200,000.00',\n      DailyLimit: '200,000.00'\n    },\n    {\n      key: '2',\n      ProductCode: 'NH',\n      ProductDescription: 'Revolving Loan-TCG Nano',\n      TxnLimit: '100,000.00',\n      DailyLimit: '100,000.00'\n    },\n  ]\n  return (\n    <div>\n      <Row>\n        <Button\n          // onClick={this.handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        >Add a row</Button>\n      </Row>\n      <Row>\n        <Col flex={100}>\n          <Table\n            // components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={dataSource}\n            columns={columns}\n          />\n        </Col>\n\n      </Row>\n    </div>\n  )\n}))\n"]},"metadata":{},"sourceType":"module"}