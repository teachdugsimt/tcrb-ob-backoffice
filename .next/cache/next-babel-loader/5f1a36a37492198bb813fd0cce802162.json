{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department/manage-department.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport { orange, green, gold } from '@ant-design/colors';\nimport SimpleInput from '../../simple-input';\nimport SimpleModal from '../../simple-modal';\nimport { addKeyToDataSource } from '../../data-utility';\nvar sectionList = [];\nvar ManageDepartment = inject('userAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState(false),\n      showEditDepartment = _useState[0],\n      setShowEditDepartment = _useState[1];\n\n  var _useState2 = useState(''),\n      editingKey = _useState2[0],\n      setEditingKey = _useState2[1];\n\n  var _useState3 = useState(''),\n      dataSourceSection = _useState3[0],\n      setDataSourceSection = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(\"Submit\"),\n      textOk = _useState5[0],\n      setTextOk = _useState5[1];\n\n  var _useState6 = useState(\"Add Section\"),\n      textEdit = _useState6[0],\n      setTextEdit = _useState6[1];\n\n  var _useState7 = useState(\"Cancel\"),\n      textCancel = _useState7[0],\n      setTextCancel = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      modalString = _useState8[0],\n      setModalString = _useState8[1];\n\n  var _useState9 = useState(''),\n      modalType = _useState9[0],\n      setModalType = _useState9[1];\n\n  var _useState10 = useState(false),\n      visible = _useState10[0],\n      setVisible = _useState10[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var userAccessManagementStore = props.userAccessManagementStore,\n      t = props.t;\n\n  var isEditing = function isEditing(record) {\n    return record.key === editingKey;\n  };\n\n  useEffect(function () {\n    addKeyToDataSource(userAccessManagementStore.departmentSelected.sections).then(function (result) {\n      setDataSourceSection(result);\n    });\n  }, []);\n\n  var addSectionToDepartment = function addSectionToDepartment() {\n    var sections = [];\n\n    for (var index = 0; index < sectionList.length; index++) {\n      sections.push({\n        name: sectionList[index]\n      });\n    }\n\n    console.log(sections);\n  };\n\n  var edit = function edit(record) {\n    form.setFieldsValue(_objectSpread({\n      name: '',\n      status: record.status\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  var EditableCell = function EditableCell(_ref) {\n    var editing = _ref.editing,\n        dataIndex = _ref.dataIndex,\n        title = _ref.title,\n        inputType = _ref.inputType,\n        record = _ref.record,\n        index = _ref.index,\n        children = _ref.children,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: \"Please Input \".concat(title, \"!\")\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    })) : children);\n  };\n\n  var onEditSection = function onEditSection() {\n    setAddSection(true);\n    setModalType('');\n  };\n\n  var enableEditDepartment = function enableEditDepartment() {\n    setShowEditDepartment(true);\n  };\n\n  var cancelEditDepartment = function cancelEditDepartment() {\n    setShowEditDepartment(false);\n  };\n\n  var goBackToDepartmentList = function goBackToDepartmentList() {\n    userAccessManagementStore.nextPageIsManageDepartment = false;\n  };\n\n  var SelectDepartment = function SelectDepartment() {\n    return __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Section / Team\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      mode: \"tags\",\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return sectionList = value;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    })));\n  };\n\n  var openModalAddSection = function openModalAddSection() {\n    setTitle('Add Section to Department');\n    setModalType('confirm');\n    setModalString(__jsx(SelectDepartment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }));\n    setVisible(true);\n  };\n\n  var renderActionSectionAndTeam = function renderActionSectionAndTeam(record) {\n    var editable = isEditing(record);\n\n    if (record.request_status === 'APPROVE') {\n      return editable ? __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Save?\",\n        onConfirm: function onConfirm() {\n          return save(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, \"Save\")), __jsx(TcrbPopconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: function onConfirm() {\n          return setEditingKey('');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))) : __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        disabled: editingKey !== '',\n        onClick: function onClick() {\n          return edit(record);\n        },\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }, \"Deactivate\")));\n    } else if (record.status === '2') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  var checkStatus = function checkStatus(record) {\n    if (record.status === '1') {\n      return __jsx(\"span\", {\n        style: {\n          color: green[6]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 18\n        }\n      }, \"Active\");\n    } else if (record.status === '2') {\n      return __jsx(\"span\", {\n        style: {\n          color: gold[6]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 18\n        }\n      }, \"Pending\");\n    } else {\n      return null;\n    }\n  };\n\n  var columnSection = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkStatus(record);\n    }\n  }, {\n    title: 'Section Name',\n    dataIndex: 'name',\n    editable: true // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: function render(text, record) {\n      return renderActionSectionAndTeam(record);\n    }\n  }];\n  var mergedColumns = columnSection.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          inputType: 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        };\n      }\n    });\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      return goBackToDepartmentList();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, \"Back\"))), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \"Department\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, \" \", showEditDepartment ? __jsx(SimpleInput, {\n    defaultValue: userAccessManagementStore.departmentSelected.name,\n    onChange: function onChange(e) {\n      return e;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }) : userAccessManagementStore.departmentSelected.name)), showEditDepartment ? __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }, __jsx(Col, {\n    span: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, \"Section / Team\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, __jsx(Select, {\n    mode: \"tags\",\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Please select\",\n    onChange: function onChange(value) {\n      return console.log(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }))) : null, __jsx(Row, {\n    justify: \"center\",\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, showEditDepartment ? __jsx(Space, {\n    size: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      cancelEditDepartment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      enableEditDepartment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 19\n    }\n  }, \"Submit\")) : __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      enableEditDepartment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, \"Edit\"))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      return openModalAddSection();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, \"Add Section\"))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    flex: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, __jsx(Form, {\n    form: form,\n    component: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, __jsx(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: dataSourceSection,\n    columns: mergedColumns,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  })))), __jsx(SimpleModal, {\n    title: title,\n    type: modalType,\n    onOk: function onOk() {\n      return addSectionToDepartment();\n    },\n    onCancel: function onCancel() {\n      return setVisible(false);\n    },\n    textCancel: textCancel,\n    textOk: textOk,\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }));\n}, \"JmYt7ELhUhzKtnhMkem37txXUq0=\", false, function () {\n  return [Form.useForm];\n})));\nexport default ManageDepartment;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department/manage-department.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","Space","TcrbButton","TcrbPopconfirm","inject","observer","orange","green","gold","SimpleInput","SimpleModal","addKeyToDataSource","sectionList","ManageDepartment","props","showEditDepartment","setShowEditDepartment","editingKey","setEditingKey","dataSourceSection","setDataSourceSection","title","setTitle","textOk","setTextOk","textEdit","setTextEdit","textCancel","setTextCancel","modalString","setModalString","modalType","setModalType","visible","setVisible","useForm","form","userAccessManagementStore","t","isEditing","record","key","departmentSelected","sections","then","result","addSectionToDepartment","index","length","push","name","console","log","edit","setFieldsValue","status","EditableCell","editing","dataIndex","inputType","children","restProps","margin","required","message","onEditSection","setAddSection","enableEditDepartment","cancelEditDepartment","goBackToDepartmentList","nextPageIsManageDepartment","SelectDepartment","padding","width","value","openModalAddSection","renderActionSectionAndTeam","editable","request_status","save","marginRight","color","textAlign","checkStatus","columnSection","render","text","mergedColumns","map","col","onCell","e","marginTop","body","cell"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\nimport { orange, green, gold } from '@ant-design/colors';\n\nimport SimpleInput from '../../simple-input'\nimport SimpleModal from '../../simple-modal'\nimport { addKeyToDataSource } from '../../data-utility';\n\nlet sectionList = []\nconst ManageDepartment =\n  inject('userAccessManagementStore')\n    (observer((props) => {\n      const [showEditDepartment, setShowEditDepartment] = useState(false)\n      const [editingKey, setEditingKey] = useState('')\n      const [dataSourceSection, setDataSourceSection] = useState('')\n      const [title, setTitle] = useState(\"\")\n      const [textOk, setTextOk] = useState(\"Submit\")\n      const [textEdit, setTextEdit] = useState(\"Add Section\")\n      const [textCancel, setTextCancel] = useState(\"Cancel\")\n      const [modalString, setModalString] = useState(\"\")\n      const [modalType, setModalType] = useState('')\n      const [visible, setVisible] = useState(false)\n      const [form] = Form.useForm();\n\n      const { userAccessManagementStore, t } = props\n      const isEditing = record => record.key === editingKey\n\n      useEffect(() => {\n        addKeyToDataSource(userAccessManagementStore.departmentSelected.sections).then(result => {\n          setDataSourceSection(result)\n        })\n      }, [])\n\n      const addSectionToDepartment = () => {\n        let sections = []\n        for (let index = 0; index < sectionList.length; index++) {\n          sections.push({\n            name: sectionList[index]\n          })\n        }\n        console.log(sections)\n      }\n\n      const edit = record => {\n        form.setFieldsValue({\n          name: '',\n          status: record.status,\n          ...record,\n        });\n        setEditingKey(record.key);\n      }\n\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        return (\n          <td {...restProps}>\n            {editing ? (\n              <Form.Item\n                name={dataIndex}\n                style={{\n                  margin: 0\n                }}\n                rules={[\n                  {\n                    required: true,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        )\n      }\n\n      const onEditSection = () => {\n        setAddSection(true)\n        setModalType('')\n      }\n\n      const enableEditDepartment = () => {\n        setShowEditDepartment(true)\n      }\n\n      const cancelEditDepartment = () => {\n        setShowEditDepartment(false)\n      }\n\n      const goBackToDepartmentList = () => {\n        userAccessManagementStore.nextPageIsManageDepartment = false\n      }\n\n      const SelectDepartment = () => {\n        return (\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Section / Team</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                mode=\"tags\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => sectionList = value}\n              >\n                {/* {children} */}\n              </Select>\n            </Col>\n          </Row>\n        )\n      }\n\n      const openModalAddSection = () => {\n        setTitle('Add Section to Department')\n        setModalType('confirm')\n        setModalString(\n          <SelectDepartment />\n        )\n        setVisible(true)\n      }\n\n      const renderActionSectionAndTeam = (record) => {\n        const editable = isEditing(record);\n        if (record.request_status === 'APPROVE') {\n          return editable ? (\n            <span>\n              <TcrbPopconfirm title=\"Sure to Save?\" onConfirm={() => save(record.key)}>\n                <a style={{ marginRight: 8, }}>\n                  Save\n                </a>\n              </TcrbPopconfirm>\n              <TcrbPopconfirm title=\"Sure to cancel?\" onConfirm={() => setEditingKey('')}>\n                <a style={{ color: '#3e3e3e' }}>Cancel</a>\n              </TcrbPopconfirm>\n            </span>\n          ) : (\n              <div style={{ textAlign: \"center\" }}>\n                <a disabled={editingKey !== ''} onClick={() => edit(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n                  Edit\n                </a>\n                <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n                  <a style={{ color: '#FBA928' }}>Deactivate</a>\n                </TcrbPopconfirm>\n              </div>\n            );\n        } else if (record.status === '2') {\n          return null\n        } else {\n          return null\n        }\n      }\n\n      const checkStatus = (record) => {\n        if (record.status === '1') {\n          return <span style={{ color: green[6] }}>Active</span>\n        } else if (record.status === '2') {\n          return <span style={{ color: gold[6] }}>Pending</span>\n        } else {\n          return null\n        }\n      }\n\n      const columnSection = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          render: (text, record) => checkStatus(record)\n        },\n        {\n          title: 'Section Name',\n          dataIndex: 'name',\n          editable: true,\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          width: '10%',\n          render: (text, record) => renderActionSectionAndTeam(record)\n        }\n      ]\n\n      const mergedColumns = columnSection.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: 'text',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"default\" onClick={() => goBackToDepartmentList()}>Back</TcrbButton>\n            </Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Department</Col>\n            <Col span={6}> {showEditDepartment ?\n              <SimpleInput defaultValue={userAccessManagementStore.departmentSelected.name} onChange={(e) => e} /> : userAccessManagementStore.departmentSelected.name\n            }\n            </Col>\n          </Row>\n          {showEditDepartment ? <Row gutter={[4, 24]}>\n            <Col span={4}>Section / Team</Col>\n            <Col span={6}>\n              <Select\n                mode=\"tags\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => console.log(value)}\n              >\n                {/* {children} */}\n              </Select>\n            </Col>\n          </Row> :\n            null\n          }\n\n          <Row justify=\"center\" style={{ marginTop: 8 }}>\n            <Col span={4}>\n              {showEditDepartment ?\n                <Space size={8}>\n                  <TcrbButton className=\"default\" onClick={() => { cancelEditDepartment() }} >Cancel</TcrbButton>\n                  <TcrbButton className=\"primary\" onClick={() => { enableEditDepartment() }} >Submit</TcrbButton>\n                </Space>\n                :\n                <TcrbButton className=\"primary\" onClick={() => { enableEditDepartment() }} >Edit</TcrbButton>}\n            </Col>\n          </Row>\n          <Divider />\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"default\" onClick={() => openModalAddSection()}>Add Section</TcrbButton>\n            </Col>\n          </Row>\n          <Row>\n            <Col flex={100}>\n              <Form form={form} component={false}>\n                <Table\n                  components={{\n                    body: {\n                      cell: EditableCell,\n                    },\n                  }}\n                  bordered\n                  dataSource={dataSourceSection}\n                  columns={mergedColumns}\n                  size=\"small\"\n                />\n              </Form>\n            </Col>\n          </Row>\n          <SimpleModal\n            title={title}\n            type={modalType}\n            onOk={() => addSectionToDepartment()}\n            onCancel={() => setVisible(false)}\n            textCancel={textCancel}\n            textOk={textOk}\n            width={600}\n            modalString={modalString}\n            visible={visible}\n          />\n\n        </div>\n      )\n    }))\n\nexport default ManageDepartment\n"]},"metadata":{},"sourceType":"module"}