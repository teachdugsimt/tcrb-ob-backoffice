{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nvar _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/simple-modal.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { i18n, withNamespaces } from '../i18n';\nexport default function SimpleModal(props) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(_Modal, {\n    title: i18n.t(props.title),\n    visible: props.visible,\n    onOk: function onOk() {\n      return props.onOk();\n    },\n    onCancel: function onCancel() {\n      return props.onCancel();\n    },\n    footer: [props.type == \"error\" && __jsx(_Button, {\n      key: \"cancel\",\n      onClick: function onClick() {\n        return props.onCancel();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 37\n      }\n    }, props.textCancel), props.type == \"close\" && __jsx(_Button, {\n      key: \"cancel\",\n      onClick: function onClick() {\n        return props.onCancel();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 37\n      }\n    }, props.textCancel), props.type == \"confirm\" && __jsx(_Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: function onClick() {\n        return props.onOk();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 39\n      }\n    }, props.textOk)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.modalString));\n}\n_c = SimpleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleModal\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/simple-modal.js"],"names":["React","i18n","withNamespaces","SimpleModal","props","t","title","visible","onOk","onCancel","type","textCancel","textOk","modalString"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,cAAf,QAAqC,SAArC;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAEE,IAAA,KAAK,EAAEH,IAAI,CAACI,CAAL,CAAOD,KAAK,CAACE,KAAb,CAFT;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,IAAI,EAAE;AAAA,aAAMH,KAAK,CAACI,IAAN,EAAN;AAAA,KAJR;AAKE,IAAA,QAAQ,EAAE;AAAA,aAAMJ,KAAK,CAACK,QAAN,EAAN;AAAA,KALZ;AAME,IAAA,MAAM,EAAE,CACNL,KAAK,CAACM,IAAN,IAAc,OAAd,IAA0B;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAE;AAAA,eAAMN,KAAK,CAACK,QAAN,EAAN;AAAA,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACvBL,KAAK,CAACO,UADiB,CADpB,EAINP,KAAK,CAACM,IAAN,IAAc,OAAd,IAA0B;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAE;AAAA,eAAMN,KAAK,CAACK,QAAN,EAAN;AAAA,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACvBL,KAAK,CAACO,UADiB,CAJpB,EAONP,KAAK,CAACM,IAAN,IAAc,SAAd,IAA4B;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAoC,MAAA,OAAO,EAAE;AAAA,eAAMN,KAAK,CAACI,IAAN,EAAN;AAAA,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACzBJ,KAAK,CAACQ,MADmB,CAPtB,CANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBGR,KAAK,CAACS,WAlBT,CADF,CADF;AAwBD;KAzBuBV,W","sourcesContent":["import React from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch, Button } from 'antd'\nimport { i18n, withNamespaces } from '../i18n'\n\nexport default function SimpleModal(props) {\n  return (\n    <div>\n      <Modal\n\n        title={i18n.t(props.title)}\n        visible={props.visible}\n        onOk={() => props.onOk()}\n        onCancel={() => props.onCancel()}\n        footer={[\n          props.type == \"error\" && (<Button key=\"cancel\" onClick={() => props.onCancel()}>\n            {props.textCancel}\n          </Button>),\n          props.type == \"close\" && (<Button key=\"cancel\" onClick={() => props.onCancel()}>\n            {props.textCancel}\n          </Button>),\n          props.type == \"confirm\" && (<Button key=\"submit\" type=\"primary\" onClick={() => props.onOk()}>\n            {props.textOk}\n          </Button>),\n        ]}\n      >\n        {props.modalString}\n      </Modal>\n    </div >\n  )\n}\n"]},"metadata":{},"sourceType":"module"}