{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport DepartmentList from './department-list';\nimport ManagementDepartment from './manage-department';\nvar Department = inject('UserAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var UserAccessManagementStore = props.UserAccessManagementStore;\n\n  var _useState = useState(false),\n      isViewManageDepartment = _useState[0],\n      setIsViewManageDepartment = _useState[1];\n\n  useEffect(function () {\n    if (UserAccessManagementStore.nextPageIsManageDepartment) {\n      setIsViewManageDepartment(true);\n    } else {\n      setIsViewManageDepartment(false);\n    }\n  }, [UserAccessManagementStore.nextPageIsManageDepartment]);\n  return isViewManageDepartment ? __jsx(ManagementDepartment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 34\n    }\n  }) : __jsx(DepartmentList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 61\n    }\n  });\n}, \"lKavJfPKRyoFcm+QXY1WXkmgfgE=\")));\nexport default Department;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department/index.js"],"names":["React","useEffect","useState","inject","observer","DepartmentList","ManagementDepartment","Department","props","UserAccessManagementStore","isViewManageDepartment","setIsViewManageDepartment","nextPageIsManageDepartment"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,oBAAP,MAAiC,qBAAjC;AAEA,IAAMC,UAAU,GAAGJ,MAAM,CAAC,2BAAD,CAAN,CAChBC,QAAQ,IAAC,UAACI,KAAD,EAAW;AAAA;;AAAA,MACXC,yBADW,GACmBD,KADnB,CACXC,yBADW;;AAAA,kBAEyCP,QAAQ,CAAC,KAAD,CAFjD;AAAA,MAEZQ,sBAFY;AAAA,MAEYC,yBAFZ;;AAGnBV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,yBAAyB,CAACG,0BAA9B,EAA0D;AACxDD,MAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD,KAFD,MAEO;AACLA,MAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACD;AACF,GANQ,EAMN,CAACF,yBAAyB,CAACG,0BAA3B,CANM,CAAT;AAOA,SACGF,sBAAD,GAA2B,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,GAAsD,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxD;AAED,CAZQ,kCADQ,CAAnB;AAeA,eAAeH,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport DepartmentList from './department-list'\nimport ManagementDepartment from './manage-department'\n\nconst Department = inject('UserAccessManagementStore')\n  (observer((props) => {\n    const { UserAccessManagementStore } = props\n    const [isViewManageDepartment, setIsViewManageDepartment] = useState(false)\n    useEffect(() => {\n      if (UserAccessManagementStore.nextPageIsManageDepartment) {\n        setIsViewManageDepartment(true)\n      } else {\n        setIsViewManageDepartment(false)\n      }\n    }, [UserAccessManagementStore.nextPageIsManageDepartment])\n    return (\n      (isViewManageDepartment) ? <ManagementDepartment /> : <DepartmentList />)\n  }))\n\nexport default Department\n"]},"metadata":{},"sourceType":"module"}