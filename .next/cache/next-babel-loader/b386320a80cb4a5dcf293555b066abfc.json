{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch, Alert } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport SimpleSwitch from '../simple-switch';\nimport SimpleAlert from '../simple-alert';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx'; // import { i18n, withNamespaces } from '../../i18n'\n\nimport { withTranslation } from '../../i18n';\nconst StyledA = styled.a.withConfig({\n  displayName: \"otp-unlocking__StyledA\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"otp-unlocking__StyledSpan\",\n  componentId: \"r234ff-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSwitch = styled(Switch).withConfig({\n  displayName: \"otp-unlocking__StyledSwitch\",\n  componentId: \"r234ff-2\"\n})([\"\", \"\"], ({\n  defaultChecked\n}) => defaultChecked && `\n      background-color: #F88008 !important;\n  `);\nconst OtpUnlocking = inject('customerServicesMenuStore')(observer(props => {\n  const {\n    0: idCard,\n    1: setIdCard\n  } = useState('');\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: stringSwitch,\n    1: setStringSwitch\n  } = useState([]);\n  const {\n    0: showAlertError,\n    1: setShowAlertError\n  } = useState(false);\n  const {\n    customerServicesMenuStore,\n    t\n  } = props;\n  useEffect(() => {\n    if (isSearch) {\n      setShowAlertError(true);\n    }\n  }, [customerServicesMenuStore.accountInfoError]);\n  useEffect(() => {\n    if (isSearch) {\n      convertArrayObjectToArray(customerServicesMenuStore.accountInfo).then(result => {\n        customerServicesMenuStore.arrayAccountInfo = result;\n        setStringSwitch(result);\n      });\n    }\n  }, [customerServicesMenuStore.accountInfo]);\n  useEffect(() => {\n    if (customerServicesMenuStore.unlockOtpInfo.ok) {\n      customerServicesMenuStore.accountSelected.otp_is_locked = false;\n      replaceNewDataForSetString();\n    }\n  }, [customerServicesMenuStore.unlockOtpInfo]);\n\n  const searchIdCardNumber = async value => {\n    setIdCard(value);\n    setIsSearch(true); //call api\n\n    await customerServicesMenuStore.getDataAccountOtpUnlock(value);\n  };\n\n  const convertArrayObjectToArray = arrayObject => {\n    return new Promise((resolve, reject) => {\n      let result = arrayObject.map(a => [a.otp_is_locked, a.main_account_no, a.product_name_english]);\n      resolve(result);\n    });\n  };\n\n  const replaceNewDataForSetString = () => {\n    let arrayAccountInfo = customerServicesMenuStore.accountInfo;\n    let accountSelected = customerServicesMenuStore.accountSelected; // let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber))\n\n    let newArray = arrayAccountInfo.filter(accountInfo => accountInfo.main_account_no !== accountSelected.main_account_no);\n    convertArrayObjectToArray([...newArray, accountSelected]).then(result => {\n      setStringSwitch(result);\n    });\n  };\n\n  const closeModal = () => {\n    setVisble(false);\n    setStringSwitch(customerServicesMenuStore.arrayAccountInfo);\n  };\n\n  const onChange = (switchSelected, index) => {\n    if (switchSelected === true) {\n      customerServicesMenuStore.accountSelected = customerServicesMenuStore.accountInfo[index];\n      setStringSwitch(customerServicesMenuStore.arrayAccountInfo);\n      setVisble(true);\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, t(\"unlockingOtp\")), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, \" \", t(\"accountNumber\") + \" \" + customerServicesMenuStore.accountSelected.main_account_no)));\n    } else {// setIsChecked(false)\n    }\n  };\n\n  const unlockOTP = async () => {\n    setVisble(false);\n    await customerServicesMenuStore.submitUnlockOTP();\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [8, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: t(\"idCard\"),\n    loading: customerServicesMenuStore.apiFetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    gutter: [8, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, showAlertError ? __jsx(SimpleAlert, {\n    message: customerServicesMenuStore.accountInfoError.responseData.userMessage,\n    type: \"error\",\n    showIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 34\n    }\n  }) : ''), isSearch ? __jsx(SimpleSwitch, {\n    data: stringSwitch,\n    onChange: (switchSelected, index) => onChange(switchSelected, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }) : '', __jsx(SimpleModal, {\n    onOk: () => unlockOTP(),\n    onCancel: () => closeModal(),\n    okText: t(\"confirm\"),\n    cancelText: t(\"cancel\"),\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }));\n}));\nexport default withTranslation('common')(OtpUnlocking);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","Alert","styled","SimpleSearch","SimpleModal","SimpleSwitch","SimpleAlert","inject","observer","toJS","withTranslation","StyledA","a","theme","spacing","medium","StyledSpan","span","StyledSwitch","defaultChecked","OtpUnlocking","props","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","stringSwitch","setStringSwitch","showAlertError","setShowAlertError","customerServicesMenuStore","t","accountInfoError","convertArrayObjectToArray","accountInfo","then","result","arrayAccountInfo","unlockOtpInfo","ok","accountSelected","otp_is_locked","replaceNewDataForSetString","searchIdCardNumber","value","getDataAccountOtpUnlock","arrayObject","Promise","resolve","reject","map","main_account_no","product_name_english","newArray","filter","closeModal","onChange","switchSelected","index","textAlign","unlockOTP","submitUnlockOTP","marginTop","apiFetching","responseData","userMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch, Alert } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport SimpleSwitch from '../simple-switch'\nimport SimpleAlert from '../simple-alert'\nimport { inject, observer } from 'mobx-react'\nimport { toJS } from 'mobx';\n// import { i18n, withNamespaces } from '../../i18n'\nimport { withTranslation } from '../../i18n'\n\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n\n      ${({ defaultChecked }) => defaultChecked && `\n      background-color: #F88008 !important;\n  `}\n`\nconst OtpUnlocking =\n  inject('customerServicesMenuStore')\n    (observer((props) => {\n      const [idCard, setIdCard] = useState('');\n      const [isSearch, setIsSearch] = useState(false);\n      const [visible, setVisble] = useState(false)\n      const [isChecked, setIsChecked] = useState(false)\n      const [modalString, setModalString] = useState('')\n      const [stringSwitch, setStringSwitch] = useState([])\n      const [showAlertError, setShowAlertError] = useState(false)\n      const { customerServicesMenuStore, t } = props\n\n      useEffect(() => {\n        if (isSearch) {\n          setShowAlertError(true)\n        }\n      }, [customerServicesMenuStore.accountInfoError])\n\n      useEffect(() => {\n        if (isSearch) {\n          convertArrayObjectToArray(customerServicesMenuStore.accountInfo).then(result => {\n            customerServicesMenuStore.arrayAccountInfo = result\n            setStringSwitch(result)\n          })\n        }\n      }, [customerServicesMenuStore.accountInfo])\n\n      useEffect(() => {\n        if (customerServicesMenuStore.unlockOtpInfo.ok) {\n          customerServicesMenuStore.accountSelected.otp_is_locked = false\n          replaceNewDataForSetString()\n        }\n      }, [customerServicesMenuStore.unlockOtpInfo])\n\n      const searchIdCardNumber = async (value) => {\n        setIdCard(value)\n        setIsSearch(true)\n        //call api\n        await customerServicesMenuStore.getDataAccountOtpUnlock(value)\n      }\n\n      const convertArrayObjectToArray = (arrayObject) => {\n        return new Promise((resolve, reject) => {\n          let result = arrayObject.map(a => [a.otp_is_locked, a.main_account_no, a.product_name_english]);\n          resolve(result)\n        })\n      }\n      const replaceNewDataForSetString = () => {\n        let arrayAccountInfo = customerServicesMenuStore.accountInfo\n        let accountSelected = customerServicesMenuStore.accountSelected\n        // let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber))\n        let newArray = arrayAccountInfo.filter(accountInfo => accountInfo.main_account_no !== accountSelected.main_account_no)\n\n        convertArrayObjectToArray([...newArray, accountSelected]).then(result => {\n          setStringSwitch(result)\n        })\n      }\n\n      const closeModal = () => {\n        setVisble(false)\n        setStringSwitch(customerServicesMenuStore.arrayAccountInfo)\n\n      };\n      const onChange = (switchSelected, index) => {\n\n        if (switchSelected === true) {\n\n          customerServicesMenuStore.accountSelected = customerServicesMenuStore.accountInfo[index]\n          setStringSwitch(customerServicesMenuStore.arrayAccountInfo)\n          setVisble(true)\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p>{t(\"unlockingOtp\")}</p>\n              <p> {t(\"accountNumber\") + \" \" + customerServicesMenuStore.accountSelected.main_account_no}</p>\n            </div>\n          )\n\n        } else {\n          // setIsChecked(false)\n        }\n      }\n\n      const unlockOTP = async () => {\n        setVisble(false)\n        await customerServicesMenuStore.submitUnlockOTP()\n\n      }\n\n\n      return (\n        <div style={{ marginTop: 20 }}>\n          <Row gutter={[8, 32]}>\n            <SimpleSearch search={searchIdCardNumber} prefixWording={t(\"idCard\")} loading={customerServicesMenuStore.apiFetching} />\n          </Row>\n          <Row gutter={[8, 24]}>\n            {(showAlertError) ? (<SimpleAlert message={customerServicesMenuStore.accountInfoError.responseData.userMessage} type=\"error\" showIcon />) : ('')}\n          </Row>\n          {(isSearch) ? (\n            <SimpleSwitch\n              data={stringSwitch}\n              onChange={(switchSelected, index) => onChange(switchSelected, index)} />\n          ) : ('')}\n          <SimpleModal\n            onOk={() => unlockOTP()}\n            onCancel={() => closeModal()}\n            okText={t(\"confirm\")}\n            cancelText={t(\"cancel\")}\n            modalString={modalString}\n            visible={visible}\n          />\n        </div>\n      )\n    }))\n\nexport default withTranslation('common')(OtpUnlocking)\n"]},"metadata":{},"sourceType":"module"}