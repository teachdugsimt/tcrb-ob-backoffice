{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\n// src/stores/counter-store.tsx\nimport { observable, action, computed } from 'mobx';\nvar CounterStore = (_class = (_temp = /*#__PURE__*/function () {\n  function CounterStore() {\n    _classCallCheck(this, CounterStore);\n\n    _initializerDefineProperty(this, \"count\", _descriptor, this);\n  }\n\n  _createClass(CounterStore, [{\n    key: \"increment\",\n    value: function increment() {\n      this.count++;\n    }\n  }, {\n    key: \"decrement\",\n    value: function decrement() {\n      this.count--;\n    }\n  }, {\n    key: \"doubleCount\",\n    get: function get() {\n      return this.count * 2;\n    }\n  }]);\n\n  return CounterStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"count\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"increment\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"increment\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"decrement\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"decrement\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"doubleCount\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"doubleCount\"), _class.prototype)), _class);\nexport default CounterStore;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/counter-store.js"],"names":["observable","action","computed","CounterStore","count"],"mappings":";;;;;;;;AAAA;AACA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,QAA6C,MAA7C;IAEMC,Y;;;;;;;;;gCAKQ;AACV,WAAKC,KAAL;AACD;;;gCAGW;AACV,WAAKA,KAAL;AACD;;;wBAGiB;AAChB,aAAO,KAAKA,KAAL,GAAa,CAApB;AACD;;;;kFAhBAJ,U;;;;;WACO,C;;8DAEPC,M,gJAKAA,M,kJAKAC,Q;AAKH,eAAeC,YAAf","sourcesContent":["// src/stores/counter-store.tsx\nimport { observable, action, computed } from 'mobx'\n\nclass CounterStore {\n  @observable\n  count = 0\n\n  @action\n  increment() {\n    this.count++\n  }\n\n  @action\n  decrement() {\n    this.count--\n  }\n\n  @computed\n  get doubleCount() {\n    return this.count * 2\n  }\n}\nexport default CounterStore\n"]},"metadata":{},"sourceType":"module"}