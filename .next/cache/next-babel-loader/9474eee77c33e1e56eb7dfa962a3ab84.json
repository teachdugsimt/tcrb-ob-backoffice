{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch, Alert } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport SimpleSwitch from '../simple-switch';\nimport SimpleAlert from '../simple-alert';\nimport { inject, observer } from 'mobx-react';\nimport { get } from 'lodash';\nimport { toJS } from 'mobx'; // import { i18n, withNamespaces } from '../../i18n'\n\nimport { withTranslation } from '../../i18n';\nconst StyledA = styled.a.withConfig({\n  displayName: \"otp-unlocking__StyledA\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"otp-unlocking__StyledSpan\",\n  componentId: \"r234ff-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSwitch = styled(Switch).withConfig({\n  displayName: \"otp-unlocking__StyledSwitch\",\n  componentId: \"r234ff-2\"\n})([\"\", \"\"], ({\n  defaultChecked\n}) => defaultChecked && `\n      background-color: #F88008 !important;\n  `);\nconst OtpUnlocking = inject('customerServicesMenuStore')(observer(props => {\n  const {\n    0: idCard,\n    1: setIdCard\n  } = useState('');\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: stringSwitch,\n    1: setStringSwitch\n  } = useState([]);\n  const {\n    0: showAlertError,\n    1: setShowAlertError\n  } = useState(false);\n  const {\n    customerServicesMenuStore,\n    t\n  } = props;\n  useEffect(() => {\n    if (isSearch) {\n      setShowAlertError(true);\n      setIsSearch(false);\n    }\n  }, [customerServicesMenuStore.accountInfoError]);\n  useEffect(() => {\n    if (isSearch) {\n      convertArrayObjectToArray(customerServicesMenuStore.accountInfo).then(result => {\n        console.log(result);\n        customerServicesMenuStore.arrayAccountInfo = result;\n        setStringSwitch(result);\n      });\n    }\n  }, [customerServicesMenuStore.accountInfo]);\n  useEffect(() => {\n    if (isSearch) {\n      if (customerServicesMenuStore.unlockOtpInfo.ok) {\n        customerServicesMenuStore.accountSelected.otp_is_locked = false;\n        replaceNewDataForSetString();\n      }\n    }\n  }, [customerServicesMenuStore.unlockOtpInfo]);\n  useEffect(() => {\n    customerServicesMenuStore.accountInfoError = null;\n  }, []);\n\n  const searchIdCardNumber = async value => {\n    setIdCard(value);\n    setIsSearch(true); //call api\n\n    await customerServicesMenuStore.getDataAccountOtpUnlock(value);\n  };\n\n  const convertArrayObjectToArray = arrayObject => {\n    return new Promise((resolve, reject) => {\n      let result = arrayObject.map(a => [a.otp_is_locked, a.main_account_no, a.product_name_english]);\n      resolve(result);\n    });\n  };\n\n  const replaceNewDataForSetString = () => {\n    let arrayAccountInfo = customerServicesMenuStore.accountInfo;\n    let accountSelected = customerServicesMenuStore.accountSelected; // let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber))\n\n    let newArray = arrayAccountInfo.filter(accountInfo => accountInfo.main_account_no !== accountSelected.main_account_no);\n    convertArrayObjectToArray([...newArray, accountSelected]).then(result => {\n      setStringSwitch(result);\n    });\n  };\n\n  const closeModal = () => {\n    setVisble(false);\n    setStringSwitch(customerServicesMenuStore.arrayAccountInfo);\n  };\n\n  const onChange = (switchSelected, index) => {\n    if (switchSelected === true) {\n      customerServicesMenuStore.accountSelected = customerServicesMenuStore.accountInfo[index];\n      setStringSwitch(customerServicesMenuStore.arrayAccountInfo);\n      setVisble(true);\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, t(\"unlockingOtp\")), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, \" \", t(\"accountNumber\") + \" \" + customerServicesMenuStore.accountSelected.main_account_no)));\n    } else {// setIsChecked(false)\n    }\n  };\n\n  const unlockOTP = async () => {\n    setVisble(false);\n    await customerServicesMenuStore.submitUnlockOTP();\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: t(\"idCard\"),\n    loading: customerServicesMenuStore.searchFetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, customerServicesMenuStore.accountInfoError && __jsx(Alert, {\n    message: customerServicesMenuStore.accountInfoError,\n    description: '',\n    type: \"error\",\n    closable: true,\n    onClose: () => customerServicesMenuStore.accountInfoError = null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 62\n    }\n  }))), isSearch ? __jsx(SimpleSwitch, {\n    data: stringSwitch,\n    onChange: (switchSelected, index) => onChange(switchSelected, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }) : '', __jsx(SimpleModal, {\n    onOk: () => unlockOTP(),\n    onCancel: () => closeModal(),\n    okText: t(\"confirm\"),\n    cancelText: t(\"cancel\"),\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }));\n}));\nexport default withTranslation('common')(OtpUnlocking);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","Alert","styled","SimpleSearch","SimpleModal","SimpleSwitch","SimpleAlert","inject","observer","get","toJS","withTranslation","StyledA","a","theme","spacing","medium","StyledSpan","span","StyledSwitch","defaultChecked","OtpUnlocking","props","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","stringSwitch","setStringSwitch","showAlertError","setShowAlertError","customerServicesMenuStore","t","accountInfoError","convertArrayObjectToArray","accountInfo","then","result","console","log","arrayAccountInfo","unlockOtpInfo","ok","accountSelected","otp_is_locked","replaceNewDataForSetString","searchIdCardNumber","value","getDataAccountOtpUnlock","arrayObject","Promise","resolve","reject","map","main_account_no","product_name_english","newArray","filter","closeModal","onChange","switchSelected","index","textAlign","unlockOTP","submitUnlockOTP","margin","searchFetching"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch, Alert } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport SimpleSwitch from '../simple-switch'\nimport SimpleAlert from '../simple-alert'\nimport { inject, observer } from 'mobx-react'\nimport { get } from 'lodash'\nimport { toJS } from 'mobx';\n// import { i18n, withNamespaces } from '../../i18n'\nimport { withTranslation } from '../../i18n'\n\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n\n      ${({ defaultChecked }) => defaultChecked && `\n      background-color: #F88008 !important;\n  `}\n`\nconst OtpUnlocking =\n  inject('customerServicesMenuStore')\n    (observer((props) => {\n      const [idCard, setIdCard] = useState('');\n      const [isSearch, setIsSearch] = useState(false);\n      const [visible, setVisble] = useState(false)\n      const [isChecked, setIsChecked] = useState(false)\n      const [modalString, setModalString] = useState('')\n      const [stringSwitch, setStringSwitch] = useState([])\n      const [showAlertError, setShowAlertError] = useState(false)\n      const { customerServicesMenuStore, t } = props\n\n      useEffect(() => {\n        if (isSearch) {\n          setShowAlertError(true)\n          setIsSearch(false)\n        }\n      }, [customerServicesMenuStore.accountInfoError])\n\n      useEffect(() => {\n        if (isSearch) {\n          convertArrayObjectToArray(customerServicesMenuStore.accountInfo).then(result => {\n            console.log(result)\n            customerServicesMenuStore.arrayAccountInfo = result\n            setStringSwitch(result)\n          })\n        }\n      }, [customerServicesMenuStore.accountInfo])\n\n      useEffect(() => {\n        if (isSearch) {\n          if (customerServicesMenuStore.unlockOtpInfo.ok) {\n            customerServicesMenuStore.accountSelected.otp_is_locked = false\n            replaceNewDataForSetString()\n          }\n        }\n      }, [customerServicesMenuStore.unlockOtpInfo])\n\n      useEffect(() => {\n        customerServicesMenuStore.accountInfoError = null\n      }, [])\n\n      const searchIdCardNumber = async (value) => {\n        setIdCard(value)\n        setIsSearch(true)\n        //call api\n        await customerServicesMenuStore.getDataAccountOtpUnlock(value)\n      }\n\n      const convertArrayObjectToArray = (arrayObject) => {\n        return new Promise((resolve, reject) => {\n          let result = arrayObject.map(a => [a.otp_is_locked, a.main_account_no, a.product_name_english]);\n          resolve(result)\n        })\n      }\n      const replaceNewDataForSetString = () => {\n        let arrayAccountInfo = customerServicesMenuStore.accountInfo\n        let accountSelected = customerServicesMenuStore.accountSelected\n        // let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber))\n        let newArray = arrayAccountInfo.filter(accountInfo => accountInfo.main_account_no !== accountSelected.main_account_no)\n\n        convertArrayObjectToArray([...newArray, accountSelected]).then(result => {\n          setStringSwitch(result)\n        })\n      }\n\n      const closeModal = () => {\n        setVisble(false)\n        setStringSwitch(customerServicesMenuStore.arrayAccountInfo)\n\n      };\n      const onChange = (switchSelected, index) => {\n\n        if (switchSelected === true) {\n\n          customerServicesMenuStore.accountSelected = customerServicesMenuStore.accountInfo[index]\n          setStringSwitch(customerServicesMenuStore.arrayAccountInfo)\n          setVisble(true)\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p>{t(\"unlockingOtp\")}</p>\n              <p> {t(\"accountNumber\") + \" \" + customerServicesMenuStore.accountSelected.main_account_no}</p>\n            </div>\n          )\n\n        } else {\n          // setIsChecked(false)\n        }\n      }\n\n      const unlockOTP = async () => {\n        setVisble(false)\n        await customerServicesMenuStore.submitUnlockOTP()\n      }\n\n\n      return (\n        <div style={{ margin: 20 }}>\n          <Row gutter={[4, 24]}>\n            <SimpleSearch search={searchIdCardNumber} prefixWording={t(\"idCard\")} loading={customerServicesMenuStore.searchFetching} />\n          </Row>\n\n          <Row gutter={[16, 24]}>\n            <Col span={9}>\n              {/* {(customerServicesMenuStore.accountInfoError) ? (<SimpleAlert message={\n                get(customerServicesMenuStore.accountInfoError, 'responseData.message', 'Unknown Error')\n              } type=\"error\" showIcon />) : ('')} */}\n              {customerServicesMenuStore.accountInfoError && <Alert\n                message={customerServicesMenuStore.accountInfoError}\n                description={''}\n                type=\"error\"\n                closable\n                onClose={() => customerServicesMenuStore.accountInfoError = null}\n              />\n              }\n            </Col>\n          </Row>\n          {(isSearch) ? (\n            <SimpleSwitch\n              data={stringSwitch}\n              onChange={(switchSelected, index) => onChange(switchSelected, index)} />\n          ) : ('')}\n          <SimpleModal\n            onOk={() => unlockOTP()}\n            onCancel={() => closeModal()}\n            okText={t(\"confirm\")}\n            cancelText={t(\"cancel\")}\n            modalString={modalString}\n            visible={visible}\n          />\n        </div>\n      )\n    }))\n\nexport default withTranslation('common')(OtpUnlocking)\n"]},"metadata":{},"sourceType":"module"}