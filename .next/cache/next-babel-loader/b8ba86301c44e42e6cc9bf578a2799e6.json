{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport SimpleSwitch from '../simple-switch';\nimport { useStores } from '../../hooks/use-stores';\nimport { toJS } from 'mobx';\nimport { i18n, withNamespaces } from '../../i18n';\nconst StyledA = styled.a.withConfig({\n  displayName: \"otp-unlocking__StyledA\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"otp-unlocking__StyledSpan\",\n  componentId: \"r234ff-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSwitch = styled(Switch).withConfig({\n  displayName: \"otp-unlocking__StyledSwitch\",\n  componentId: \"r234ff-2\"\n})([\"\", \"\"], ({\n  defaultChecked\n}) => defaultChecked && `\n      background-color: #F88008 !important;\n  `);\nexport default function OtpUnlocking() {\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: stringSwitch,\n    1: setStringSwitch\n  } = useState([]);\n  const mockData = [{\n    accountNumber: '123123123123',\n    accountType: 'Binding to TCRB Mobile Banking',\n    accountStatus: true\n  }, {\n    accountNumber: '00993445123123',\n    accountType: 'Binding to Micro Pay',\n    accountStatus: false\n  }];\n  const {\n    customerServicesMenuStore\n  } = useStores();\n\n  const searchIdCardNumber = async value => {\n    setIsSearch(true); //call api\n\n    await customerServicesMenuStore.getData(value);\n    console.log(toJS(customerServicesMenuStore.accountInfoError)); // convertArrayObjectToArray(customerServicesMenuStore.accountInfo).then(result => {\n    //   customerServicesMenuStore.arrayAccountInfo = result\n    //   setStringSwitch(result)\n    // })\n  };\n\n  const convertArrayObjectToArray = arrayObject => {\n    return new Promise((resolve, reject) => {\n      let result = arrayObject.map(a => [a.otp_is_locked, a.main_account_no, a.product_name_english]);\n      resolve(result);\n    });\n  };\n\n  const replaceNewDataForSetString = () => {\n    let arrayAccountInfo = customerServicesMenuStore.accountInfo.data;\n    let accountSelected = customerServicesMenuStore.accountSelected;\n    let newArray = arrayAccountInfo.filter(accountInfo => accountInfo.main_account_no !== accountSelected.main_account_no);\n    convertArrayObjectToArray([...newArray, accountSelected]).then(result => {\n      setStringSwitch(result);\n    });\n  };\n\n  const closeModal = () => {\n    setVisble(false); // setStringSwitch(customerServicesMenuStore.arrayAccountInfo.data.data)\n  };\n\n  const onChange = (switchSelected, index) => {\n    if (switchSelected === true) {\n      customerServicesMenuStore.accountSelected = customerServicesMenuStore.accountInfo.data[index]; // setStringSwitch(customerServicesMenuStore.arrayAccountInfo)\n\n      setVisble(true);\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, i18n.t(\"unlockingOtp\")), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, \" \", i18n.t(\"accountNumber\") + \" \" + customerServicesMenuStore.accountSelected.main_account_no)));\n    } else {// setIsChecked(false)\n    }\n  };\n\n  const unlockOTP = () => {\n    setVisble(false); //cal api\n\n    customerServicesMenuStore.accountSelected.otp_is_locked = false;\n    replaceNewDataForSetString();\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: i18n.t(\"idCard\"),\n    loading: customerServicesMenuStore.accountInfoFetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(SimpleSwitch, {\n    data: stringSwitch,\n    onChange: (switchSelected, index) => onChange(switchSelected, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }) : '', __jsx(SimpleModal, {\n    onOk: () => unlockOTP(),\n    onCancel: () => closeModal(),\n    okText: i18n.t(\"confirm\"),\n    cancelText: i18n.t(\"cancel\"),\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","SimpleSwitch","useStores","toJS","i18n","withNamespaces","StyledA","a","theme","spacing","medium","StyledSpan","span","StyledSwitch","defaultChecked","OtpUnlocking","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","stringSwitch","setStringSwitch","mockData","accountNumber","accountType","accountStatus","customerServicesMenuStore","searchIdCardNumber","value","getData","console","log","accountInfoError","convertArrayObjectToArray","arrayObject","Promise","resolve","reject","result","map","otp_is_locked","main_account_no","product_name_english","replaceNewDataForSetString","arrayAccountInfo","accountInfo","data","accountSelected","newArray","filter","then","closeModal","onChange","switchSelected","index","textAlign","t","unlockOTP","marginTop","accountInfoFetching"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport SimpleSwitch from '../simple-switch'\nimport { useStores } from '../../hooks/use-stores'\nimport { toJS } from 'mobx';\nimport { i18n, withNamespaces } from '../../i18n'\n\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n\n      ${({ defaultChecked }) => defaultChecked && `\n      background-color: #F88008 !important;\n  `}\n`\n\nexport default function OtpUnlocking\n  () {\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const [stringSwitch, setStringSwitch] = useState([])\n  const mockData = [\n    { accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true },\n    { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }\n  ]\n  const { customerServicesMenuStore } = useStores()\n  const searchIdCardNumber = async (value) => {\n    setIsSearch(true)\n    //call api\n    await customerServicesMenuStore.getData(value)\n    console.log(toJS(customerServicesMenuStore.accountInfoError))\n    // convertArrayObjectToArray(customerServicesMenuStore.accountInfo).then(result => {\n    //   customerServicesMenuStore.arrayAccountInfo = result\n    //   setStringSwitch(result)\n    // })\n  }\n  const convertArrayObjectToArray = (arrayObject) => {\n    return new Promise((resolve, reject) => {\n      let result = arrayObject.map(a => [a.otp_is_locked, a.main_account_no, a.product_name_english]);\n      resolve(result)\n    })\n  }\n  const replaceNewDataForSetString = () => {\n    let arrayAccountInfo = customerServicesMenuStore.accountInfo.data\n    let accountSelected = customerServicesMenuStore.accountSelected\n    let newArray = arrayAccountInfo.filter(accountInfo => accountInfo.main_account_no !== accountSelected.main_account_no)\n\n    convertArrayObjectToArray([...newArray, accountSelected]).then(result => {\n      setStringSwitch(result)\n    })\n  }\n\n  const closeModal = () => {\n    setVisble(false)\n    // setStringSwitch(customerServicesMenuStore.arrayAccountInfo.data.data)\n  };\n  const onChange = (switchSelected, index) => {\n    if (switchSelected === true) {\n      customerServicesMenuStore.accountSelected = customerServicesMenuStore.accountInfo.data[index]\n      // setStringSwitch(customerServicesMenuStore.arrayAccountInfo)\n      setVisble(true)\n      setModalString(\n        <div style={{ textAlign: \"center\" }}>\n          <p>{i18n.t(\"unlockingOtp\")}</p>\n          <p> {i18n.t(\"accountNumber\") + \" \" + customerServicesMenuStore.accountSelected.main_account_no}</p>\n        </div>\n      )\n    } else {\n      // setIsChecked(false)\n    }\n  }\n\n  const unlockOTP = () => {\n    setVisble(false)\n    //cal api\n    customerServicesMenuStore.accountSelected.otp_is_locked = false\n    replaceNewDataForSetString()\n  }\n\n\n  return (\n    <div style={{ marginTop: 20 }}>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording={i18n.t(\"idCard\")} loading={customerServicesMenuStore.accountInfoFetching} />\n      </Row>\n      {(isSearch) ? (\n        <SimpleSwitch\n          data={stringSwitch}\n          onChange={(switchSelected, index) => onChange(switchSelected, index)} />\n      ) : ('')}\n      <SimpleModal\n        onOk={() => unlockOTP()}\n        onCancel={() => closeModal()}\n        okText={i18n.t(\"confirm\")}\n        cancelText={i18n.t(\"cancel\")}\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}