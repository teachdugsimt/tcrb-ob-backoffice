{"ast":null,"code":"import \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nvar _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\n// import { useStores } from '../../hooks/use-stores'\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../i18n';\nconst ProductLimitSetup = inject('businessParametersSetupStore')(observer(props => {\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    businessParametersSetupStore\n  } = props;\n  useEffect(() => {\n    // setDataSource(mockDataSource)\n    businessParametersSetupStore.getDataProductLimit();\n  }, []);\n  useEffect(() => {\n    setDataSource(businessParametersSetupStore.productLimit);\n  }, [businessParametersSetupStore.productLimit]);\n\n  const handleDelete = key => {\n    // const dataSource = [...this.state.dataSource];\n    // setDataSource(dataSource.filter(item => item.key !== key))\n    console.log(key);\n  };\n\n  const columns = [{\n    // title: 'Specific Channel Limit',\n    dataIndex: 'operation',\n    render: (text, record) => dataSource.length >= 1 ? __jsx(_Popconfirm, {\n      title: \"Sure to delete?\",\n      onConfirm: () => businessParametersSetupStore.selectProductToDelete(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Delete\")) : null\n  }, {\n    title: 'Product_Code',\n    dataIndex: 'product_code',\n    width: '10%',\n    editable: true\n  }, {\n    title: 'Product_Description',\n    dataIndex: 'product_description'\n  }, {\n    title: 'All-Channel Txn Limit',\n    dataIndex: 'TxnLimit'\n  }, {\n    title: 'All-Channel Daily Limit',\n    dataIndex: 'daily_limit'\n  }, {\n    title: 'Specific Channel Limit',\n    dataIndex: 'Specific'\n  }];\n  const mockDataSource = [{\n    key: '0',\n    ProductCode: 'NE',\n    ProductDescription: 'Revolving Loan-Non TCG Nano',\n    TxnLimit: '100,000.00',\n    DailyLimit: '100,000.00'\n  }, {\n    key: '1',\n    ProductCode: 'NG',\n    ProductDescription: 'Revolving Loan-Non TCG Micro',\n    TxnLimit: '200,000.00',\n    DailyLimit: '200,000.00'\n  }, {\n    key: '2',\n    ProductCode: 'NH',\n    ProductDescription: 'Revolving Loan-TCG Nano',\n    TxnLimit: '100,000.00',\n    DailyLimit: '100,000.00'\n  }];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, __jsx(_Button, {\n    // onClick={this.handleAdd}\n    type: \"primary\",\n    style: {\n      marginBottom: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Add a row\")), __jsx(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(_Col, {\n    flex: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(_Table, {\n    // components={components}\n    rowClassName: () => 'editable-row',\n    bordered: true,\n    dataSource: dataSource,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }))));\n}));\nexport default withTranslation('common')(ProductLimitSetup);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup.js"],"names":["React","useState","useEffect","inject","observer","withTranslation","ProductLimitSetup","props","dataSource","setDataSource","businessParametersSetupStore","getDataProductLimit","productLimit","handleDelete","key","console","log","columns","dataIndex","render","text","record","length","selectProductToDelete","title","width","editable","mockDataSource","ProductCode","ProductDescription","TxnLimit","DailyLimit","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, Table, Popconfirm, Row, Col } from 'antd'\n// import { useStores } from '../../hooks/use-stores'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../i18n'\n\nconst ProductLimitSetup =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const [dataSource, setDataSource] = useState([])\n      const { businessParametersSetupStore } = props\n\n      useEffect(() => {\n        // setDataSource(mockDataSource)\n        businessParametersSetupStore.getDataProductLimit()\n\n      }, []);\n      useEffect(() => {\n        setDataSource(businessParametersSetupStore.productLimit)\n\n      }, [businessParametersSetupStore.productLimit])\n      const handleDelete = key => {\n        // const dataSource = [...this.state.dataSource];\n        // setDataSource(dataSource.filter(item => item.key !== key))\n        console.log(key)\n\n      };\n      const columns = [\n        {\n          // title: 'Specific Channel Limit',\n          dataIndex: 'operation',\n          render: (text, record) =>\n            dataSource.length >= 1 ? (\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => businessParametersSetupStore.selectProductToDelete(record)} >\n                <a>Delete</a>\n              </Popconfirm>\n            ) : null,\n        },\n        {\n          title: 'Product_Code',\n          dataIndex: 'product_code',\n          width: '10%',\n          editable: true,\n        },\n        {\n          title: 'Product_Description',\n          dataIndex: 'product_description',\n        },\n        {\n          title: 'All-Channel Txn Limit',\n          dataIndex: 'TxnLimit',\n        },\n        {\n          title: 'All-Channel Daily Limit',\n          dataIndex: 'daily_limit',\n        },\n        {\n          title: 'Specific Channel Limit',\n          dataIndex: 'Specific',\n        },\n      ];\n      const mockDataSource = [\n        {\n          key: '0',\n          ProductCode: 'NE',\n          ProductDescription: 'Revolving Loan-Non TCG Nano',\n          TxnLimit: '100,000.00',\n          DailyLimit: '100,000.00'\n        },\n        {\n          key: '1',\n          ProductCode: 'NG',\n          ProductDescription: 'Revolving Loan-Non TCG Micro',\n          TxnLimit: '200,000.00',\n          DailyLimit: '200,000.00'\n        },\n        {\n          key: '2',\n          ProductCode: 'NH',\n          ProductDescription: 'Revolving Loan-TCG Nano',\n          TxnLimit: '100,000.00',\n          DailyLimit: '100,000.00'\n        },\n      ]\n      return (\n        <div>\n          <Row>\n            <Button\n              // onClick={this.handleAdd}\n              type=\"primary\"\n              style={{\n                marginBottom: 16,\n              }}\n            >Add a row</Button>\n          </Row>\n          <Row>\n            <Col flex={100}>\n              <Table\n                // components={components}\n                rowClassName={() => 'editable-row'}\n                bordered\n                dataSource={dataSource}\n                columns={columns}\n              />\n            </Col>\n\n          </Row>\n        </div>\n      )\n    }))\nexport default withTranslation('common')(ProductLimitSetup)\n"]},"metadata":{},"sourceType":"module"}