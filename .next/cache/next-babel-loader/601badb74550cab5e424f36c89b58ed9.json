{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/layouts/EmptyLayout.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport MainLayout from './MainLayout';\nimport { inject, observer } from 'mobx-react';\nimport Login from '../pages/login';\nimport { withTranslation } from '../i18n';\nconst EmptyLayout = inject('authenStore')(observer(props => {\n  // const { authenStore } = useStores()\n  const {\n    authenStore\n  } = props;\n  console.log(\"__________ HANDLE ERROR _____________\"); // console.log(props)\n\n  if (authenStore.password && authenStore.id) {\n    return __jsx(MainLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, props.children);\n  } else if (props.router && props.router.route == \"/_error\") {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }, props.children);\n  } else {\n    return __jsx(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n}));\n\nEmptyLayout.getInitialProps = async () => ({\n  namespacesRequired: []\n});\n\nexport default withRouter(withTranslation()(EmptyLayout)); // export default withRouter(withTranslation()(EmptyLayout))\n// import withError from './withError'\n// class Example extends React.Component {\n//     static async getInitialProps(ctx) {\n//         if (error) { // define your app error logic here\n//           ctx.res.statusCode = 404;\n//         }\n//         return { /* ... */ }\n//     }\n//     render() {\n//         /* ... */\n//     }\n// }\n// export default withError(Example);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/layouts/EmptyLayout.js"],"names":["React","useContext","Router","withRouter","MainLayout","inject","observer","Login","withTranslation","EmptyLayout","props","authenStore","console","log","password","id","children","router","route","getInitialProps","namespacesRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,MAAMC,WAAW,GAAGJ,MAAM,CAAC,aAAD,CAAN,CAAsBC,QAAQ,CAAEI,KAAD,IAAW;AAC5D;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAH4D,CAI5D;;AAEA,MAAIF,WAAW,CAACG,QAAZ,IAAwBH,WAAW,CAACI,EAAxC,EAA4C;AAC1C,WACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,KAAK,CAACM,QADT,CADF;AAKD,GAND,MAOK,IAAIN,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACO,MAAN,CAAaC,KAAb,IAAsB,SAA1C,EAAqD;AACxD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMR,KAAK,CAACM,QAAZ,CAAP;AACD,GAFI,MAGA;AACH,WAAO,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAnBiD,CAA9B,CAApB;;AAoBAP,WAAW,CAACU,eAAZ,GAA8B,aAAa;AACzCC,EAAAA,kBAAkB,EAAE;AADqB,CAAb,CAA9B;;AAIA,eAAejB,UAAU,CAACK,eAAe,GAAGC,WAAH,CAAhB,CAAzB,C,CACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useContext } from 'react'\nimport Router, { withRouter } from 'next/router'\nimport MainLayout from './MainLayout'\nimport { inject, observer } from 'mobx-react'\nimport Login from '../pages/login'\nimport { withTranslation } from '../i18n'\n\nconst EmptyLayout = inject('authenStore')(observer((props) => {\n  // const { authenStore } = useStores()\n  const { authenStore } = props\n  console.log(\"__________ HANDLE ERROR _____________\")\n  // console.log(props)\n\n  if (authenStore.password && authenStore.id) {\n    return (\n      <MainLayout>\n        {props.children}\n      </MainLayout>\n    )\n  }\n  else if (props.router && props.router.route == \"/_error\") {\n    return <div>{props.children}</div>\n  }\n  else {\n    return <Login />\n  }\n}))\nEmptyLayout.getInitialProps = async () => ({\n  namespacesRequired: [],\n})\n\nexport default withRouter(withTranslation()(EmptyLayout))\n// export default withRouter(withTranslation()(EmptyLayout))\n\n\n\n// import withError from './withError'\n\n// class Example extends React.Component {\n//     static async getInitialProps(ctx) {\n//         if (error) { // define your app error logic here\n//           ctx.res.statusCode = 404;\n//         }\n\n//         return { /* ... */ }\n//     }\n\n//     render() {\n//         /* ... */\n//     }\n// }\n\n// export default withError(Example);\n"]},"metadata":{},"sourceType":"module"}