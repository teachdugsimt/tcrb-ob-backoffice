{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport { observer, inject } from 'mobx-react';\nimport { useStores } from '../../hooks/use-stores';\nimport { toJS } from 'mobx';\nconst {\n  Header,\n  Footer,\n  Sider,\n  Content\n} = Layout; // const stringSwitch = [{ accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true }, { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }]\n\nconst StyledA = styled.a.withConfig({\n  displayName: \"otp-unlocking__StyledA\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"otp-unlocking__StyledSpan\",\n  componentId: \"r234ff-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSwitch = styled(Switch).withConfig({\n  displayName: \"otp-unlocking__StyledSwitch\",\n  componentId: \"r234ff-2\"\n})([\"\", \"\"], ({\n  defaultChecked\n}) => defaultChecked && `\n      background-color: #F88008 !important;\n  `);\nexport default function OtpUnlocking() {\n  const {\n    0: idCard,\n    1: setIdCard\n  } = useState('');\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: stringSwitch,\n    1: setStringSwitch\n  } = useState([{\n    accountNumber: '123123123123',\n    accountType: 'Binding to TCRB Mobile Banking',\n    accountStatus: true\n  }, {\n    accountNumber: '00993445123123',\n    accountType: 'Binding to Micro Pay',\n    accountStatus: false\n  }]);\n  const {\n    customerServicesMenuStore\n  } = useStores(); // useEffect(() => {\n  //     setDataSource(mockDataSource)\n  // }, []);\n\n  const searchIdCardNumber = value => {\n    console.log('eiei search:' + value);\n    setIdCard(value);\n    setIsSearch(true);\n  };\n\n  const hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  const onChange = (value, switchSelected, index) => {\n    console.log(\"change:\" + value);\n    console.log(switchSelected);\n    console.log(index);\n\n    if (switchSelected.accountStatus === true) {\n      customerServicesMenuStore.accountSelected = switchSelected;\n      setVisble(true);\n      setIsChecked(true);\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, \"Unlocking OTP!!\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \"Account Number \", switchSelected.accountNumber)));\n    } else {// setIsChecked(false)\n    }\n  };\n\n  const unlockOTP = () => {\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false;\n    console.log(toJS(customerServicesMenuStore.accountSelected));\n    console.log([...stringSwitch, customerServicesMenuStore.accountSelected]); // setStringSwitch(...stringSwitch, customerServicesMenuStore.accountSelected.accountStatus)\n\n    setVisble(false); // setStringSwitch()\n  };\n\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) => __jsx(Row, {\n      key: index,\n      gutter: [4, 8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, __jsx(Col, {\n      span: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, __jsx(StyledSwitch, {\n      defaultChecked: string.accountStatus,\n      onChange: checked => onChange(checked, string, index),\n      disabled: string.accountStatus === false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), __jsx(StyledA, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, string.accountNumber)), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, __jsx(StyledSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \" \", string.accountType)), __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, string.accountStatus ? __jsx(StyledSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 36\n      }\n    }, \"OTP is Locked\") : __jsx(StyledSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 79\n      }\n    }, \"OTP is ready for using\"))));\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: \"ID Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(Col, {\n    flex: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(SwitchList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })) : '', __jsx(SimpleModal, {\n    onOk: () => unlockOTP(),\n    onCancel: () => setVisble(false),\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","useContext","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","observer","inject","useStores","toJS","Header","Footer","Sider","Content","StyledA","a","theme","spacing","medium","StyledSpan","span","StyledSwitch","defaultChecked","OtpUnlocking","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","stringSwitch","setStringSwitch","accountNumber","accountType","accountStatus","customerServicesMenuStore","searchIdCardNumber","value","console","log","hideModal","setState","onChange","switchSelected","index","accountSelected","textAlign","unlockOTP","SwitchList","listItems","map","string","checked","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport { observer, inject } from 'mobx-react';\nimport { useStores } from '../../hooks/use-stores'\nimport { toJS } from 'mobx';\nconst { Header, Footer, Sider, Content } = Layout;\n// const stringSwitch = [{ accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true }, { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }]\n\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n\n      ${({ defaultChecked }) => defaultChecked && `\n      background-color: #F88008 !important;\n  `}\n`\n\nexport default function OtpUnlocking\n  () {\n  const [idCard, setIdCard] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const [stringSwitch, setStringSwitch] = useState([{ accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true }, { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }])\n  const { customerServicesMenuStore } = useStores()\n\n  // useEffect(() => {\n  //     setDataSource(mockDataSource)\n\n  // }, []);\n  const searchIdCardNumber = (value) => {\n    console.log('eiei search:' + value)\n    setIdCard(value)\n    setIsSearch(true)\n  }\n\n\n  const hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  const onChange = (value, switchSelected, index) => {\n    console.log(\"change:\" + value)\n    console.log(switchSelected)\n    console.log(index)\n    if (switchSelected.accountStatus === true) {\n      customerServicesMenuStore.accountSelected = switchSelected\n      setVisble(true)\n      setIsChecked(true)\n      setModalString(\n        <div style={{ textAlign: \"center\" }}>\n          <p>Unlocking OTP!!</p>\n          <p>Account Number {switchSelected.accountNumber}</p>\n        </div>\n      )\n    } else {\n      // setIsChecked(false)\n    }\n  }\n  const unlockOTP = () => {\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false\n    console.log(toJS(customerServicesMenuStore.accountSelected))\n    console.log([...stringSwitch, customerServicesMenuStore.accountSelected])\n    // setStringSwitch(...stringSwitch, customerServicesMenuStore.accountSelected.accountStatus)\n    setVisble(false)\n    // setStringSwitch()\n  }\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) =>\n      <Row key={index} gutter={[4, 8]}>\n        <Col span={5}>\n          <StyledSwitch defaultChecked={string.accountStatus} onChange={checked => onChange(checked, string, index)} disabled={string.accountStatus === false} />\n          <StyledA>{string.accountNumber}</StyledA>\n        </Col>\n        <Col span={6}>\n          <StyledSpan> {string.accountType}</StyledSpan>\n        </Col>\n        <Col span={4}>\n          {string.accountStatus ? (<StyledSpan>OTP is Locked</StyledSpan>) : (<StyledSpan>OTP is ready for using</StyledSpan>)}\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  return (\n    <div style={{ margin: 20 }}>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (\n\n        <Col flex={100}>\n          <SwitchList />\n        </Col>\n      ) : ('')}\n      <SimpleModal\n        onOk={() => unlockOTP()}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}