{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/menu-and-function/menu/manage-menu.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport { orange, green, gold } from '@ant-design/colors';\nimport { TcrbButton, TcrbPopconfirm } from '../../../antd-styles/styles';\nimport SimpleModal from '../../../simple-modal';\nimport SimpleInput from '../../../simple-input';\nimport { addKeyToDataSource, checkDefaultStatus } from '../../../data-utility';\nvar Option = Select.Option;\nvar menuName = null;\nvar ManageMenu = inject('userAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState(''),\n      editingKey = _useState[0],\n      setEditingKey = _useState[1];\n\n  var _useState2 = useState(\"Submit\"),\n      textOk = _useState2[0],\n      setTextOk = _useState2[1];\n\n  var _useState3 = useState(\"Cancel\"),\n      textCancel = _useState3[0],\n      setTextCancel = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      modalString = _useState4[0],\n      setModalString = _useState4[1];\n\n  var _useState5 = useState(''),\n      modalType = _useState5[0],\n      setModalType = _useState5[1];\n\n  var _useState6 = useState(''),\n      modalTitle = _useState6[0],\n      setModalTitle = _useState6[1];\n\n  var _useState7 = useState(false),\n      visible = _useState7[0],\n      setVisible = _useState7[1];\n\n  var _useState8 = useState(false),\n      isDisableButtonAddFunction = _useState8[0],\n      setIsDisableButtonAddFunction = _useState8[1];\n\n  var _useState9 = useState(false),\n      showEditMenu = _useState9[0],\n      setShowEditMenu = _useState9[1];\n\n  var _useState10 = useState([]),\n      dataSourceFunction = _useState10[0],\n      setDataSourceFunction = _useState10[1];\n\n  var _useState11 = useState(false),\n      isAddFunctionToMenu = _useState11[0],\n      setIsAddFunctionToMenu = _useState11[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var userAccessManagementStore = props.userAccessManagementStore,\n      t = props.t;\n\n  var isEditing = function isEditing(record) {\n    return record.key === editingKey;\n  };\n\n  useEffect(function () {\n    addKeyToDataSource(userAccessManagementStore.menuSelected.functions).then(function (result) {\n      setDataSourceFunction(result);\n    });\n  }, []);\n\n  var edit = function edit(record) {\n    form.setFieldsValue(_objectSpread({\n      name: '',\n      status: record.status\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  var EditableCell = function EditableCell(_ref) {\n    var editing = _ref.editing,\n        dataIndex = _ref.dataIndex,\n        title = _ref.title,\n        inputType = _ref.inputType,\n        record = _ref.record,\n        index = _ref.index,\n        children = _ref.children,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: \"Please Input \".concat(title, \"!\")\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    })) : children);\n  };\n\n  var goBackToMenuList = function goBackToMenuList() {\n    userAccessManagementStore.nextPageIsManageMenu = false;\n  };\n\n  var addNewFunction = function addNewFunction() {\n    var newFunction = {\n      key: dataSourceFunction.length + 1,\n      name: ''\n    };\n    setDataSourceFunction([].concat(_toConsumableArray(dataSourceFunction), [newFunction]));\n    edit(newFunction);\n    setIsDisableButtonAddFunction(true);\n  };\n\n  var addFunction = function addFunction() {};\n\n  var submitEditMenuName = function submitEditMenuName() {\n    var request = {\n      newData: {\n        name: menuName\n      },\n      currentData: userAccessManagementStore.menuSelected\n    };\n    userAccessManagementStore.updateMenu(request);\n    setShowEditMenu(false);\n  };\n\n  var FormAddNewMenu = function FormAddNewMenu() {\n    return __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \"Function Name\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      onChange: function onChange(value) {\n        return console.log(value);\n      },\n      style: {\n        width: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    })));\n  };\n\n  var openModalAddFunction = function openModalAddFunction() {\n    setModalTitle('Add function to Menu');\n    setModalType('confirm');\n    setIsAddFunctionToMenu(true);\n    setModalString(__jsx(FormAddNewMenu, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 24\n      }\n    }));\n    setVisible(true);\n  };\n\n  var openModalSubmitEditMenuName = function openModalSubmitEditMenuName() {\n    setModalTitle('Confirm');\n    setModalType('confirm');\n    setModalString(__jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, \"Confirm to Change Menu Name \\\"\", userAccessManagementStore.menuSelected.name, \"\\\" to \\\"\", menuName, \"\\\".\"), __jsx(\"p\", {\n      style: {\n        color: orange[6]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, \"Your changes will take effect after being approved.\")));\n    setVisible(true);\n  };\n\n  var cancelEditMenu = function cancelEditMenu() {\n    setShowEditMenu(false);\n  };\n\n  var submitModal = function submitModal() {\n    if (isAddFunctionToMenu == true) {\n      addFunction();\n      setVisible(false);\n      setIsAddFunctionToMenu(false);\n    } else {\n      submitEditMenuName();\n      setVisible(false);\n    }\n  };\n\n  var renderActionFunction = function renderActionFunction(record) {\n    var editable = isEditing(record);\n\n    if (record.request_status === 'APPROVE') {\n      return editable ? __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Save?\",\n        onConfirm: function onConfirm() {\n          return submitEditFunction(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }, \"Save\")), __jsx(TcrbPopconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: function onConfirm() {\n          return cancelEditFunction();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))) : __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        disabled: editingKey !== '',\n        onClick: function onClick() {\n          return edit(record);\n        },\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        onConfirm: function onConfirm() {\n          return deactivateFunctionSelect(record);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }, \"Deactivate\")));\n    } else if (record.request_status === 'PENDING') {\n      return null;\n    } else if (record.request_status === 'REJECT') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  var columnFunction = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkDefaultStatus(record.status, record.request_status);\n    }\n  }, {\n    title: 'Function Name',\n    dataIndex: 'name',\n    editable: true // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: function render(text, record) {\n      return renderActionFunction(record);\n    }\n  }];\n  var mergedColumns = columnFunction.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          inputType: 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        };\n      }\n    });\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      return goBackToMenuList();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, \"Back\"))), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"Menu\"), __jsx(Col, {\n    span: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \" \", showEditMenu ? __jsx(SimpleInput, {\n    defaultValue: userAccessManagementStore.menuSelected.name,\n    onChange: function onChange(value) {\n      return menuName = value;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }) : userAccessManagementStore.menuSelected.name)), __jsx(Row, {\n    justify: \"center\",\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, showEditMenu ? __jsx(Space, {\n    size: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      cancelEditMenu();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      openModalSubmitEditMenuName();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }, \"Submit\")) : __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      setShowEditMenu(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, \"Edit\"))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      return openModalAddFunction();\n    },\n    disabled: isDisableButtonAddFunction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, \"Add Function\"))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    flex: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, __jsx(Form, {\n    form: form,\n    component: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, __jsx(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: dataSourceFunction,\n    columns: mergedColumns,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  })))), __jsx(SimpleModal, {\n    title: modalTitle,\n    type: modalType,\n    onOk: function onOk() {\n      return submitModal();\n    },\n    onCancel: function onCancel() {\n      return setVisible(false);\n    },\n    textCancel: textCancel,\n    textOk: textOk,\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }));\n}, \"h8ufOp/t4LC1SD3uAzdKcLx0Hzc=\", false, function () {\n  return [Form.useForm];\n})));\nexport default ManageMenu;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/menu-and-function/menu/manage-menu.js"],"names":["React","useEffect","useState","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","Space","inject","observer","orange","green","gold","TcrbButton","TcrbPopconfirm","SimpleModal","SimpleInput","addKeyToDataSource","checkDefaultStatus","Option","menuName","ManageMenu","props","editingKey","setEditingKey","textOk","setTextOk","textCancel","setTextCancel","modalString","setModalString","modalType","setModalType","modalTitle","setModalTitle","visible","setVisible","isDisableButtonAddFunction","setIsDisableButtonAddFunction","showEditMenu","setShowEditMenu","dataSourceFunction","setDataSourceFunction","isAddFunctionToMenu","setIsAddFunctionToMenu","useForm","form","userAccessManagementStore","t","isEditing","record","key","menuSelected","functions","then","result","edit","setFieldsValue","name","status","EditableCell","editing","dataIndex","title","inputType","index","children","restProps","margin","required","message","goBackToMenuList","nextPageIsManageMenu","addNewFunction","newFunction","length","addFunction","submitEditMenuName","request","newData","currentData","updateMenu","FormAddNewMenu","value","console","log","width","openModalAddFunction","openModalSubmitEditMenuName","textAlign","color","cancelEditMenu","submitModal","renderActionFunction","editable","request_status","submitEditFunction","marginRight","cancelEditFunction","deactivateFunctionSelect","columnFunction","render","text","mergedColumns","map","col","onCell","marginTop","body","cell"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,IAArD,EAA2DC,WAA3D,EAAwEC,OAAxE,EAAiFC,MAAjF,EAAyFC,KAAzF,EAAgGC,MAAhG,EAAwGC,KAAxG,QAAqH,MAArH;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,oBAApC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,6BAA3C;AAGA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,uBAAvD;IACQC,M,GAAWnB,M,CAAXmB,M;AACR,IAAIC,QAAQ,GAAG,IAAf;AAEA,IAAMC,UAAU,GACdb,MAAM,CAAC,2BAAD,CAAN,CACGC,QAAQ,IAAC,UAACa,KAAD,EAAW;AAAA;;AAAA,kBACiB7B,QAAQ,CAAC,EAAD,CADzB;AAAA,MACZ8B,UADY;AAAA,MACAC,aADA;;AAAA,mBAES/B,QAAQ,CAAC,QAAD,CAFjB;AAAA,MAEZgC,MAFY;AAAA,MAEJC,SAFI;;AAAA,mBAGiBjC,QAAQ,CAAC,QAAD,CAHzB;AAAA,MAGZkC,UAHY;AAAA,MAGAC,aAHA;;AAAA,mBAImBnC,QAAQ,CAAC,EAAD,CAJ3B;AAAA,MAIZoC,WAJY;AAAA,MAICC,cAJD;;AAAA,mBAKerC,QAAQ,CAAC,EAAD,CALvB;AAAA,MAKZsC,SALY;AAAA,MAKDC,YALC;;AAAA,mBAMiBvC,QAAQ,CAAC,EAAD,CANzB;AAAA,MAMZwC,UANY;AAAA,MAMAC,aANA;;AAAA,mBAOWzC,QAAQ,CAAC,KAAD,CAPnB;AAAA,MAOZ0C,OAPY;AAAA,MAOHC,UAPG;;AAAA,mBAQiD3C,QAAQ,CAAC,KAAD,CARzD;AAAA,MAQZ4C,0BARY;AAAA,MAQgBC,6BARhB;;AAAA,mBASqB7C,QAAQ,CAAC,KAAD,CAT7B;AAAA,MASZ8C,YATY;AAAA,MASEC,eATF;;AAAA,oBAUiC/C,QAAQ,CAAC,EAAD,CAVzC;AAAA,MAUZgD,kBAVY;AAAA,MAUQC,qBAVR;;AAAA,oBAWmCjD,QAAQ,CAAC,KAAD,CAX3C;AAAA,MAWZkD,mBAXY;AAAA,MAWSC,sBAXT;;AAAA,sBAaJ3C,IAAI,CAAC4C,OAAL,EAbI;AAAA;AAAA,MAaZC,IAbY;;AAAA,MAeXC,yBAfW,GAesBzB,KAftB,CAeXyB,yBAfW;AAAA,MAegBC,CAfhB,GAesB1B,KAftB,CAegB0B,CAfhB;;AAgBnB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,GAAP,KAAe5B,UAAnB;AAAA,GAAxB;;AAEA/B,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,kBAAkB,CAAC8B,yBAAyB,CAACK,YAA1B,CAAuCC,SAAxC,CAAlB,CAAqEC,IAArE,CAA0E,UAAAC,MAAM,EAAI;AAClFb,MAAAA,qBAAqB,CAACa,MAAD,CAArB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAN,MAAM,EAAI;AACrBJ,IAAAA,IAAI,CAACW,cAAL;AACEC,MAAAA,IAAI,EAAE,EADR;AAEEC,MAAAA,MAAM,EAAET,MAAM,CAACS;AAFjB,OAGKT,MAHL;AAKA1B,IAAAA,aAAa,CAAC0B,MAAM,CAACC,GAAR,CAAb;AACD,GAPD;;AASA,MAAMS,YAAY,GAAG,SAAfA,YAAe,OASf;AAAA,QARJC,OAQI,QARJA,OAQI;AAAA,QAPJC,SAOI,QAPJA,SAOI;AAAA,QANJC,KAMI,QANJA,KAMI;AAAA,QALJC,SAKI,QALJA,SAKI;AAAA,QAJJd,MAII,QAJJA,MAII;AAAA,QAHJe,KAGI,QAHJA,KAGI;AAAA,QAFJC,QAEI,QAFJA,QAEI;AAAA,QADDC,SACC;;AACJ,WACE,yBAAQA,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGN,OAAO,GACN,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAEC,SADR;AAEE,MAAA,KAAK,EAAE;AACLM,QAAAA,MAAM,EAAE;AADH,OAFT;AAKE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,yBAAkBP,KAAlB;AAFT,OADK,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADM,GAgBJG,QAjBN,CADF;AAuBD,GAjCD;;AAkCA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BxB,IAAAA,yBAAyB,CAACyB,oBAA1B,GAAiD,KAAjD;AAED,GAHD;;AAKA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIC,WAAW,GAAG;AAChBvB,MAAAA,GAAG,EAAEV,kBAAkB,CAACkC,MAAnB,GAA4B,CADjB;AAEhBjB,MAAAA,IAAI,EAAE;AAFU,KAAlB;AAIAhB,IAAAA,qBAAqB,8BAAKD,kBAAL,IAAyBiC,WAAzB,GAArB;AACAlB,IAAAA,IAAI,CAACkB,WAAD,CAAJ;AACApC,IAAAA,6BAA6B,CAAC,IAAD,CAA7B;AACD,GARD;;AAUA,MAAMsC,WAAW,GAAG,SAAdA,WAAc,GAAM,CAEzB,CAFD;;AAIA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,QAAIC,OAAO,GAAG;AACZC,MAAAA,OAAO,EAAE;AACPrB,QAAAA,IAAI,EAAEtC;AADC,OADG;AAIZ4D,MAAAA,WAAW,EAAEjC,yBAAyB,CAACK;AAJ3B,KAAd;AAMAL,IAAAA,yBAAyB,CAACkC,UAA1B,CAAqCH,OAArC;AACAtC,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GATD;;AAWA,MAAM0C,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,WACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAME,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,MAAD;AACE,MAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,eAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX;AAAA,OADZ;AAEE,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,CADF;AAkBD,GAnBD;;AAqBA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCrD,IAAAA,aAAa,CAAC,sBAAD,CAAb;AACAF,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACAY,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAd,IAAAA,cAAc,CAAC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAd;AACAM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAND;;AAQA,MAAMoD,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAM;AACxCtD,IAAAA,aAAa,CAAC,SAAD,CAAb;AACAF,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACAF,IAAAA,cAAc,CACZ;AAAK,MAAA,KAAK,EAAE;AAAE2D,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAiC1C,yBAAyB,CAACK,YAA1B,CAAuCM,IAAxE,cAAoFtC,QAApF,QADF,EAEE;AAAG,MAAA,KAAK,EAAE;AAAEsE,QAAAA,KAAK,EAAEhF,MAAM,CAAC,CAAD;AAAf,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFF,CADY,CAAd;AAMA0B,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAVD;;AAYA,MAAMuD,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BnD,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,MAAMoD,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIjD,mBAAmB,IAAI,IAA3B,EAAiC;AAC/BiC,MAAAA,WAAW;AACXxC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD,KAJD,MAIO;AACLiC,MAAAA,kBAAkB;AAClBzC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GATD;;AAWA,MAAMyD,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAC3C,MAAD,EAAY;AACvC,QAAM4C,QAAQ,GAAG7C,SAAS,CAACC,MAAD,CAA1B;;AACA,QAAIA,MAAM,CAAC6C,cAAP,KAA0B,SAA9B,EAAyC;AACvC,aAAOD,QAAQ,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,eAAtB;AAAsC,QAAA,SAAS,EAAE;AAAA,iBAAME,kBAAkB,CAAC9C,MAAM,CAACC,GAAR,CAAxB;AAAA,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAE;AAAE8C,UAAAA,WAAW,EAAE;AAAf,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAME,MAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,iBAAtB;AAAwC,QAAA,SAAS,EAAE;AAAA,iBAAMC,kBAAkB,EAAxB;AAAA,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAE;AAAER,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CANF,CADa,GAYX;AAAK,QAAA,KAAK,EAAE;AAAED,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,QAAQ,EAAElE,UAAU,KAAK,EAA5B;AAAgC,QAAA,OAAO,EAAE;AAAA,iBAAMiC,IAAI,CAACN,MAAD,CAAV;AAAA,SAAzC;AAA6D,QAAA,KAAK,EAAE;AAAE+C,UAAAA,WAAW,EAAE,CAAf;AAAkBP,UAAAA,KAAK,EAAE;AAAzB,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,MAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,qBAAtB;AAA4C,QAAA,SAAS,EAAE;AAAA,iBAAMS,wBAAwB,CAACjD,MAAD,CAA9B;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAE;AAAEwC,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAJF,CAZJ;AAqBD,KAtBD,MAsBO,IAAIxC,MAAM,CAAC6C,cAAP,KAA0B,SAA9B,EAAyC;AAC9C,aAAO,IAAP;AACD,KAFM,MAEA,IAAI7C,MAAM,CAAC6C,cAAP,KAA0B,QAA9B,EAAwC;AAC7C,aAAO,IAAP;AACD,KAFM,MAGF;AACH,aAAO,IAAP;AACD;AACF,GAhCD;;AAkCA,MAAMK,cAAc,GAAG,CACrB;AACErC,IAAAA,KAAK,EAAE,EADT;AAEED,IAAAA,SAAS,EAAE,QAFb;AAGEwB,IAAAA,KAAK,EAAE,IAHT;AAIEe,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOpD,MAAP;AAAA,aAAkBhC,kBAAkB,CAACgC,MAAM,CAACS,MAAR,EAAgBT,MAAM,CAAC6C,cAAvB,CAApC;AAAA;AAJV,GADqB,EAOrB;AACEhC,IAAAA,KAAK,EAAE,eADT;AAEED,IAAAA,SAAS,EAAE,MAFb;AAGEgC,IAAAA,QAAQ,EAAE,IAHZ,CAIE;;AAJF,GAPqB,EAarB;AACE/B,IAAAA,KAAK,EAAE,QADT;AAEED,IAAAA,SAAS,EAAE,WAFb;AAGEwB,IAAAA,KAAK,EAAE,KAHT;AAIEe,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOpD,MAAP;AAAA,aAAkB2C,oBAAoB,CAAC3C,MAAD,CAAtC;AAAA;AAJV,GAbqB,CAAvB;AAqBA,MAAMqD,aAAa,GAAGH,cAAc,CAACI,GAAf,CAAmB,UAAAC,GAAG,EAAI;AAC9C,QAAI,CAACA,GAAG,CAACX,QAAT,EAAmB;AACjB,aAAOW,GAAP;AACD;;AAED,2CACKA,GADL;AAEEC,MAAAA,MAAM,EAAE,gBAAAxD,MAAM;AAAA,eAAK;AACjBA,UAAAA,MAAM,EAANA,MADiB;AAEjBc,UAAAA,SAAS,EAAE,MAFM;AAGjBF,UAAAA,SAAS,EAAE2C,GAAG,CAAC3C,SAHE;AAIjBC,UAAAA,KAAK,EAAE0C,GAAG,CAAC1C,KAJM;AAKjBF,UAAAA,OAAO,EAAEZ,SAAS,CAACC,MAAD;AALD,SAAL;AAAA;AAFhB;AAUD,GAfqB,CAAtB;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE;AAAA,aAAMqB,gBAAgB,EAAtB;AAAA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADF,EAME,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAgBhC,YAAY,GAC1B,MAAC,WAAD;AAAa,IAAA,YAAY,EAAEQ,yBAAyB,CAACK,YAA1B,CAAuCM,IAAlE;AAAwE,IAAA,QAAQ,EAAE,kBAACyB,KAAD;AAAA,aAAW/D,QAAQ,GAAG+D,KAAtB;AAAA,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD0B,GAC0FpC,yBAAyB,CAACK,YAA1B,CAAuCM,IAD7J,CAFF,CANF,EAcE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEiD,MAAAA,SAAS,EAAE;AAAb,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpE,YAAY,GACX,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE,mBAAM;AAAEoD,MAAAA,cAAc;AAAI,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE,mBAAM;AAAEH,MAAAA,2BAA2B;AAAI,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADW,GAMX,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE,mBAAM;AAAEhD,MAAAA,eAAe,CAAC,IAAD,CAAf;AAAuB,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADF,CAdF,EAyBE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EA0BE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE;AAAA,aAAM+C,oBAAoB,EAA1B;AAAA,KAAzC;AAAuE,IAAA,QAAQ,EAAElD,0BAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CA1BF,EA+BE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAES,IAAZ;AAAkB,IAAA,SAAS,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,UAAU,EAAE;AACV8D,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEjD;AADF;AADI,KADd;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,UAAU,EAAEnB,kBAPd;AAQE,IAAA,OAAO,EAAE8D,aARX;AASE,IAAA,IAAI,EAAC,OATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CA/BF,EAgDE,MAAC,WAAD;AACE,IAAA,KAAK,EAAEtE,UADT;AAEE,IAAA,IAAI,EAAEF,SAFR;AAGE,IAAA,IAAI,EAAE;AAAA,aAAM6D,WAAW,EAAjB;AAAA,KAHR;AAIE,IAAA,QAAQ,EAAE;AAAA,aAAMxD,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJZ;AAKE,IAAA,UAAU,EAAET,UALd;AAME,IAAA,MAAM,EAAEF,MANV;AAOE,IAAA,KAAK,EAAE,GAPT;AAQE,IAAA,WAAW,EAAEI,WARf;AASE,IAAA,OAAO,EAAEM,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhDF,CADF;AA+DD,CA/RQ;AAAA,UAaQlC,IAAI,CAAC4C,OAbb;AAAA,GADX,CADF;AAmSA,eAAexB,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space } from 'antd'\nimport { inject, observer } from 'mobx-react'\nimport { orange, green, gold } from '@ant-design/colors';\nimport { TcrbButton, TcrbPopconfirm } from '../../../antd-styles/styles'\n\n\nimport SimpleModal from '../../../simple-modal'\nimport SimpleInput from '../../../simple-input'\nimport { addKeyToDataSource, checkDefaultStatus } from '../../../data-utility'\nconst { Option } = Select\nlet menuName = null\n\nconst ManageMenu =\n  inject('userAccessManagementStore')\n    (observer((props) => {\n      const [editingKey, setEditingKey] = useState('')\n      const [textOk, setTextOk] = useState(\"Submit\")\n      const [textCancel, setTextCancel] = useState(\"Cancel\")\n      const [modalString, setModalString] = useState(\"\")\n      const [modalType, setModalType] = useState('')\n      const [modalTitle, setModalTitle] = useState('')\n      const [visible, setVisible] = useState(false)\n      const [isDisableButtonAddFunction, setIsDisableButtonAddFunction] = useState(false)\n      const [showEditMenu, setShowEditMenu] = useState(false)\n      const [dataSourceFunction, setDataSourceFunction] = useState([])\n      const [isAddFunctionToMenu, setIsAddFunctionToMenu] = useState(false)\n\n      const [form] = Form.useForm();\n\n      const { userAccessManagementStore, t } = props\n      const isEditing = record => record.key === editingKey\n\n      useEffect(() => {\n        addKeyToDataSource(userAccessManagementStore.menuSelected.functions).then(result => {\n          setDataSourceFunction(result)\n        })\n      }, [])\n\n      const edit = record => {\n        form.setFieldsValue({\n          name: '',\n          status: record.status,\n          ...record,\n        });\n        setEditingKey(record.key);\n      }\n\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        return (\n          <td {...restProps}>\n            {editing ? (\n              <Form.Item\n                name={dataIndex}\n                style={{\n                  margin: 0\n                }}\n                rules={[\n                  {\n                    required: true,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        )\n      }\n      const goBackToMenuList = () => {\n        userAccessManagementStore.nextPageIsManageMenu = false\n\n      }\n\n      const addNewFunction = () => {\n        let newFunction = {\n          key: dataSourceFunction.length + 1,\n          name: ''\n        }\n        setDataSourceFunction([...dataSourceFunction, newFunction])\n        edit(newFunction)\n        setIsDisableButtonAddFunction(true)\n      }\n\n      const addFunction = () => {\n\n      }\n\n      const submitEditMenuName = () => {\n        let request = {\n          newData: {\n            name: menuName\n          },\n          currentData: userAccessManagementStore.menuSelected\n        }\n        userAccessManagementStore.updateMenu(request)\n        setShowEditMenu(false)\n      }\n\n      const FormAddNewMenu = () => {\n        return (\n          <Row>\n            <Col span={10} >\n              <span>\n                Function Name\n              </span>\n            </Col>\n            <Col span={14}>\n              {/* <SimpleInput onChange={(value) => functionName = value} /> */}\n              <Select\n                onChange={(value) => console.log(value)}\n                style={{ width: '100%' }}\n              >\n                {/* {channelPartnerList.map((item, index) => <Option key={index} value={item.partner_code}>{item.partner_code}/{item.partner_abbreviation}</Option>)} */}\n              </Select>\n            </Col>\n          </Row>\n        )\n      }\n\n      const openModalAddFunction = () => {\n        setModalTitle('Add function to Menu')\n        setModalType('confirm')\n        setIsAddFunctionToMenu(true)\n        setModalString(<FormAddNewMenu />)\n        setVisible(true)\n      }\n\n      const openModalSubmitEditMenuName = () => {\n        setModalTitle('Confirm')\n        setModalType('confirm')\n        setModalString(\n          <div style={{ textAlign: \"center\" }}>\n            <p>Confirm to Change Menu Name \"{userAccessManagementStore.menuSelected.name}\" to \"{menuName}\".</p>\n            <p style={{ color: orange[6] }}>Your changes will take effect after being approved.</p>\n          </div>\n        )\n        setVisible(true)\n      }\n\n      const cancelEditMenu = () => {\n        setShowEditMenu(false)\n      }\n\n      const submitModal = () => {\n        if (isAddFunctionToMenu == true) {\n          addFunction()\n          setVisible(false)\n          setIsAddFunctionToMenu(false)\n        } else {\n          submitEditMenuName()\n          setVisible(false)\n        }\n      }\n\n      const renderActionFunction = (record) => {\n        const editable = isEditing(record);\n        if (record.request_status === 'APPROVE') {\n          return editable ? (\n            <span>\n              <TcrbPopconfirm title=\"Sure to Save?\" onConfirm={() => submitEditFunction(record.key)}>\n                <a style={{ marginRight: 8, }}>\n                  Save\n                  </a>\n              </TcrbPopconfirm>\n              <TcrbPopconfirm title=\"Sure to cancel?\" onConfirm={() => cancelEditFunction()}>\n                <a style={{ color: '#3e3e3e' }}>Cancel</a>\n              </TcrbPopconfirm>\n            </span>\n          ) : (\n              <div style={{ textAlign: \"center\" }}>\n                <a disabled={editingKey !== ''} onClick={() => edit(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n                  Edit\n                  </a>\n                <TcrbPopconfirm title=\"Sure to Deactivate?\" onConfirm={() => deactivateFunctionSelect(record)}>\n                  <a style={{ color: '#FBA928' }}>Deactivate</a>\n                </TcrbPopconfirm>\n              </div>\n            );\n        } else if (record.request_status === 'PENDING') {\n          return null\n        } else if (record.request_status === 'REJECT') {\n          return null\n        }\n        else {\n          return null\n        }\n      }\n\n      const columnFunction = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          render: (text, record) => checkDefaultStatus(record.status, record.request_status)\n        },\n        {\n          title: 'Function Name',\n          dataIndex: 'name',\n          editable: true,\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          width: '10%',\n          render: (text, record) => renderActionFunction(record)\n        }\n      ]\n\n      const mergedColumns = columnFunction.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: 'text',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"default\" onClick={() => goBackToMenuList()}>Back</TcrbButton>\n            </Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={5}>Menu</Col>\n            <Col span={7}> {showEditMenu ?\n              <SimpleInput defaultValue={userAccessManagementStore.menuSelected.name} onChange={(value) => menuName = value} /> : userAccessManagementStore.menuSelected.name\n            }\n            </Col>\n          </Row>\n\n          <Row justify=\"center\" style={{ marginTop: 8 }}>\n            <Col span={4}>\n              {showEditMenu ?\n                <Space size={8}>\n                  <TcrbButton className=\"default\" onClick={() => { cancelEditMenu() }} >Cancel</TcrbButton>\n                  <TcrbButton className=\"primary\" onClick={() => { openModalSubmitEditMenuName() }} >Submit</TcrbButton>\n                </Space>\n                :\n                <TcrbButton className=\"primary\" onClick={() => { setShowEditMenu(true) }} >Edit</TcrbButton>}\n            </Col>\n          </Row>\n          <Divider />\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"primary\" onClick={() => openModalAddFunction()} disabled={isDisableButtonAddFunction}>Add Function</TcrbButton>\n            </Col>\n          </Row>\n          <Row>\n            <Col flex={100}>\n              <Form form={form} component={false}>\n                <Table\n                  components={{\n                    body: {\n                      cell: EditableCell,\n                    },\n                  }}\n                  bordered\n                  dataSource={dataSourceFunction}\n                  columns={mergedColumns}\n                  size=\"small\"\n                />\n              </Form>\n            </Col>\n          </Row>\n          <SimpleModal\n            title={modalTitle}\n            type={modalType}\n            onOk={() => submitModal()}\n            onCancel={() => setVisible(false)}\n            textCancel={textCancel}\n            textOk={textOk}\n            width={600}\n            modalString={modalString}\n            visible={visible}\n          />\n\n        </div>\n      )\n    }))\n\nexport default ManageMenu\n"]},"metadata":{},"sourceType":"module"}