{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _temp;\n\nimport { observable, action, toJS } from 'mobx';\nimport { CustomerServicesMenuApi } from '../services';\nimport getGeneralApiProblem from '../services/api-integrations/error-handler';\nvar CustomerServicesMenuStore = (_class = (_temp = function CustomerServicesMenuStore() {\n  _classCallCheck(this, CustomerServicesMenuStore);\n\n  _initializerDefineProperty(this, \"citizenId\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"accountId\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"accountSelected\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"apiFetching\", _descriptor4, this);\n\n  _initializerDefineProperty(this, \"searchFetching\", _descriptor5, this);\n\n  _initializerDefineProperty(this, \"accountInfo\", _descriptor6, this);\n\n  _initializerDefineProperty(this, \"arrayAccountInfo\", _descriptor7, this);\n\n  _initializerDefineProperty(this, \"accountInfoError\", _descriptor8, this);\n\n  _initializerDefineProperty(this, \"unlockOtpError\", _descriptor9, this);\n\n  _initializerDefineProperty(this, \"unlockOtpInfo\", _descriptor10, this);\n\n  _initializerDefineProperty(this, \"unbindAccountInfo\", _descriptor11, this);\n\n  _initializerDefineProperty(this, \"unbindAccountError\", _descriptor12, this);\n\n  _initializerDefineProperty(this, \"arrayUnbindAccountInfo\", _descriptor13, this);\n\n  _initializerDefineProperty(this, \"getDataAccountOtpUnlock\", _descriptor14, this);\n\n  _initializerDefineProperty(this, \"submitUnlockOTP\", _descriptor15, this);\n\n  _initializerDefineProperty(this, \"getDataAccountUnbind\", _descriptor16, this);\n\n  _initializerDefineProperty(this, \"getDataAccountProduct\", _descriptor17, this);\n\n  _initializerDefineProperty(this, \"submitAccountUnbiding\", _descriptor18, this);\n\n  _initializerDefineProperty(this, \"setCitizenId\", _descriptor19, this);\n\n  _initializerDefineProperty(this, \"setAccountId\", _descriptor20, this);\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"citizenId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"accountId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"accountSelected\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"apiFetching\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"searchFetching\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"accountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"arrayAccountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"accountInfoError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"unlockOtpError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"unlockOtpInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"unbindAccountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"unbindAccountError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"arrayUnbindAccountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"getDataAccountOtpUnlock\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(citizenId) {\n        var temp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.citizenId = {\n                  citizen_id: citizenId\n                };\n                _this.searchFetching = true;\n                _context.next = 4;\n                return CustomerServicesMenuApi.getAccountInfo(_this.citizenId);\n\n              case 4:\n                temp = _context.sent;\n                console.log(temp);\n\n                if (temp.ok && temp.status === 200) {\n                  _this.searchFetching = false;\n                  _this.accountInfo = temp.data.responseData; //waiting edit api\n                  // if (temp.responseData.data.name == 'Error') {\n                  //   this.accountInfoError = temp.data\n                  // }\n                } else {\n                  if (temp.problem == 'TIMEOUT_ERROR') {\n                    _this.customerServicesMenuStore.accountInfoError.responseData.userMessage = temp.originalError.message;\n                  } else {\n                    _this.searchFetching = false; // this.accountInfoError = JSON.parse(temp.data.body)\n\n                    _this.accountInfoError = temp.data;\n                  }\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"submitUnlockOTP\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this2$accountSelecte, main_account_no, cif, temp;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // this.accountSelected\n              _this2$accountSelecte = _this2.accountSelected, main_account_no = _this2$accountSelecte.main_account_no, cif = _this2$accountSelecte.cif;\n              _this2.apiFetching = true;\n              _context2.next = 4;\n              return CustomerServicesMenuApi.unlockOTPAccount({\n                main_account_no: main_account_no,\n                cif: cif\n              });\n\n            case 4:\n              temp = _context2.sent;\n              console.log(temp);\n\n              if (temp.ok && temp.data.statusCode === 200) {\n                _this2.apiFetching = false;\n                _this2.unlockOtpInfo = temp.data.responseData;\n              } else {\n                _this2.apiFetching = false; // this.unlockOtpError = JSON.parse(temp.data.body)\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"getDataAccountUnbind\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(accountNumber) {\n        var temp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this3.citizenId = {\n                  citizen_id: accountNumber\n                };\n                _this3.searchFetching = true;\n                _context3.next = 4;\n                return CustomerServicesMenuApi.getAccountInfoUnbinding(_this3.citizenId);\n\n              case 4:\n                temp = _context3.sent;\n                console.log(temp);\n\n                if (temp.ok && temp.status === 200) {\n                  _this3.searchFetching = false;\n                  _this3.accountInfo = temp.data.responseData;\n                } else {\n                  _this3.searchFetching = false; // let problem = getGeneralApiProblem(response)\n                  // this.accountInfoError = JSON.parse(temp.data.body)\n\n                  _this3.accountInfoError = temp.data;\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"getDataAccountProduct\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(accountNumber) {\n        var temp;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this4.apiFetching = true;\n                _context4.next = 3;\n                return CustomerServicesMenuApi.getAccountProductsInfo({\n                  main_account_no: accountNumber\n                });\n\n              case 3:\n                temp = _context4.sent;\n                console.log(temp);\n\n                if (temp.ok && temp.status === 200) {\n                  //change to status when real api\n                  _this4.apiFetching = false;\n                  _this4.unbindAccountInfo = temp.data.responseData; // this.unbindAccountInfo = temp.data.responseData // for dev\n                } else {\n                  _this4.apiFetching = false;\n                }\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"submitAccountUnbiding\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this5 = this;\n\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _this5$accountSelecte, main_account_no, sub_account_no, partner_code, temp;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this5.apiFetching = true;\n              _this5$accountSelecte = _this5.accountSelected, main_account_no = _this5$accountSelecte.main_account_no, sub_account_no = _this5$accountSelecte.sub_account_no, partner_code = _this5$accountSelecte.partner_code;\n              _context5.next = 4;\n              return CustomerServicesMenuApi.unbindAccount({\n                main_account_no: main_account_no,\n                sub_account_no: sub_account_no,\n                partner_code: partner_code\n              });\n\n            case 4:\n              temp = _context5.sent;\n\n              if (temp.ok && temp.data.statusCode === 200) {\n                _this5.apiFetching = false;\n                _this5.unlockOtpInfo = temp.data;\n              } else {\n                _this5.apiFetching = false; // this.unlockOtpError = JSON.parse(temp.data.body)\n              }\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"setCitizenId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this6 = this;\n\n    return function (id) {\n      _this6.citizenId = {\n        idCard: id\n      };\n    };\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"setAccountId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this7 = this;\n\n    return function (id) {\n      _this7.accountId = id;\n    };\n  }\n})), _class);\nexport default CustomerServicesMenuStore;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/customer-services-menu-store.js"],"names":["observable","action","toJS","CustomerServicesMenuApi","getGeneralApiProblem","CustomerServicesMenuStore","citizenId","citizen_id","searchFetching","getAccountInfo","temp","console","log","ok","status","accountInfo","data","responseData","problem","customerServicesMenuStore","accountInfoError","userMessage","originalError","message","accountSelected","main_account_no","cif","apiFetching","unlockOTPAccount","statusCode","unlockOtpInfo","accountNumber","getAccountInfoUnbinding","getAccountProductsInfo","unbindAccountInfo","sub_account_no","partner_code","unbindAccount","id","idCard","accountId"],"mappings":"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","sourcesContent":["import { observable, action, toJS } from 'mobx'\nimport { CustomerServicesMenuApi } from '../services'\nimport getGeneralApiProblem from '../services/api-integrations/error-handler'\n\nclass CustomerServicesMenuStore {\n  @observable citizenId = ''\n  @observable accountId = {}\n  @observable accountSelected = {}\n  @observable apiFetching = false\n  @observable searchFetching = false\n  @observable accountInfo = null\n  @observable arrayAccountInfo = []\n  @observable accountInfoError = {}\n  @observable unlockOtpError = []\n  @observable unlockOtpInfo = null\n  @observable unbindAccountInfo = null\n  @observable unbindAccountError = []\n  @observable arrayUnbindAccountInfo = []\n\n  @action getDataAccountOtpUnlock = async (citizenId) => {\n    this.citizenId = { citizen_id: citizenId }\n    this.searchFetching = true\n    let temp = await CustomerServicesMenuApi.getAccountInfo(this.citizenId)\n    console.log(temp)\n    if (temp.ok && temp.status === 200) {\n      this.searchFetching = false\n      this.accountInfo = temp.data.responseData\n      //waiting edit api\n      // if (temp.responseData.data.name == 'Error') {\n      //   this.accountInfoError = temp.data\n      // }\n    } else {\n      if (temp.problem == 'TIMEOUT_ERROR') {\n        this.customerServicesMenuStore.accountInfoError.responseData.userMessage = temp.originalError.message\n      } else {\n        this.searchFetching = false\n        // this.accountInfoError = JSON.parse(temp.data.body)\n        this.accountInfoError = temp.data\n      }\n\n    }\n  }\n\n  @action submitUnlockOTP = async () => {\n    // this.accountSelected\n    let { main_account_no, cif } = this.accountSelected\n    this.apiFetching = true\n    let temp = await CustomerServicesMenuApi.unlockOTPAccount({ main_account_no, cif })\n    console.log(temp)\n    if (temp.ok && temp.data.statusCode === 200) {\n      this.apiFetching = false\n      this.unlockOtpInfo = temp.data.responseData\n    } else {\n      this.apiFetching = false\n      // this.unlockOtpError = JSON.parse(temp.data.body)\n    }\n  }\n\n  @action getDataAccountUnbind = async (accountNumber) => {\n    this.citizenId = { citizen_id: accountNumber }\n    this.searchFetching = true\n    let temp = await CustomerServicesMenuApi.getAccountInfoUnbinding(this.citizenId)\n    console.log(temp)\n    if (temp.ok && temp.status === 200) {\n      this.searchFetching = false\n      this.accountInfo = temp.data.responseData\n    } else {\n      this.searchFetching = false\n      // let problem = getGeneralApiProblem(response)\n      // this.accountInfoError = JSON.parse(temp.data.body)\n      this.accountInfoError = temp.data\n\n    }\n  }\n\n  @action getDataAccountProduct = async (accountNumber) => {\n    this.apiFetching = true\n\n    let temp = await CustomerServicesMenuApi.getAccountProductsInfo({ main_account_no: accountNumber })\n    console.log(temp)\n    if (temp.ok && temp.status === 200) { //change to status when real api\n      this.apiFetching = false\n      this.unbindAccountInfo = temp.data.responseData\n      // this.unbindAccountInfo = temp.data.responseData // for dev\n    } else {\n      this.apiFetching = false\n\n    }\n  }\n\n  @action submitAccountUnbiding = async () => {\n    this.apiFetching = true\n    let { main_account_no, sub_account_no, partner_code } = this.accountSelected\n    let temp = await CustomerServicesMenuApi.unbindAccount({ main_account_no, sub_account_no, partner_code })\n    if (temp.ok && temp.data.statusCode === 200) {\n      this.apiFetching = false\n      this.unlockOtpInfo = temp.data\n    } else {\n      this.apiFetching = false\n      // this.unlockOtpError = JSON.parse(temp.data.body)\n    }\n  }\n  @action setCitizenId = (id) => {\n    this.citizenId = { idCard: id }\n  }\n  @action setAccountId = (id) => {\n    this.accountId = id\n  }\n}\nexport default CustomerServicesMenuStore\n"]},"metadata":{},"sourceType":"module"}