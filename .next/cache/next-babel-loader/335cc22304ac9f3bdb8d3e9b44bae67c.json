{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/simple-input.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Input } from 'antd';\nvar StyledInput = styled(Input).withConfig({\n  displayName: \"simple-input__StyledInput\",\n  componentId: \"sc-1ix42ps-0\"\n})([\"border-style:solid !important;border-width:0px 0px 1px 0px !important;border-color:black !important;box-shadow:none !important;border-right-style:unset !important;border-right-width:0px !important;border-radius:0px;.ant-input{text-align:right !important;}.ant-input-suffix{width:50px !important;}\", \"\"], function (_ref) {\n  var halfSize = _ref.halfSize;\n  return halfSize && \"\\n    width: 50%\\n  \";\n});\n_c = StyledInput;\n\nvar InputNumber = function InputNumber(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(InputNumber, {\n    onChange: function onChange(e) {\n      return props.onChange(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c2 = InputNumber;\n\nvar InputDefault = function InputDefault(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(StyledInput, {\n    onChange: function onChange(e) {\n      return props.onChange(e.target.value);\n    },\n    prefix: props.prefix,\n    suffix: props.suffix,\n    readOnly: props.readOnly,\n    defaultValue: props.defaultValue,\n    halfSize: props.halfSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c3 = InputDefault;\nexport default function SimpleInput(props) {\n  /* return (\n    <div>\n      <StyledInput onChange={(e) => props.onChange(e.target.value)} prefix={props.prefix} suffix={props.suffix} readOnly={props.readOnly} defaultValue={props.defaultValue} halfSize={props.halfSize} />\n    </div>\n  ) */\n  return props.isInputNumber ? InputNumber(props) : InputDefault(props);\n}\n_c4 = SimpleInput;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"InputNumber\");\n$RefreshReg$(_c3, \"InputDefault\");\n$RefreshReg$(_c4, \"SimpleInput\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/simple-input.js"],"names":["React","styled","Input","StyledInput","halfSize","InputNumber","props","e","onChange","target","value","InputDefault","prefix","suffix","readOnly","defaultValue","SimpleInput","isInputNumber"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,IAAMC,WAAW,GAAGF,MAAM,CAACC,KAAD,CAAT;AAAA;AAAA;AAAA,qTAcb;AAAA,MAAGE,QAAH,QAAGA,QAAH;AAAA,SAAkBA,QAAQ,0BAA1B;AAAA,CAda,CAAjB;KAAMD,W;;AAmBN,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOD,KAAK,CAACE,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,KAAxB,CAAP;AAAA,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAOD,CARD;;MAAML,W;;AASN,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACL,KAAD,EAAW;AAC9B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOD,KAAK,CAACE,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,KAAxB,CAAP;AAAA,KAAvB;AAA8D,IAAA,MAAM,EAAEJ,KAAK,CAACM,MAA5E;AAAoF,IAAA,MAAM,EAAEN,KAAK,CAACO,MAAlG;AAA0G,IAAA,QAAQ,EAAEP,KAAK,CAACQ,QAA1H;AAAoI,IAAA,YAAY,EAAER,KAAK,CAACS,YAAxJ;AAAsK,IAAA,QAAQ,EAAET,KAAK,CAACF,QAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD,CAPD;;MAAMO,Y;AAQN,eAAe,SAASK,WAAT,CAAqBV,KAArB,EAA4B;AACzC;;;;;AAKA,SAAOA,KAAK,CAACW,aAAN,GAAsBZ,WAAW,CAACC,KAAD,CAAjC,GAA2CK,YAAY,CAACL,KAAD,CAA9D;AACD;MAPuBU,W","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Input } from 'antd'\nconst StyledInput = styled(Input)`\n  border-style: solid !important;\n  border-width: 0px 0px 1px 0px !important;\n  border-color: black !important;\n  box-shadow: none !important;\n  border-right-style: unset !important;\n  border-right-width: 0px !important;\n  border-radius: 0px;\n  .ant-input{\n    text-align: right !important;\n  }\n  .ant-input-suffix{\n    width:50px !important;\n  }\n  ${({ halfSize }) => halfSize && `\n    width: 50%\n  `}\n`\n\nconst InputNumber = (props) => {\n  return (\n    <div>\n      <InputNumber\n        onChange={(e) => props.onChange(e.target.value)}\n      />\n    </div>\n  )\n}\nconst InputDefault = (props) => {\n  return (\n    <div>\n      <StyledInput onChange={(e) => props.onChange(e.target.value)} prefix={props.prefix} suffix={props.suffix} readOnly={props.readOnly} defaultValue={props.defaultValue} halfSize={props.halfSize} />\n\n    </div>\n  )\n}\nexport default function SimpleInput(props) {\n  /* return (\n    <div>\n      <StyledInput onChange={(e) => props.onChange(e.target.value)} prefix={props.prefix} suffix={props.suffix} readOnly={props.readOnly} defaultValue={props.defaultValue} halfSize={props.halfSize} />\n    </div>\n  ) */\n  return props.isInputNumber ? InputNumber(props) : InputDefault(props)\n}\n"]},"metadata":{},"sourceType":"module"}