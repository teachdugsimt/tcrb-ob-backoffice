{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/form-modal-user.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space } from 'antd';\nimport { TcrbModal, TcrbSpin } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport SimpleInput from '../../simple-input';\nimport tableProductReg from '../../partner-onboard/table-product-reg';\nimport { addKeyToDataSource } from '../../data-utility';\nconst {\n  Option\n} = Select;\nconst FormModalUser = inject('userAccessManagementStore')(observer(props => {\n  const {\n    0: testSupervisor,\n    1: setTestSupervisor\n  } = useState([]);\n  const {\n    0: sectionList,\n    1: setSectionLIst\n  } = useState([]); // const { userAccessManagementStore } = props\n\n  const [form] = Form.useForm();\n  const {\n    visible,\n    onCreate,\n    onCancel,\n    userAccessManagementStore\n  } = props;\n  const dateFormat = 'YYYY-MM-DD';\n  console.log(props);\n  useEffect(() => {\n    if (visible === true) {\n      setTestSupervisor([]);\n      getOptionSectionList();\n    }\n  }, [visible]);\n  /* useEffect(() => {\n    if (userAccessManagementStore.optionSectionList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.optionSectionList).then(result => {\n        setSectionLIst(result)\n      })\n    }\n  }, [userAccessManagementStore.optionSectionList]) */\n\n  const getOptionSectionList = () => {// userAccessManagementStore.getDataSectionList()\n  };\n\n  const testAddSupervisor = id => {\n    console.log('render');\n    setTestSupervisor([{\n      id: 0,\n      name: 'sup_1'\n    }, {\n      id: 1,\n      name: 'sup_2'\n    }, {\n      id: 2,\n      name: 'sup_3'\n    }, {\n      id: 3,\n      name: 'sup_4'\n    }, {\n      id: 4,\n      name: 'sup_5'\n    }]);\n  };\n\n  return __jsx(TcrbSpin, {\n    spinning: true,\n    size: \"large\",\n    tip: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(TcrbModal, {\n    visible: visible,\n    title: \"Add new User\",\n    okText: \"Submit\",\n    cancelText: \"Cancel\",\n    destroyOnClose: true,\n    forceRender: true,\n    onCancel: () => {\n      onCancel();\n      form.resetFields();\n    },\n    width: 900,\n    onOk: () => {\n      form.validateFields().then(values => {\n        form.resetFields();\n        onCreate(values);\n      }).catch(info => {\n        console.log('Validate Failed:', info);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    form: form,\n    layout: \"vertical\",\n    name: \"form_in_modal\",\n    initialValues: {\n      modifier: 'public'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    style: {\n      padding: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Employee ID\")), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"employee_code\",\n    rules: [{\n      required: true,\n      message: 'Please input Employee Id!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    style: {\n      paddingLeft: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Supervisor\")), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"supervisor_id\",\n    rules: [{\n      required: true,\n      message: 'Please input Supervisor!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Please select\",\n    onChange: value => null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, testSupervisor.map((item, index) => __jsx(Option, {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 58\n    }\n  }, item.name)))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    style: {\n      padding: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Name\")), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: 'Please input Name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    style: {\n      paddingLeft: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, \"Surname\")), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"surname\",\n    rules: [{\n      required: true,\n      message: 'Please input Surname!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  })))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    style: {\n      padding: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Username\")), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"user_name\",\n    rules: [{\n      required: true,\n      message: 'Please input Username!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    style: {\n      paddingLeft: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Email\")), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input Email!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  })))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    style: {\n      padding: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, \"Join Date\")), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"join_date\",\n    rules: [{\n      required: true,\n      message: 'Please input the title of collection!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, __jsx(DatePicker, {\n    style: {\n      width: '100%'\n    },\n    format: dateFormat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    style: {\n      paddingLeft: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, \"Last working date\")), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"last_working_date\",\n    rules: [{\n      required: true,\n      message: 'Please input the title of collection!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, __jsx(DatePicker, {\n    style: {\n      width: '100%'\n    },\n    format: dateFormat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  })))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    style: {\n      padding: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, \"Status\")), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"status\",\n    rules: [{\n      required: true,\n      message: 'Please input Status!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    style: {\n      width: '100'\n    },\n    placeholder: \"Please select\",\n    onChange: value => testAddSupervisor(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, __jsx(Option, {\n    value: \"INACTIVE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, \"INACTIVE\"), __jsx(Option, {\n    value: \"ACTIVE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, \"ACTIVE\"), __jsx(Option, {\n    value: \"SUSPEND\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, \"SUSPEND\")))), __jsx(Col, {\n    span: 4,\n    style: {\n      paddingLeft: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, \"Section\")), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    name: \"section_id\",\n    rules: [{\n      required: true,\n      message: 'Please input Section!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Please select\",\n    onChange: value => testAddSupervisor(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 19\n    }\n  }, sectionList.map((item, index) => __jsx(Option, {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 55\n    }\n  }, item.name)))))))));\n}));\nexport default FormModalUser;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/form-modal-user.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","InputNumber","Divider","Button","Modal","Drawer","Form","DatePicker","Space","TcrbModal","TcrbSpin","inject","observer","SimpleInput","tableProductReg","addKeyToDataSource","Option","FormModalUser","props","testSupervisor","setTestSupervisor","sectionList","setSectionLIst","form","useForm","visible","onCreate","onCancel","userAccessManagementStore","dateFormat","console","log","getOptionSectionList","testAddSupervisor","id","name","resetFields","validateFields","then","values","catch","info","modifier","padding","required","message","paddingLeft","width","value","map","item","index","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space } from 'antd'\nimport { TcrbModal, TcrbSpin } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react'\n\nimport SimpleInput from '../../simple-input'\nimport tableProductReg from '../../partner-onboard/table-product-reg';\nimport { addKeyToDataSource } from '../../data-utility';\nconst { Option } = Select;\n\nconst FormModalUser = inject('userAccessManagementStore')\n  (observer((props) => {\n    const [testSupervisor, setTestSupervisor] = useState([])\n    const [sectionList, setSectionLIst] = useState([])\n    // const { userAccessManagementStore } = props\n    const [form] = Form.useForm();\n    const { visible, onCreate, onCancel, userAccessManagementStore } = props\n    const dateFormat = 'YYYY-MM-DD'\n    console.log(props)\n    useEffect(() => {\n      if (visible === true) {\n        setTestSupervisor([])\n        getOptionSectionList()\n      }\n    }, [visible])\n\n    /* useEffect(() => {\n      if (userAccessManagementStore.optionSectionList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.optionSectionList).then(result => {\n          setSectionLIst(result)\n        })\n      }\n    }, [userAccessManagementStore.optionSectionList]) */\n    const getOptionSectionList = () => {\n      // userAccessManagementStore.getDataSectionList()\n    }\n    const testAddSupervisor = (id) => {\n      console.log('render')\n      setTestSupervisor([\n        { id: 0, name: 'sup_1' },\n        { id: 1, name: 'sup_2' },\n        { id: 2, name: 'sup_3' },\n        { id: 3, name: 'sup_4' },\n        { id: 4, name: 'sup_5' },\n\n      ])\n    }\n    return (\n      <TcrbSpin spinning={true} size=\"large\" tip=\"Loading...\" >\n        <TcrbModal\n          visible={visible}\n          title=\"Add new User\"\n          okText=\"Submit\"\n          cancelText=\"Cancel\"\n          destroyOnClose={true}\n          forceRender={true}\n          onCancel={() => {\n            onCancel()\n            form.resetFields();\n          }}\n          width={900}\n          onOk={() => {\n            form\n              .validateFields()\n              .then(values => {\n                form.resetFields();\n                onCreate(values);\n              })\n              .catch(info => {\n                console.log('Validate Failed:', info);\n              });\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"form_in_modal\"\n            initialValues={{\n              modifier: 'public',\n            }}\n          >\n\n            <Row >\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Employee ID\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"employee_code\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Employee Id!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Supervisor\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"supervisor_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Supervisor!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => null}\n                  >\n                    {testSupervisor.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row >\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Name\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Name!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Surname\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"surname\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Surname!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Username\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"user_name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Username!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Email\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"email\"\n                  rules={[\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input Email!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Join Date\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"join_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: '100%' }} format={dateFormat} />\n\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Last working date\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"last_working_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: '100%' }} format={dateFormat} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Status\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"status\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Status!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => testAddSupervisor(value)}\n                  >\n                    {/* {children} */}\n                    <Option value=\"INACTIVE\">INACTIVE</Option>\n                    <Option value=\"ACTIVE\">ACTIVE</Option>\n                    <Option value=\"SUSPEND\">SUSPEND</Option>\n                  </Select>\n\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Section\n          </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"section_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Section!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => testAddSupervisor(value)}\n                  >\n                    {sectionList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n                    {/* {children} */}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </TcrbModal>\n      </TcrbSpin>\n    );\n  }\n  ))\n\nexport default FormModalUser\n"]},"metadata":{},"sourceType":"module"}