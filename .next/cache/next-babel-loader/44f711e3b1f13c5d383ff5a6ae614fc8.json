{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/manage-user.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space, DatePicker } from 'antd';\nimport { DeleteOutlined, EditOutlined, FormOutlined } from '@ant-design/icons';\nimport { inject, observer } from 'mobx-react';\nimport { orange, green, gold } from '@ant-design/colors';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport SimpleInput from '../../simple-input';\nimport SimpleModal from '../../simple-modal';\nimport { addKeyToDataSource } from '../../data-utility';\nimport userAccessManagement from '..';\nimport moment from 'moment';\nimport { toJS } from 'mobx';\nvar Option = Select.Option;\nvar groupSelect = null;\nvar dataEditUserProfile = null;\nvar ManageUser = inject('userAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState(false),\n      viewEditUserDetail = _useState[0],\n      setViewEditUserDetail = _useState[1];\n\n  var _useState2 = useState(''),\n      modalTitle = _useState2[0],\n      setModalTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      modalType = _useState3[0],\n      setModalType = _useState3[1];\n\n  var _useState4 = useState(false),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState(''),\n      modalString = _useState5[0],\n      setModalString = _useState5[1];\n\n  var _useState6 = useState([]),\n      optionGroupList = _useState6[0],\n      setOptionGroupList = _useState6[1];\n\n  var _useState7 = useState([]),\n      supervisorList = _useState7[0],\n      setSupervisorList = _useState7[1];\n\n  var _useState8 = useState([]),\n      sectionList = _useState8[0],\n      setSectionList = _useState8[1];\n\n  var _useState9 = useState([]),\n      groupListInUser = _useState9[0],\n      setGroupListInUser = _useState9[1];\n\n  var dateFormat = 'YYYY-MM-DD';\n  var userAccessManagementStore = props.userAccessManagementStore;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  useEffect(function () {\n    userAccessManagementStore.getDataGroupOptionList();\n    userAccessManagementStore.getDataSectionList();\n    console.log(toJS(userAccessManagementStore.userSelected));\n    addKeyToDataSource(userAccessManagementStore.userSelected.map_user_groups).then(function (result) {\n      setGroupListInUser(result);\n    });\n  }, []);\n  useEffect(function () {\n    if (userAccessManagementStore.optionGroupList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.optionGroupList).then(function (result) {\n        setOptionGroupList(result);\n      });\n    }\n  }, [userAccessManagementStore.optionGroupList]);\n  useEffect(function () {\n    if (userAccessManagementStore.supervisorList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.supervisorList).then(function (result) {\n        setSupervisorList(result);\n      });\n    }\n  }, [userAccessManagementStore.supervisorList]);\n  useEffect(function () {\n    if (userAccessManagementStore.optionSectionList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.optionSectionList).then(function (result) {\n        setSectionList(result);\n      });\n    }\n  }, [userAccessManagementStore.optionSectionList]);\n\n  var goBackToUserList = function goBackToUserList() {\n    userAccessManagementStore.nextPageIsManageUser = false;\n  };\n\n  var getSupervisorList = function getSupervisorList(sectionId) {\n    userAccessManagementStore.getDataSupervisor(sectionId);\n  };\n\n  var deactivateGroupSelect = function deactivateGroupSelect(record) {\n    var request = {\n      user_id: userAccessManagementStore.userSelected.id,\n      group_id: record.id\n    };\n    userAccessManagementStore.submitDeleteGroupInUser(request);\n  };\n\n  var renderActionGroupInUser = function renderActionGroupInUser(record) {\n    var editable = isEditing(record);\n\n    if (record.request_status === 'APPROVE') {\n      __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        onConfirm: function onConfirm() {\n          return deactivateGroupSelect(record);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, \"Deactivate\")));\n    } else if (record.request_status === 'PENDING') {\n      return null;\n    } else if (record.request_status === 'REJECT') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  var columnGroup = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkDefaultStatus(record.status, record.request_status);\n    }\n  }, {\n    title: 'Group name',\n    dataIndex: 'group_name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Role Name',\n    dataIndex: 'role_name' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: function render(text, record) {\n      return renderActionGroupInUser(record);\n    }\n  }];\n\n  var openModalSubmitEditUserProfile = function openModalSubmitEditUserProfile(values) {\n    dataEditUserProfile = values;\n    setModalTitle('Confirm');\n    setModalType('confirm');\n    setModalString(__jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"Confirm to Change UserProfile.\"), __jsx(\"p\", {\n      style: {\n        color: orange[6]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Your changes will take effect after being approved.\")));\n    setVisible(true);\n  };\n\n  var submitEditUser = function submitEditUser() {\n    console.log(dataEditUserProfile);\n    var request = {\n      currentData: userAccessManagementStore.userSelected,\n      newData: _objectSpread(_objectSpread({}, dataEditUserProfile), {}, {\n        join_date: moment(dataEditUserProfile.join_data).format('YYYY-MM-DD'),\n        last_working_date: moment(dataEditUserProfile.last_working_date).format('YYYY-MM-DD')\n      })\n    };\n    userAccessManagementStore.updateUser(request);\n  };\n\n  var FormEditUser = function FormEditUser(_ref) {\n    var onSubmitEditUser = _ref.onSubmitEditUser;\n    return __jsx(Form, {\n      form: form,\n      layout: \"vertical\",\n      name: \"form_in_modal\",\n      initialValues: {\n        'employee_code': userAccessManagementStore.userSelected.employee_code,\n        'section_id': userAccessManagementStore.userSelected.section_id,\n        'name': userAccessManagementStore.userSelected.name,\n        'surname': userAccessManagementStore.userSelected.surname,\n        'username': userAccessManagementStore.userSelected.name,\n        'email': userAccessManagementStore.userSelected.name,\n        'join_date': moment(userAccessManagementStore.userSelected.join_date),\n        'last_working_date': moment(userAccessManagementStore.userSelected.last_working_date)\n      },\n      onFinish: function onFinish(values) {\n        onSubmitEditUser(values);\n        form.resetFields();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, \"Employee ID\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"employee_code\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.employee_code,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, \"Section\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"section_id\",\n      rules: [{\n        required: true,\n        message: 'Please input Section!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return getSupervisorList(value);\n      },\n      defaultValue: userAccessManagementStore.userSelected.section_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, sectionList.map(function (item, index) {\n      return __jsx(Option, {\n        key: index,\n        value: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 53\n        }\n      }, item.name);\n    }))))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, \"Name\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, \"Surname\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"surname\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.surname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, \"Username\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.username,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }, \"Email\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 15\n      }\n    }, \"Join Date\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"join_date\",\n      rules: [{\n        required: false,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      format: dateFormat,\n      defaultValue: moment(userAccessManagementStore.userSelected.join_date, dateFormat),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 15\n      }\n    }, \"Last working date\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"last_working_date\",\n      rules: [{\n        required: false,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 15\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      format: dateFormat,\n      defaultValue: moment(userAccessManagementStore.userSelected.last_working_date, dateFormat),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 15\n      }\n    }, \"Status\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"user_status\",\n      rules: [{\n        // required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return null;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, \"Supervisor\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"supervisor_id\",\n      rules: [{\n        // required: true,\n        message: 'Please input Supervisor!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return null;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }, supervisorList.map(function (item, index) {\n      return __jsx(Option, {\n        key: index,\n        value: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 56\n        }\n      }, item.name);\n    }))))), __jsx(Row, {\n      justify: \"end\",\n      style: {\n        marginTop: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }\n    }, __jsx(Space, {\n      size: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }\n    }, __jsx(TcrbButton, {\n      className: \"default\",\n      onClick: function onClick() {\n        setViewEditUserDetail(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 19\n      }\n    }, \"Cancel\"), __jsx(TcrbButton, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }, \"Submit\"))))));\n  };\n\n  var FormShowUser = function FormShowUser() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      gutter: [4, 24],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }\n    }, \"Employee ID\"), __jsx(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.employee_id), __jsx(Col, {\n      span: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, \"Supervisor\"), __jsx(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.supervisor)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }\n    }, \"Name\"), __jsx(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.name), __jsx(Col, {\n      span: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }\n    }, \"Surname\"), __jsx(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.surname)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 13\n      }\n    }, \"Username\"), __jsx(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.username), __jsx(Col, {\n      span: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 13\n      }\n    }, \"E-mail\"), __jsx(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.email)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 13\n      }\n    }, \"Status\"), __jsx(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.status), __jsx(Col, {\n      span: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 13\n      }\n    }, \"Section\"), __jsx(Col, {\n      span: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.section)), __jsx(Row, {\n      justify: \"end\",\n      style: {\n        marginTop: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 13\n      }\n    }, __jsx(TcrbButton, {\n      className: \"primary\",\n      onClick: function onClick() {\n        setViewEditUserDetail(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 15\n      }\n    }, \"Edit\"))));\n  };\n\n  var FormAddGroup = function FormAddGroup() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 15\n      }\n    }, \"Group\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return group = value;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 15\n      }\n    }, optionGroupList.map(function (item, index) {\n      return __jsx(Option, {\n        key: index,\n        value: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 55\n        }\n      }, item.name);\n    })))));\n  };\n\n  var addGroupToUser = function addGroupToUser() {\n    groupSelect = null;\n    setModalTitle('Add Group to User');\n    setModalType('confirm');\n    setModalString(__jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return groupSelect = value;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }\n    }, optionGroupList.map(function (item, index) {\n      return __jsx(Option, {\n        key: index,\n        value: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 49\n        }\n      }, item.name);\n    })));\n    setVisible(true);\n  };\n\n  var addGroup = function addGroup() {\n    console.log(groupSelect);\n    var request = {\n      user_id: userAccessManagementStore.userSelected.id,\n      group_id: groupSelect\n    };\n    userAccessManagementStore.submitAddGroupToUser(request);\n    setVisible(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      return goBackToUserList();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 13\n    }\n  }, \"Back\"))), viewEditUserDetail ? __jsx(FormEditUser, {\n    onSubmitEditUser: openModalSubmitEditUserProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 31\n    }\n  }) : __jsx(FormShowUser, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 100\n    }\n  }), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      return addGroupToUser();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }, \"Add Group To User\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: [],\n    columns: columnGroup,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleModal, {\n    title: modalTitle,\n    type: modalType,\n    onOk: function onOk() {\n      viewEditUserDetail ? submitEditUser() : addGroup();\n    },\n    onCancel: function onCancel() {\n      return setVisible(false);\n    },\n    textCancel: 'Cancel',\n    textOk: 'Submit',\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 9\n    }\n  }));\n}, \"pqXEAzSsI7tjGqGFUDGxgfFBTeo=\", false, function () {\n  return [Form.useForm];\n})));\nexport default ManageUser;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/manage-user.js"],"names":["React","useEffect","useState","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","Space","DatePicker","DeleteOutlined","EditOutlined","FormOutlined","inject","observer","orange","green","gold","TcrbButton","TcrbPopconfirm","SimpleInput","SimpleModal","addKeyToDataSource","userAccessManagement","moment","toJS","Option","groupSelect","dataEditUserProfile","ManageUser","props","viewEditUserDetail","setViewEditUserDetail","modalTitle","setModalTitle","modalType","setModalType","visible","setVisible","modalString","setModalString","optionGroupList","setOptionGroupList","supervisorList","setSupervisorList","sectionList","setSectionList","groupListInUser","setGroupListInUser","dateFormat","userAccessManagementStore","useForm","form","getDataGroupOptionList","getDataSectionList","console","log","userSelected","map_user_groups","then","result","length","optionSectionList","goBackToUserList","nextPageIsManageUser","getSupervisorList","sectionId","getDataSupervisor","deactivateGroupSelect","record","request","user_id","id","group_id","submitDeleteGroupInUser","renderActionGroupInUser","editable","isEditing","request_status","textAlign","color","columnGroup","title","dataIndex","width","render","text","checkDefaultStatus","status","openModalSubmitEditUserProfile","values","submitEditUser","currentData","newData","join_date","join_data","format","last_working_date","updateUser","FormEditUser","onSubmitEditUser","employee_code","section_id","name","surname","resetFields","padding","required","message","paddingLeft","value","map","item","index","username","email","marginTop","FormShowUser","employee_id","supervisor","section","FormAddGroup","group","addGroupToUser","addGroup","submitAddGroupToUser"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space, DatePicker } from 'antd'\nimport { DeleteOutlined, EditOutlined, FormOutlined } from '@ant-design/icons';\nimport { inject, observer } from 'mobx-react'\nimport { orange, green, gold } from '@ant-design/colors';\n\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport SimpleInput from '../../simple-input'\nimport SimpleModal from '../../simple-modal'\nimport { addKeyToDataSource } from '../../data-utility';\nimport userAccessManagement from '..';\nimport moment from 'moment';\nimport { toJS } from 'mobx';\n\nconst { Option } = Select;\nlet groupSelect = null\nlet dataEditUserProfile = null\nconst ManageUser = inject('userAccessManagementStore')\n  (observer((props) => {\n    const [viewEditUserDetail, setViewEditUserDetail] = useState(false)\n    const [modalTitle, setModalTitle] = useState('')\n    const [modalType, setModalType] = useState('')\n    const [visible, setVisible] = useState(false)\n    const [modalString, setModalString] = useState('')\n    const [optionGroupList, setOptionGroupList] = useState([])\n    const [supervisorList, setSupervisorList] = useState([])\n    const [sectionList, setSectionList] = useState([])\n    const [groupListInUser, setGroupListInUser] = useState([])\n    const dateFormat = 'YYYY-MM-DD'\n\n    const { userAccessManagementStore } = props\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n      userAccessManagementStore.getDataGroupOptionList()\n      userAccessManagementStore.getDataSectionList()\n      console.log(toJS(userAccessManagementStore.userSelected))\n      addKeyToDataSource(userAccessManagementStore.userSelected.map_user_groups).then(result => {\n        setGroupListInUser(result)\n      })\n\n    }, [])\n\n    useEffect(() => {\n      if (userAccessManagementStore.optionGroupList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.optionGroupList).then(result => {\n          setOptionGroupList(result)\n        })\n      }\n    }, [userAccessManagementStore.optionGroupList])\n\n    useEffect(() => {\n      if (userAccessManagementStore.supervisorList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.supervisorList).then(result => {\n          setSupervisorList(result)\n        })\n      }\n    }, [userAccessManagementStore.supervisorList])\n\n    useEffect(() => {\n      if (userAccessManagementStore.optionSectionList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.optionSectionList).then(result => {\n          setSectionList(result)\n        })\n      }\n    }, [userAccessManagementStore.optionSectionList])\n\n    const goBackToUserList = () => {\n      userAccessManagementStore.nextPageIsManageUser = false\n    }\n\n    const getSupervisorList = (sectionId) => {\n      userAccessManagementStore.getDataSupervisor(sectionId)\n    }\n\n    const deactivateGroupSelect = (record) => {\n      let request = {\n        user_id: userAccessManagementStore.userSelected.id,\n        group_id: record.id\n      }\n      userAccessManagementStore.submitDeleteGroupInUser(request)\n    }\n    const renderActionGroupInUser = (record) => {\n      const editable = isEditing(record);\n      if (record.request_status === 'APPROVE') {\n\n        <div style={{ textAlign: \"center\" }}>\n          <TcrbPopconfirm title=\"Sure to Deactivate?\" onConfirm={() => deactivateGroupSelect(record)}>\n            <a style={{ color: '#FBA928' }}>Deactivate</a>\n          </TcrbPopconfirm>\n        </div>\n\n      } else if (record.request_status === 'PENDING') {\n        return null\n      } else if (record.request_status === 'REJECT') {\n        return null\n      }\n      else {\n        return null\n      }\n    }\n    const columnGroup = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkDefaultStatus(record.status, record.request_status)\n      },\n      {\n        title: 'Group name',\n        dataIndex: 'group_name',\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Role Name',\n        dataIndex: 'role_name',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Action',\n        dataIndex: 'operation',\n        width: '10%',\n        render: (text, record) => renderActionGroupInUser(record)\n      }\n    ]\n\n    const openModalSubmitEditUserProfile = (values) => {\n      dataEditUserProfile = values\n      setModalTitle('Confirm')\n      setModalType('confirm')\n      setModalString(\n        <div style={{ textAlign: \"center\" }}>\n          <p>Confirm to Change UserProfile.</p>\n          <p style={{ color: orange[6] }}>Your changes will take effect after being approved.</p>\n        </div>\n      )\n      setVisible(true)\n    }\n\n    const submitEditUser = () => {\n      console.log(dataEditUserProfile)\n      let request = {\n        currentData: userAccessManagementStore.userSelected,\n        newData: {\n          ...dataEditUserProfile,\n          join_date: moment(dataEditUserProfile.join_data).format('YYYY-MM-DD'),\n          last_working_date: moment(dataEditUserProfile.last_working_date).format('YYYY-MM-DD')\n        }\n      }\n      userAccessManagementStore.updateUser(request)\n    }\n\n    const FormEditUser = ({ onSubmitEditUser }) => {\n      return (\n        <Form\n          form={form}\n          layout=\"vertical\"\n          name=\"form_in_modal\"\n          initialValues={{\n            'employee_code': userAccessManagementStore.userSelected.employee_code,\n            'section_id': userAccessManagementStore.userSelected.section_id,\n            'name': userAccessManagementStore.userSelected.name,\n            'surname': userAccessManagementStore.userSelected.surname,\n            'username': userAccessManagementStore.userSelected.name,\n            'email': userAccessManagementStore.userSelected.name,\n            'join_date': moment(userAccessManagementStore.userSelected.join_date),\n            'last_working_date': moment(userAccessManagementStore.userSelected.last_working_date)\n          }}\n          onFinish={(values) => {\n            onSubmitEditUser(values)\n            form.resetFields()\n          }}\n\n        >\n\n          <Row >\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Employee ID\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"employee_code\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.employee_code} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Section\n                </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"section_id\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input Section!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => getSupervisorList(value)}\n                  defaultValue={userAccessManagementStore.userSelected.section_id}\n                >\n                  {sectionList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n                  {/* {children} */}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row >\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Name\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"name\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.name} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Surname\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"surname\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.surname} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Username\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.username} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Email\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.email} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Join Date\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"join_date\"\n                rules={[\n                  {\n                    required: false,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <DatePicker style={{ width: '100%' }} format={dateFormat} defaultValue={moment(userAccessManagementStore.userSelected.join_date, dateFormat)} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Last working date\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"last_working_date\"\n                rules={[\n                  {\n                    required: false,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <DatePicker style={{ width: '100%' }} format={dateFormat} defaultValue={moment(userAccessManagementStore.userSelected.last_working_date, dateFormat)} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Status\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"user_status\"\n                rules={[\n                  {\n                    // required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => null}\n                >\n                  {/* {children} */}\n                </Select>\n\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Supervisor\n                </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"supervisor_id\"\n                rules={[\n                  {\n                    // required: true,\n                    message: 'Please input Supervisor!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => null}\n                >\n                  {supervisorList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row justify=\"end\" style={{ marginTop: 8 }}>\n\n            <Col span={4}>\n              <Form.Item>\n                <Space size={8}>\n\n                  <TcrbButton className=\"default\" onClick={() => { setViewEditUserDetail(false) }} >Cancel</TcrbButton>\n                  <TcrbButton type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </TcrbButton>\n                </Space>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      )\n    }\n\n    const FormShowUser = () => {\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Employee ID</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.employee_id}</Col>\n            <Col span={4}>Supervisor</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.supervisor}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Name</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.name}</Col>\n            <Col span={4}>Surname</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.surname}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Username</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.username}</Col>\n            <Col span={4}>E-mail</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.email}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Status</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.status}</Col>\n            <Col span={4}>Section</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.section}</Col>\n          </Row>\n          <Row justify=\"end\" style={{ marginTop: 8 }}>\n            <Col span={4}>\n              <TcrbButton className=\"primary\" onClick={() => { setViewEditUserDetail(true) }} >Edit</TcrbButton>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n    const FormAddGroup = () => {\n      return (\n        <div>\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Group</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => group = value}\n              >\n                {optionGroupList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n    const addGroupToUser = () => {\n      groupSelect = null\n      setModalTitle('Add Group to User')\n      setModalType('confirm')\n      setModalString(\n        <Select\n          style={{ width: '100%' }}\n          placeholder=\"Please select\"\n          onChange={(value) => groupSelect = value}\n        >\n          {optionGroupList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n        </Select>\n      )\n      setVisible(true)\n    }\n\n    const addGroup = () => {\n      console.log(groupSelect)\n      let request = {\n        user_id: userAccessManagementStore.userSelected.id,\n        group_id: groupSelect\n      }\n      userAccessManagementStore.submitAddGroupToUser(request)\n      setVisible(false)\n    }\n\n\n    return (\n      <div>\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"default\" onClick={() => goBackToUserList()} >Back</TcrbButton>\n          </Col>\n        </Row>\n        {viewEditUserDetail ? <FormEditUser onSubmitEditUser={openModalSubmitEditUserProfile} /> : <FormShowUser />}\n        <Divider />\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"primary\" onClick={() => addGroupToUser()} >Add Group To User</TcrbButton>\n          </Col>\n        </Row>\n        <Table\n          bordered\n          dataSource={[]}\n          columns={columnGroup}\n          size=\"small\"\n        />\n        <SimpleModal\n          title={modalTitle}\n          type={modalType}\n          onOk={() => {\n            viewEditUserDetail ? submitEditUser() : addGroup()\n          }}\n          onCancel={() => setVisible(false)}\n          textCancel={'Cancel'}\n          textOk={'Submit'}\n          width={600}\n          modalString={modalString}\n          visible={visible}\n        />\n\n      </div>\n    )\n  }))\n\nexport default ManageUser\n"]},"metadata":{},"sourceType":"module"}