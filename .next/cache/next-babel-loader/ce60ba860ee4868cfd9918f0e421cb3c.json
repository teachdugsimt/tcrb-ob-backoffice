{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/add-partner.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { withTranslation } from '../../../i18n';\nimport { inject, observer } from 'mobx-react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport SimpleModal from '../../simple-modal';\nconst {\n  Option\n} = Select;\nconst AddPartner = inject('businessParametersSetupStore')(observer(props => {\n  const {\n    businessParametersSetupStore,\n    t\n  } = props;\n  const {\n    0: channelPartnerList,\n    1: setChannelPartnerList\n  } = useState([]);\n  const {\n    0: showLimitPartner,\n    1: setShowLimitPartner\n  } = useState(false);\n  useEffect(() => {\n    businessParametersSetupStore.getDataChannelPartnerList();\n  }, []);\n  useEffect(() => {\n    if (businessParametersSetupStore.channelPartnerList.length > 1) {\n      setChannelPartnerList(businessParametersSetupStore.channelPartnerList);\n    }\n  }, [businessParametersSetupStore.channelPartnerList]);\n\n  const selectPartnerChanel = value => {\n    let productSelectObject = channelPartnerList.filter(item => item.partner_code == value);\n    setSelectPartnerAndProduct(productSelectObject[0]); //partner_code, product_code\n\n    setShowLimitPartner(true);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Channel/Partner\"), __jsx(Col, {\n    span: 6,\n    flex: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(Select, {\n    onChange: value => selectPartnerChanel(value),\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, channelPartnerList.map((item, index) => __jsx(Option, {\n    key: index,\n    value: item.partner_code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 58\n    }\n  }, item.partner_code, \"/\", item.partner_abbreviation))))), showLimitPartner ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    readOnly: false,\n    defaultValue: null,\n    prefix: 'Txn Limit',\n    onChange: e => {\n      txnLimit = e;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  })), __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    style: {\n      paddingTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, \"THB\"))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, __jsx(SimpleInput, {\n    readOnly: false,\n    defaultValue: null,\n    prefix: 'Daily Limit',\n    onChange: e => {\n      dailyLimit = e;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  })), __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    style: {\n      paddingTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, \"THB\")))) : '', __jsx(Row, {\n    justify: \"center\",\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: () => goBackProductList(),\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"Back\")), __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    shape: \"round\",\n    className: \"primary\",\n    onClick: () => {\n      prepareAllLimitToSubmitAndUpdate();\n    },\n    disabled: showLimitPartner == false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Submit\"))), __jsx(SimpleModal, {\n    title: titleModal,\n    type: modalType,\n    onOk: () => {\n      submitAddSpecificLimit();\n    },\n    onCancel: () => setVisble(false),\n    textOk: t(\"confirm\"),\n    textCancel: t(\"cancel\"),\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }));\n}));\nexport default withTranslation('common')(AddPartner);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/add-partner.js"],"names":["React","useState","useEffect","withTranslation","inject","observer","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","TcrbButton","TcrbPopconfirm","SimpleModal","Option","AddPartner","props","businessParametersSetupStore","t","channelPartnerList","setChannelPartnerList","showLimitPartner","setShowLimitPartner","getDataChannelPartnerList","length","selectPartnerChanel","value","productSelectObject","filter","item","partner_code","setSelectPartnerAndProduct","width","map","index","partner_abbreviation","e","txnLimit","paddingTop","dailyLimit","marginTop","goBackProductList","prepareAllLimitToSubmitAndUpdate","titleModal","modalType","submitAddSpecificLimit","setVisble","modalString","visible"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { withTranslation } from '../../../i18n'\nimport { inject, observer } from 'mobx-react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\n\nimport SimpleModal from '../../simple-modal'\n\nconst { Option } = Select;\n\nconst AddPartner =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const { businessParametersSetupStore, t } = props\n      const [channelPartnerList, setChannelPartnerList] = useState([])\n      const [showLimitPartner, setShowLimitPartner] = useState(false)\n\n\n\n      useEffect(() => {\n        businessParametersSetupStore.getDataChannelPartnerList()\n      }, []);\n\n      useEffect(() => {\n        if (businessParametersSetupStore.channelPartnerList.length > 1) {\n          setChannelPartnerList(businessParametersSetupStore.channelPartnerList)\n        }\n      }, [businessParametersSetupStore.channelPartnerList])\n\n      const selectPartnerChanel = (value) => {\n        let productSelectObject = channelPartnerList.filter(item => item.partner_code == value)\n        setSelectPartnerAndProduct(productSelectObject[0])\n        //partner_code, product_code\n        setShowLimitPartner(true)\n      }\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={6}>Channel/Partner</Col>\n            <Col span={6} flex={100}>\n              {/* <SimpleMenu options={optionList} onChange={(e) => { selectPartnerChanel(e) }} /> */}\n              <Select\n                onChange={(value) => selectPartnerChanel(value)}\n                style={{ width: '100%' }}\n              >\n                {channelPartnerList.map((item, index) => <Option key={index} value={item.partner_code}>{item.partner_code}/{item.partner_abbreviation}</Option>)}\n              </Select>\n            </Col>\n          </Row>\n          {(showLimitPartner) ? (\n            <div>\n              <Row>\n                <Col span={6}>\n                  <SimpleInput readOnly={false} defaultValue={null} prefix={'Txn Limit'} onChange={(e) => { txnLimit = e }} />\n                </Col>\n                <Col span={2}>\n                  <p style={{ paddingTop: 4 }}>THB</p>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={6}>\n                  <SimpleInput readOnly={false} defaultValue={null} prefix={'Daily Limit'} onChange={(e) => { dailyLimit = e }} />\n                </Col>\n                <Col span={2}>\n                  <p style={{ paddingTop: 4 }}>THB</p>\n                </Col>\n              </Row>\n\n            </div>\n          ) : ('')}\n          <Row justify=\"center\" style={{ marginTop: 8 }}>\n            <Col span={2}>\n              <TcrbButton className=\"default\" onClick={() => goBackProductList()} shape=\"round\">Back</TcrbButton>\n            </Col>\n            <Col span={2}>\n              <TcrbButton shape=\"round\" className=\"primary\" onClick={() => { prepareAllLimitToSubmitAndUpdate() }} disabled={showLimitPartner == false}>Submit</TcrbButton>\n            </Col>\n          </Row>\n          <SimpleModal\n            title={titleModal}\n            type={modalType}\n            onOk={() => { submitAddSpecificLimit() }}\n            onCancel={() => setVisble(false)}\n            textOk={t(\"confirm\")}\n            textCancel={t(\"cancel\")}\n            modalString={modalString}\n            visible={visible}\n          />\n        </div>\n      )\n    }\n    ))\nexport default withTranslation('common')(AddPartner)\n"]},"metadata":{},"sourceType":"module"}