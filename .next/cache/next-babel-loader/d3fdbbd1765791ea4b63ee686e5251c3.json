{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\n\nvar _s = $RefreshSig$(),\n    _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../i18n';\nimport SimpleModal from '../simple-modal';\nimport { BusinessParameterSetupApi } from '../../services/'; // import { qs } from 'qs'\n\nimport querystring from 'querystring';\nvar StyledInput = styled(_Input).withConfig({\n  displayName: \"otp-setup__StyledInput\",\n  componentId: \"y1xkpv-0\"\n})([\"background-color:unset !important;border:unset !important;border-bottom:1px solid black !important;box-shadow:none !important;.ant-input{text-align:center !important;background-color:unset !important;\", \"}\"], ''\n/* cursor:not-allowed !important; */\n);\n_c = StyledInput;\n\nvar useFocus = function useFocus() {\n  _s();\n\n  var htmlElRef = useRef(null);\n\n  var setFocus = function setFocus() {\n    htmlElRef.current && htmlElRef.current.focus();\n  };\n\n  return [htmlElRef, setFocus];\n};\n\n_s(useFocus, \"sPMElNktqlbGoO1DmdgDOOzWQjQ=\");\n\nvar OtpSetup = inject('businessParametersSetupStore')(observer(_s2(function (props) {\n  _s2();\n\n  var t = props.t,\n      businessParametersSetupStore = props.businessParametersSetupStore;\n\n  var _useState = useState(null),\n      expireOtp = _useState[0],\n      setExpire = _useState[1];\n\n  var _useState2 = useState(true),\n      visibleExpireEdit = _useState2[0],\n      setvisibleExpireEdit = _useState2[1];\n\n  var _useState3 = useState(false),\n      visibleExpireSubmit = _useState3[0],\n      setvisibleExpireSubmit = _useState3[1];\n\n  var _useState4 = useState(false),\n      disExpire = _useState4[0],\n      setdisExpire = _useState4[1];\n\n  var _useState5 = useState(false),\n      disExpireSubmit = _useState5[0],\n      setdisExpireSubmit = _useState5[1];\n\n  var _useState6 = useState(null),\n      maximumOtp = _useState6[0],\n      setMaximum = _useState6[1];\n\n  var _useState7 = useState(true),\n      visibleEditMaximum = _useState7[0],\n      setvisibleEditMaximum = _useState7[1];\n\n  var _useState8 = useState(false),\n      visibleSubmitMaximum = _useState8[0],\n      setvisibleSubmitMaximum = _useState8[1];\n\n  var _useState9 = useState(false),\n      disMaximum = _useState9[0],\n      setdisMaximum = _useState9[1];\n\n  var _useState10 = useState(false),\n      disMaximumSubmit = _useState10[0],\n      setdisMaximumSubmit = _useState10[1];\n\n  var _useState11 = useState(false),\n      visible = _useState11[0],\n      setVisible = _useState11[1];\n\n  var _useState12 = useState(\"\"),\n      modalString = _useState12[0],\n      setModal = _useState12[1];\n\n  var _useState13 = useState(true),\n      inputExpiration = _useState13[0],\n      setInputExpiration = _useState13[1];\n\n  var _useState14 = useState(true),\n      inputMax = _useState14[0],\n      setInputMax = _useState14[1];\n\n  var _useState15 = useState(false),\n      editExpiration = _useState15[0],\n      setEditExpiration = _useState15[1];\n\n  var _useState16 = useState(false),\n      editMaximum = _useState16[0],\n      setEditMaximum = _useState16[1]; // const [inputRef, setInputFocus] = useFocus()\n\n\n  var _useState17 = useState(\"\"),\n      title = _useState17[0],\n      setTitle = _useState17[1];\n\n  var _useState18 = useState(\"\"),\n      modalType = _useState18[0],\n      setModalType = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      textCancel = _useState19[0],\n      setTextCancel = _useState19[1];\n\n  var _useState20 = useState(\"\"),\n      textOk = _useState20[0],\n      setTextOk = _useState20[1];\n\n  useEffect(function () {\n    if (!businessParametersSetupStore.responseGetOtpValue || businessParametersSetupStore.fetchingGetOtp == null) {\n      var data = {\n        otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\"\n      };\n      businessParametersSetupStore.getOTPdata(data);\n    }\n  }, []);\n  useEffect(function () {\n    var newProps = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue));\n    console.log(\"Will Receive props : \", newProps);\n\n    if (newProps && newProps != undefined) {\n      if (!expireOtp || !maximumOtp) {\n        var tmpExpire = newProps.find(function (e) {\n          return e.Name == \"OTP_EXPIRE_TIME\";\n        });\n        var tmpMaximum = newProps.find(function (e) {\n          return e.Name == \"OTP_MAXIMUM_ENTERED\";\n        });\n        setExpire(tmpExpire.Value);\n        setMaximum(tmpMaximum.Value);\n      }\n    }\n  }, [businessParametersSetupStore.responseGetOtpValue]);\n\n  var _onClickExpiration = function _onClickExpiration() {\n    console.log(\"==edit Expiration==\");\n    setInputExpiration(false);\n    var expire = document.getElementById(\"otp-expiration-period\");\n    console.log(\"Expiration >>>\", expire);\n    expire.style.color = \"orange\";\n    expire.focus();\n    setvisibleExpireEdit(false);\n    setvisibleExpireSubmit(true);\n    setEditMaximum(true);\n  };\n\n  var _onClickMaximumRetry = function _onClickMaximumRetry() {\n    console.log(\"==edit Maximum==\");\n    setInputMax(false);\n    var maximum = document.getElementById(\"otp-maximum-retrying\");\n    console.log(\"Maximum >>>\", maximum);\n    maximum.style.color = \"orange\";\n    maximum.focus();\n    setvisibleEditMaximum(false);\n    setvisibleSubmitMaximum(true);\n    setEditExpiration(true);\n  };\n\n  var _openPopup = function _openPopup(text) {\n    setVisible(true);\n\n    if (text == \"maximum\") {\n      var a = getValueFromStore(\"maximum\");\n      console.log(a);\n      console.log(maximumOtp);\n\n      if (maximumOtp == a) {\n        setModal(\"Error: OTP Maximum is not change value \" + maximumOtp);\n        setTitle(\"Error\");\n        setModalType(\"error\");\n        setTextCancel(\"cancel\");\n      } else if (!maximumOtp) {\n        setModal(\"Error: OTP Maximum is not empty \");\n        setTitle(\"Error\");\n        setModalType(\"error\");\n        setTextCancel(\"cancel\");\n      } else {\n        setModal(__jsx(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 22\n          }\n        }, \"Confirm update OTP\", \" \", text, \" \", \"Retrying !!!\", __jsx(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 105\n          }\n        }), a, \" \", \"to\", \" \", maximumOtp));\n        setTitle(\"Confirm\");\n        setModalType(\"confirm\");\n        setTextCancel(\"cancel\");\n        setTextOk(\"confirm\");\n      }\n    } else {\n      var _a = getValueFromStore(\"expire\");\n\n      if (expireOtp == _a) {\n        setModal(\"Error: OTP Expire is not change value \" + expireOtp);\n        setTitle(\"Error\");\n        setModalType(\"error\");\n        setTextCancel(\"cancel\");\n      } else if (!expireOtp) {\n        setModal(\"Error: OTP Expire is not empty \");\n        setTitle(\"Error\");\n        setModalType(\"error\");\n        setTextCancel(\"cancel\");\n      } else {\n        setModal(__jsx(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 22\n          }\n        }, \"Confirm update OTP\", \" \", text, \" \", \"Period !!!\", __jsx(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 103\n          }\n        }), _a, \" \", \"to\", \" \", expireOtp));\n        setTitle(\"Confirm\");\n        setModalType(\"confirm\");\n        setTextCancel(\"cancel\");\n        setTextOk(\"confirm\");\n      }\n    }\n  };\n\n  var _setUnfocus = function _setUnfocus(type) {\n    if (type == \"expire\") {\n      var expire = document.getElementById(\"otp-expiration-period\");\n      expire.style.color = \"rgba(0, 0, 0, 0.65)\";\n      expire.blur();\n    } else {\n      var maximum = document.getElementById(\"otp-maximum-retrying\");\n      maximum.style.color = \"rgba(0, 0, 0, 0.65)\";\n      maximum.focus();\n    }\n  };\n\n  var _onConfirm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var a, b, data, _data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              a = getValueFromStore(\"maximum\");\n              b = getValueFromStore(\"expire\");\n\n              if (!(a != maximumOtp)) {\n                _context.next = 15;\n                break;\n              }\n\n              console.log(\"update >>>\", maximumOtp);\n              data = {\n                currentData: {\n                  OTP_MAXIMUM_ENTERED: a\n                },\n                newData: {\n                  OTP_MAXIMUM_ENTERED: maximumOtp\n                },\n                maker_id: 51\n              };\n              _context.next = 7;\n              return businessParametersSetupStore.updateOTPdata(data);\n\n            case 7:\n              setVisible(false);\n              setInputMax(true);\n              setvisibleEditMaximum(true);\n              setvisibleSubmitMaximum(false);\n              setdisMaximum(false);\n              setEditExpiration(false);\n\n              _setUnfocus(\"maximum\");\n\n              setTimeout(function () {\n                console.log(\"Success\");\n                setVisible(true);\n                setModal(__jsx(\"div\", {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 22\n                  }\n                }, \"Success update OTP\", \" \", a, \" \", \"Retrying !!!\", __jsx(\"br\", {\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 102\n                  }\n                }), a, \" \", \"to\", \" \", maximumOtp));\n              }, 3000);\n\n            case 15:\n              if (!(b != expireOtp)) {\n                _context.next = 28;\n                break;\n              }\n\n              console.log(\"update >>>\", expireOtp);\n              _data = {\n                currentData: {\n                  OTP_EXPIRE_TIME: b\n                },\n                newData: {\n                  OTP_EXPIRE_TIME: expireOtp\n                },\n                maker_id: 59\n              };\n              _context.next = 20;\n              return businessParametersSetupStore.updateOTPdata(_data);\n\n            case 20:\n              setVisible(false);\n              setInputExpiration(true);\n              setvisibleExpireEdit(true);\n              setvisibleExpireSubmit(false);\n              setEditMaximum(false);\n              setdisExpire(false);\n\n              _setUnfocus(\"expire\");\n\n              setTimeout(function () {\n                console.log(\"Success\");\n                setVisible(true);\n                setModal(__jsx(\"div\", {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 22\n                  }\n                }, \"Success update OTP\", \" \", b, \" \", \"Period !!!\", __jsx(\"br\", {\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 100\n                  }\n                }), b, \" \", \"to\", \" \", expireOtp));\n              }, 3000);\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function _onConfirm() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getValueFromStore = function getValueFromStore(type) {\n    var old_data = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue));\n    console.log(old_data);\n\n    if (type == \"expire\") {\n      var tmpExpire = old_data.find(function (e) {\n        return e.Name == \"OTP_EXPIRE_TIME\";\n      });\n      return tmpExpire.Value;\n    } else {\n      var tmpMaximum = old_data.find(function (e) {\n        return e.Name == \"OTP_MAXIMUM_ENTERED\";\n      });\n      return tmpMaximum.Value;\n    }\n  };\n\n  var _onCancel = function _onCancel() {\n    setVisible(false);\n    var a = getValueFromStore(\"maximum\");\n    var b = getValueFromStore(\"expire\");\n    setMaximum(a);\n    setInputMax(true);\n    setvisibleEditMaximum(true);\n    setvisibleSubmitMaximum(false);\n    setdisMaximum(false);\n    setEditExpiration(false); // _setUnfocus(\"maximum\")\n\n    setExpire(b);\n    setInputExpiration(true);\n    setvisibleExpireEdit(true);\n    setvisibleExpireSubmit(false);\n    setEditMaximum(false);\n    setdisExpire(false); // _setUnfocus(\"expire\")\n\n    var expire = document.getElementById(\"otp-expiration-period\");\n    var maximum = document.getElementById(\"otp-maximum-retrying\");\n    expire.style.color = \"rgba(0, 0, 0, 0.65)\";\n    expire.blur();\n    maximum.style.color = \"rgba(0, 0, 0, 0.65)\";\n    maximum.blur();\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, __jsx(_Row, {\n    gutter: [8, 8],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, __jsx(_Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    readOnly: inputMax,\n    id: \"otp-maximum-retrying\",\n    value: maximumOtp,\n    onChange: function onChange(e) {\n      return setMaximum(e.target.value);\n    },\n    prefix: t(\"otpMaximumRetrying\"),\n    suffix: t(\"otpTime\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  })), __jsx(_Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, visibleEditMaximum && __jsx(_Button, {\n    disabled: editMaximum,\n    onClick: function onClick() {\n      return _onClickMaximumRetry();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 38\n    }\n  }, t(\"edit\")), visibleSubmitMaximum && __jsx(_Button, {\n    disabled: disMaximumSubmit,\n    onClick: function onClick() {\n      return _openPopup(\"maximum\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 40\n    }\n  }, t(\"submit\")))), __jsx(_Row, {\n    gutter: [8, 8],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, __jsx(_Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    readOnly: inputExpiration\n    /*ref={inputRef}*/\n    ,\n    id: \"otp-expiration-period\",\n    value: expireOtp,\n    onChange: function onChange(e) {\n      return setExpire(e.target.value);\n    },\n    prefix: t(\"otpExpirationPeriod\"),\n    suffix: t(\"otpSecond\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  })), __jsx(_Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, visibleExpireEdit && __jsx(_Button, {\n    disabled: editExpiration,\n    onClick: function onClick() {\n      return _onClickExpiration();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 37\n    }\n  }, t(\"edit\")), visibleExpireSubmit && __jsx(_Button, {\n    disabled: disExpireSubmit\n    /*onClick={setInputFocus}*/\n    ,\n    onClick: function onClick() {\n      return _openPopup(\"expire\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 39\n    }\n  }, t(\"submit\")))), __jsx(SimpleModal, {\n    title: title,\n    type: modalType,\n    onOk: function onOk() {\n      return _onConfirm();\n    },\n    onCancel: function onCancel() {\n      return _onCancel();\n    },\n    textCancel: textCancel,\n    textOk: textOk,\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }));\n}, \"QIQWMzw6kKq8QTN76TFY2y4xfKM=\")));\nexport default withTranslation('common')(OtpSetup);\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledInput\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js"],"names":["React","useEffect","useRef","useState","styled","inject","observer","withTranslation","SimpleModal","BusinessParameterSetupApi","querystring","StyledInput","useFocus","htmlElRef","setFocus","current","focus","OtpSetup","props","t","businessParametersSetupStore","expireOtp","setExpire","visibleExpireEdit","setvisibleExpireEdit","visibleExpireSubmit","setvisibleExpireSubmit","disExpire","setdisExpire","disExpireSubmit","setdisExpireSubmit","maximumOtp","setMaximum","visibleEditMaximum","setvisibleEditMaximum","visibleSubmitMaximum","setvisibleSubmitMaximum","disMaximum","setdisMaximum","disMaximumSubmit","setdisMaximumSubmit","visible","setVisible","modalString","setModal","inputExpiration","setInputExpiration","inputMax","setInputMax","editExpiration","setEditExpiration","editMaximum","setEditMaximum","title","setTitle","modalType","setModalType","textCancel","setTextCancel","textOk","setTextOk","responseGetOtpValue","fetchingGetOtp","data","otpParamsField","getOTPdata","newProps","JSON","parse","stringify","console","log","undefined","tmpExpire","find","e","Name","tmpMaximum","Value","_onClickExpiration","expire","document","getElementById","style","color","_onClickMaximumRetry","maximum","_openPopup","text","a","getValueFromStore","textAlign","_setUnfocus","type","blur","_onConfirm","b","currentData","OTP_MAXIMUM_ENTERED","newData","maker_id","updateOTPdata","setTimeout","OTP_EXPIRE_TIME","old_data","_onCancel","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { Input, Row, Col, Button, Alert } from 'antd'\nimport styled from 'styled-components'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../i18n'\nimport SimpleModal from '../simple-modal'\nimport { BusinessParameterSetupApi } from '../../services/'\n// import { qs } from 'qs'\nimport querystring from 'querystring'\nconst StyledInput = styled(Input)`\n  background-color: unset !important;\n  border: unset !important;\n  border-bottom: 1px solid black !important;\n  box-shadow: none !important;\n  .ant-input{\n    text-align: center !important;\n    background-color: unset !important;\n    ${'' /* cursor:not-allowed !important; */}\n  }\n`\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null)\n  const setFocus = () => { htmlElRef.current && htmlElRef.current.focus() }\n  return [htmlElRef, setFocus]\n}\n\nconst OtpSetup =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const { t, businessParametersSetupStore } = props\n      const [expireOtp, setExpire] = useState(null)\n      const [visibleExpireEdit, setvisibleExpireEdit] = useState(true)\n      const [visibleExpireSubmit, setvisibleExpireSubmit] = useState(false)\n      const [disExpire, setdisExpire] = useState(false)\n      const [disExpireSubmit, setdisExpireSubmit] = useState(false)\n\n      const [maximumOtp, setMaximum] = useState(null)\n      const [visibleEditMaximum, setvisibleEditMaximum] = useState(true)\n      const [visibleSubmitMaximum, setvisibleSubmitMaximum] = useState(false)\n      const [disMaximum, setdisMaximum] = useState(false)\n      const [disMaximumSubmit, setdisMaximumSubmit] = useState(false)\n\n      const [visible, setVisible] = useState(false)\n      const [modalString, setModal] = useState(\"\")\n      const [inputExpiration, setInputExpiration] = useState(true)\n      const [inputMax, setInputMax] = useState(true)\n      const [editExpiration, setEditExpiration] = useState(false)\n      const [editMaximum, setEditMaximum] = useState(false)\n      // const [inputRef, setInputFocus] = useFocus()\n      const [title, setTitle] = useState(\"\")\n      const [modalType, setModalType] = useState(\"\")\n      const [textCancel, setTextCancel] = useState(\"\")\n      const [textOk, setTextOk] = useState(\"\")\n\n      useEffect(() => {\n\n        if (!businessParametersSetupStore.responseGetOtpValue || businessParametersSetupStore.fetchingGetOtp == null) {\n          let data = { otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\" }\n          businessParametersSetupStore.getOTPdata(data)\n        }\n      }, [])\n\n      useEffect(() => {\n\n        let newProps = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue))\n        console.log(\"Will Receive props : \", newProps)\n        if (newProps && newProps != undefined) {\n          if (!expireOtp || !maximumOtp) {\n            let tmpExpire = newProps.find(e => e.Name == \"OTP_EXPIRE_TIME\")\n            let tmpMaximum = newProps.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\")\n            setExpire(tmpExpire.Value)\n            setMaximum(tmpMaximum.Value)\n          }\n        }\n      }, [businessParametersSetupStore.responseGetOtpValue])\n\n      const _onClickExpiration = () => {\n        console.log(\"==edit Expiration==\")\n        setInputExpiration(false)\n        let expire = document.getElementById(\"otp-expiration-period\")\n        console.log(\"Expiration >>>\", expire)\n        expire.style.color = \"orange\"\n        expire.focus()\n        setvisibleExpireEdit(false)\n        setvisibleExpireSubmit(true)\n        setEditMaximum(true)\n      }\n\n      const _onClickMaximumRetry = () => {\n        console.log(\"==edit Maximum==\")\n        setInputMax(false)\n        let maximum = document.getElementById(\"otp-maximum-retrying\")\n        console.log(\"Maximum >>>\", maximum)\n        maximum.style.color = \"orange\"\n        maximum.focus()\n        setvisibleEditMaximum(false)\n        setvisibleSubmitMaximum(true)\n        setEditExpiration(true)\n      }\n\n      const _openPopup = (text) => {\n        setVisible(true)\n        if (text == \"maximum\") {\n          let a = getValueFromStore(\"maximum\")\n          console.log(a)\n          console.log(maximumOtp)\n          if (maximumOtp == a) {\n            setModal(\"Error: OTP Maximum is not change value \" + maximumOtp)\n            setTitle(\"Error\")\n            setModalType(\"error\")\n            setTextCancel(\"cancel\")\n          }\n          else if (!maximumOtp) {\n            setModal(\"Error: OTP Maximum is not empty \")\n            setTitle(\"Error\")\n            setModalType(\"error\")\n            setTextCancel(\"cancel\")\n          }\n          else {\n            setModal(<div style={{ textAlign: 'center' }}>Confirm update OTP{\" \"}{text}{\" \"}Retrying !!!<br />{a}{\" \"}to{\" \"}{maximumOtp}</div>)\n            setTitle(\"Confirm\")\n            setModalType(\"confirm\")\n            setTextCancel(\"cancel\")\n            setTextOk(\"confirm\")\n          }\n        }\n        else {\n          let a = getValueFromStore(\"expire\")\n          if (expireOtp == a) {\n            setModal(\"Error: OTP Expire is not change value \" + expireOtp)\n            setTitle(\"Error\")\n            setModalType(\"error\")\n            setTextCancel(\"cancel\")\n          }\n          else if (!expireOtp) {\n            setModal(\"Error: OTP Expire is not empty \")\n            setTitle(\"Error\")\n            setModalType(\"error\")\n            setTextCancel(\"cancel\")\n          }\n          else {\n            setModal(<div style={{ textAlign: 'center' }}>Confirm update OTP{\" \"}{text}{\" \"}Period !!!<br />{a}{\" \"}to{\" \"}{expireOtp}</div>)\n            setTitle(\"Confirm\")\n            setModalType(\"confirm\")\n            setTextCancel(\"cancel\")\n            setTextOk(\"confirm\")\n          }\n        }\n\n      }\n\n      const _setUnfocus = (type) => {\n        if (type == \"expire\") {\n          let expire = document.getElementById(\"otp-expiration-period\")\n          expire.style.color = \"rgba(0, 0, 0, 0.65)\"\n          expire.blur()\n        } else {\n          let maximum = document.getElementById(\"otp-maximum-retrying\")\n          maximum.style.color = \"rgba(0, 0, 0, 0.65)\"\n          maximum.focus()\n        }\n      }\n\n      const _onConfirm = async () => {\n        let a = getValueFromStore(\"maximum\")\n        let b = getValueFromStore(\"expire\")\n        if (a != maximumOtp) {\n          console.log(\"update >>>\", maximumOtp)\n\n          let data = {\n            currentData: {\n              OTP_MAXIMUM_ENTERED: a\n            },\n            newData: {\n              OTP_MAXIMUM_ENTERED: maximumOtp\n            },\n            maker_id: 51\n          }\n\n          await businessParametersSetupStore.updateOTPdata(data)\n\n          setVisible(false)\n          setInputMax(true)\n          setvisibleEditMaximum(true)\n          setvisibleSubmitMaximum(false)\n          setdisMaximum(false)\n          setEditExpiration(false)\n          _setUnfocus(\"maximum\")\n          setTimeout(() => {\n            console.log(\"Success\")\n            setVisible(true)\n            setModal(<div style={{ textAlign: 'center' }}>Success update OTP{\" \"}{a}{\" \"}Retrying !!!<br />{a}{\" \"}to{\" \"}{maximumOtp}</div>)\n          }, 3000);\n        }\n        if (b != expireOtp) {\n          console.log(\"update >>>\", expireOtp)\n          let data = {\n            currentData: {\n              OTP_EXPIRE_TIME: b\n            },\n            newData: {\n              OTP_EXPIRE_TIME: expireOtp\n            },\n            maker_id: 59\n          }\n\n          await businessParametersSetupStore.updateOTPdata(data)\n          setVisible(false)\n          setInputExpiration(true)\n          setvisibleExpireEdit(true)\n          setvisibleExpireSubmit(false)\n          setEditMaximum(false)\n          setdisExpire(false)\n          _setUnfocus(\"expire\")\n          setTimeout(() => {\n            console.log(\"Success\")\n            setVisible(true)\n            setModal(<div style={{ textAlign: 'center' }}>Success update OTP{\" \"}{b}{\" \"}Period !!!<br />{b}{\" \"}to{\" \"}{expireOtp}</div>)\n          }, 3000);\n        }\n      }\n\n      const getValueFromStore = (type) => {\n        let old_data = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue))\n        console.log(old_data)\n        if (type == \"expire\") {\n          let tmpExpire = old_data.find(e => e.Name == \"OTP_EXPIRE_TIME\")\n          return tmpExpire.Value\n        } else {\n          let tmpMaximum = old_data.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\")\n          return tmpMaximum.Value\n        }\n      }\n\n      const _onCancel = () => {\n        setVisible(false)\n        let a = getValueFromStore(\"maximum\")\n        let b = getValueFromStore(\"expire\")\n\n        setMaximum(a)\n        setInputMax(true)\n        setvisibleEditMaximum(true)\n        setvisibleSubmitMaximum(false)\n        setdisMaximum(false)\n        setEditExpiration(false)\n        // _setUnfocus(\"maximum\")\n\n        setExpire(b)\n        setInputExpiration(true)\n        setvisibleExpireEdit(true)\n        setvisibleExpireSubmit(false)\n        setEditMaximum(false)\n        setdisExpire(false)\n        // _setUnfocus(\"expire\")\n\n        let expire = document.getElementById(\"otp-expiration-period\")\n        let maximum = document.getElementById(\"otp-maximum-retrying\")\n        expire.style.color = \"rgba(0, 0, 0, 0.65)\"\n        expire.blur()\n        maximum.style.color = \"rgba(0, 0, 0, 0.65)\"\n        maximum.blur()\n      }\n\n      return (\n        <div>\n          <Row gutter={[8, 8]}>\n            <Col span={8}>\n              <StyledInput readOnly={inputMax} id={\"otp-maximum-retrying\"} value={maximumOtp} onChange={(e) => setMaximum(e.target.value)} prefix={t(\"otpMaximumRetrying\")} suffix={t(\"otpTime\")} />\n            </Col>\n            <Col span={6}>\n              {visibleEditMaximum && <Button disabled={editMaximum} onClick={() => _onClickMaximumRetry()}>{t(\"edit\")}</Button>}\n              {visibleSubmitMaximum && <Button disabled={disMaximumSubmit} onClick={() => _openPopup(\"maximum\")}>{t(\"submit\")}</Button>}\n            </Col>\n          </Row>\n          <Row gutter={[8, 8]}>\n            <Col span={8}>\n              <StyledInput readOnly={inputExpiration} /*ref={inputRef}*/ id={\"otp-expiration-period\"} value={expireOtp} onChange={(e) => setExpire(e.target.value)} prefix={t(\"otpExpirationPeriod\")} suffix={t(\"otpSecond\")} />\n            </Col>\n            <Col span={6}>\n              {visibleExpireEdit && <Button disabled={editExpiration} onClick={() => _onClickExpiration()} >{t(\"edit\")}</Button>}\n              {visibleExpireSubmit && <Button disabled={disExpireSubmit}/*onClick={setInputFocus}*/ onClick={() => _openPopup(\"expire\")} >{t(\"submit\")}</Button>}\n            </Col>\n          </Row>\n          <SimpleModal\n            title={title}\n            type={modalType}\n            onOk={() => _onConfirm()}\n            onCancel={() => _onCancel()}\n            textCancel={textCancel}\n            textOk={textOk}\n            modalString={modalString}\n            visible={visible}\n          />\n        </div>\n      )\n    }))\n\nexport default withTranslation('common')(OtpSetup)\n"]},"metadata":{},"sourceType":"module"}