{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport { observer, inject } from 'mobx-react';\nimport { useStores } from '../../hooks/use-stores';\nvar Header = Layout.Header,\n    Footer = Layout.Footer,\n    Sider = Layout.Sider,\n    Content = Layout.Content;\nvar stringSwitch = [{\n  accountNumber: '123123123123',\n  accountType: 'Binding to TCRB Mobile Banking',\n  accountStatus: true\n}, {\n  accountNumber: '00993445123123',\n  accountType: 'Binding to Micro Pay',\n  accountStatus: false\n}];\nvar StyledSpan = styled.span.withConfig({\n  displayName: \"otp-unlocking__StyledSpan\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.spacing.medium;\n});\n_c = StyledSpan;\nvar StyledSwitch = styled(Switch).withConfig({\n  displayName: \"otp-unlocking__StyledSwitch\",\n  componentId: \"r234ff-1\"\n})([\"\", \" .ant-switch .ant-switch-checked{background-color:red !important;}\"], ''\n/* .ant-switch-checked  {\n background-color: red !important;\n}\n.ant-switch{\n background-color: red !important;\n} */\n);\n_c2 = StyledSwitch;\nexport default function OtpUnlocking() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(''),\n      idCard = _useState[0],\n      setIdCard = _useState[1];\n\n  var _useState2 = useState(false),\n      isSearch = _useState2[0],\n      setIsSearch = _useState2[1];\n\n  var _useState3 = useState(false),\n      visible = _useState3[0],\n      setVisble = _useState3[1];\n\n  var _useState4 = useState(false),\n      isChecked = _useState4[0],\n      setIsChecked = _useState4[1];\n\n  var _useState5 = useState(''),\n      modalString = _useState5[0],\n      setModalString = _useState5[1];\n\n  var _useStores = useStores(),\n      customerServicesMenuStore = _useStores.customerServicesMenuStore;\n\n  var searchIdCardNumber = function searchIdCardNumber(value) {\n    console.log('eiei search:' + value);\n    setIdCard(value);\n    setIsSearch(true);\n  };\n\n  var hideModal = function hideModal() {\n    _this.setState({\n      visible: false\n    });\n  };\n\n  var _onChange = function onChange(value, switchSelected) {\n    console.log(\"change:\" + value);\n    console.log(JSON.stringify(switchSelected));\n\n    if (switchSelected.accountStatus === true) {\n      setVisble(true);\n      setIsChecked(true);\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, \"Unlocking OTP!!\"), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"Account Number \", switchSelected.accountNumber)));\n    } else {// setIsChecked(false)\n    }\n  };\n\n  var unlockOTP = function unlockOTP() {\n    //some action\n    setVisble(false);\n  };\n\n  var SwitchList = function SwitchList() {\n    var listItems = stringSwitch.map(function (string, index) {\n      return __jsx(Row, {\n        key: index,\n        gutter: [4, 8],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, __jsx(Col, {\n        span: 5,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, __jsx(Switch, {\n        defaultChecked: string.accountStatus,\n        onChange: function onChange(checked) {\n          return _onChange(checked, string);\n        },\n        disabled: string.accountStatus === false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }), __jsx(StyledSpan, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, string.accountNumber)), __jsx(Col, {\n        span: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, __jsx(StyledSpan, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, \" \", string.accountType)), __jsx(Col, {\n        span: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, string.accountStatus ? __jsx(StyledSpan, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 36\n        }\n      }, \"OTP is Locked\") : __jsx(StyledSpan, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 79\n        }\n      }, \"OTP is ready for using\")));\n    });\n    return __jsx(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(StyledSwitch, {\n    onChange: (checked, function (event) {\n      checked, event;\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"EiEI\")), __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: \"ID Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(Col, {\n    flex: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(SwitchList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })) : '', __jsx(SimpleModal, {\n    onOk: function onOk() {\n      return unlockOTP();\n    },\n    onCancel: function onCancel() {\n      return setVisble(false);\n    },\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(OtpUnlocking, \"A5awJyFqE3o+8S3VDdRWMZU9EAQ=\", false, function () {\n  return [useStores];\n});\n\n_c3 = OtpUnlocking;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledSpan\");\n$RefreshReg$(_c2, \"StyledSwitch\");\n$RefreshReg$(_c3, \"OtpUnlocking\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","useContext","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","observer","inject","useStores","Header","Footer","Sider","Content","stringSwitch","accountNumber","accountType","accountStatus","StyledSpan","span","theme","spacing","medium","StyledSwitch","OtpUnlocking","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","customerServicesMenuStore","searchIdCardNumber","value","console","log","hideModal","setState","onChange","switchSelected","JSON","stringify","textAlign","unlockOTP","SwitchList","listItems","map","string","index","checked","marginTop","event"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,MAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;AACA,SAASC,SAAT,QAA0B,wBAA1B;IACQC,M,GAAmCT,M,CAAnCS,M;IAAQC,M,GAA2BV,M,CAA3BU,M;IAAQC,K,GAAmBX,M,CAAnBW,K;IAAOC,O,GAAYZ,M,CAAZY,O;AAC/B,IAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,aAAa,EAAE,cAAjB;AAAiCC,EAAAA,WAAW,EAAE,gCAA9C;AAAgFC,EAAAA,aAAa,EAAE;AAA/F,CAAD,EAAwG;AAAEF,EAAAA,aAAa,EAAE,gBAAjB;AAAmCC,EAAAA,WAAW,EAAE,sBAAhD;AAAwEC,EAAAA,aAAa,EAAE;AAAvF,CAAxG,CAArB;AAGA,IAAMC,UAAU,GAAGd,MAAM,CAACe,IAAV;AAAA;AAAA;AAAA,wDAGE;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,MAA7B;AAAA,CAHF,CAAhB;KAAMJ,U;AAKN,IAAMK,YAAY,GAAGnB,MAAM,CAACD,MAAD,CAAT;AAAA;AAAA;AAAA,+EACd;AAAG;;;;;;AADW,CAAlB;MAAMoB,Y;AAaN,eAAe,SAASC,YAAT,GACV;AAAA;;AAAA;;AAAA,kBACyB7B,QAAQ,CAAC,EAAD,CADjC;AAAA,MACI8B,MADJ;AAAA,MACYC,SADZ;;AAAA,mBAE6B/B,QAAQ,CAAC,KAAD,CAFrC;AAAA,MAEIgC,QAFJ;AAAA,MAEcC,WAFd;;AAAA,mBAG0BjC,QAAQ,CAAC,KAAD,CAHlC;AAAA,MAGIkC,OAHJ;AAAA,MAGaC,SAHb;;AAAA,mBAI+BnC,QAAQ,CAAC,KAAD,CAJvC;AAAA,MAIIoC,SAJJ;AAAA,MAIeC,YAJf;;AAAA,mBAKmCrC,QAAQ,CAAC,EAAD,CAL3C;AAAA,MAKIsC,WALJ;AAAA,MAKiBC,cALjB;;AAAA,mBAMmCzB,SAAS,EAN5C;AAAA,MAMK0B,yBANL,cAMKA,yBANL;;AAOH,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBF,KAA7B;AACAX,IAAAA,SAAS,CAACW,KAAD,CAAT;AACAT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAJD;;AAOA,MAAMY,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,IAAA,KAAI,CAACC,QAAL,CAAc;AACZZ,MAAAA,OAAO,EAAE;AADG,KAAd;AAGD,GAJD;;AAKA,MAAMa,SAAQ,GAAG,SAAXA,QAAW,CAACL,KAAD,EAAQM,cAAR,EAA2B;AAC1CL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,KAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,SAAL,CAAeF,cAAf,CAAZ;;AACA,QAAIA,cAAc,CAAC1B,aAAf,KAAiC,IAArC,EAA2C;AACzCa,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,cAAc,CACZ;AAAK,QAAA,KAAK,EAAE;AAAEY,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAmBH,cAAc,CAAC5B,aAAlC,CAFF,CADY,CAAd;AAMD,KATD,MASO,CACL;AACD;AACF,GAfD;;AAgBA,MAAMgC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB;AACAjB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAIA,MAAMkB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMC,SAAS,GAAGnC,YAAY,CAACoC,GAAb,CAAiB,UAACC,MAAD,EAASC,KAAT;AAAA,aACjC,MAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,cAAc,EAAED,MAAM,CAAClC,aAA/B;AAA8C,QAAA,QAAQ,EAAE,kBAAAoC,OAAO;AAAA,iBAAIX,SAAQ,CAACW,OAAD,EAAUF,MAAV,CAAZ;AAAA,SAA/D;AAA8F,QAAA,QAAQ,EAAEA,MAAM,CAAClC,aAAP,KAAyB,KAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAakC,MAAM,CAACpC,aAApB,CAFF,CADF,EAKE,MAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAcoC,MAAM,CAACnC,WAArB,CADF,CALF,EAQE,MAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGmC,MAAM,CAAClC,aAAP,GAAwB,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAxB,GAAmE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADtE,CARF,CADiC;AAAA,KAAjB,CAAlB;AAcA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKgC,SAAL,CADF;AAGD,GAlBD;;AAmBA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,QAAQ,GAAED,OAAO,EAAE,UAAAE,KAAK,EAAI;AAAEF,MAAAA,OAAO,EAAEE,KAAT;AAAgB,KAAtC,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEnB,kBAAtB;AAA0C,IAAA,aAAa,EAAC,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOIT,QAAD,GAEC,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFD,GAKI,EAZP,EAaE,MAAC,WAAD;AACE,IAAA,IAAI,EAAE;AAAA,aAAMoB,SAAS,EAAf;AAAA,KADR;AAEE,IAAA,QAAQ,EAAE;AAAA,aAAMjB,SAAS,CAAC,KAAD,CAAf;AAAA,KAFZ;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,WAAW,EAAEG,WALf;AAME,IAAA,OAAO,EAAEJ,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAwBD;;GAnFuBL,Y;UAOgBf,S;;;MAPhBe,Y","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport { observer, inject } from 'mobx-react';\nimport { useStores } from '../../hooks/use-stores'\nconst { Header, Footer, Sider, Content } = Layout;\nconst stringSwitch = [{ accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true }, { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }]\n\n\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n  ${'' /* .ant-switch-checked  {\n        background-color: red !important;\n      }\n      .ant-switch{\n        background-color: red !important;\n      } */}\n\n      .ant-switch .ant-switch-checked{\n      background-color: red !important;}\n\n`\n\nexport default function OtpUnlocking\n  () {\n  const [idCard, setIdCard] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const { customerServicesMenuStore } = useStores()\n  const searchIdCardNumber = (value) => {\n    console.log('eiei search:' + value)\n    setIdCard(value)\n    setIsSearch(true)\n  }\n\n\n  const hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  const onChange = (value, switchSelected) => {\n    console.log(\"change:\" + value)\n    console.log(JSON.stringify(switchSelected))\n    if (switchSelected.accountStatus === true) {\n      setVisble(true)\n      setIsChecked(true)\n      setModalString(\n        <div style={{ textAlign: \"center\" }}>\n          <p>Unlocking OTP!!</p>\n          <p>Account Number {switchSelected.accountNumber}</p>\n        </div>\n      )\n    } else {\n      // setIsChecked(false)\n    }\n  }\n  const unlockOTP = () => {\n    //some action\n    setVisble(false)\n  }\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) =>\n      <Row key={index} gutter={[4, 8]}>\n        <Col span={5}>\n          <Switch defaultChecked={string.accountStatus} onChange={checked => onChange(checked, string)} disabled={string.accountStatus === false} />\n          <StyledSpan>{string.accountNumber}</StyledSpan>\n        </Col>\n        <Col span={6}>\n          <StyledSpan> {string.accountType}</StyledSpan>\n        </Col>\n        <Col span={4}>\n          {string.accountStatus ? (<StyledSpan>OTP is Locked</StyledSpan>) : (<StyledSpan>OTP is ready for using</StyledSpan>)}\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  return (\n    <div style={{ marginTop: 20 }}>\n      <Row gutter={[4, 24]}>\n        <StyledSwitch onChange={checked, event => { checked, event }}>EiEI</StyledSwitch>\n      </Row>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (\n\n        <Col flex={100}>\n          <SwitchList />\n        </Col>\n      ) : ('')}\n      <SimpleModal\n        onOk={() => unlockOTP()}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}