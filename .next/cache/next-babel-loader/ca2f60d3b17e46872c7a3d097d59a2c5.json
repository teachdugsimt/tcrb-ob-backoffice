{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/table-columns.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { addCommaInData } from '../data-utility';\n\nconst renderStatus = record => {\n  if (record.status === '1') {\n    return __jsx(\"p\", {\n      style: {\n        color: green[6]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4,\n        columnNumber: 12\n      }\n    }, \"Active\");\n  } else if (record.status === '2') {\n    return __jsx(\"p\", {\n      style: {\n        color: gold[6]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 12\n      }\n    }, \"Pending\");\n  } else {\n    return null;\n  }\n};\n\nexport const columnPartnerList = [{\n  title: 'No.',\n  dataIndex: 'no'\n}, {\n  title: 'Channel',\n  dataIndex: 'channel'\n}, {\n  title: 'Txn Limit',\n  dataIndex: 'txn_limit'\n}, {\n  title: 'Daily Limit',\n  dataIndex: 'daily_limit',\n  render: (text, record) => addCommaInData(text, true)\n}, {\n  title: 'Action',\n  dataIndex: 'operation'\n}];\nexport const columnProductList = renderActionAddDeleteHandler => {\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    });\n  });\n  const columns = [{\n    dataIndex: 'operation',\n    render: (text, record, index) => renderStatus(record, index)\n  }, {\n    title: 'Product_Code',\n    dataIndex: 'product_type',\n    width: '5%',\n    editable: true,\n    render: (text, record) => addCommaInData(text)\n  }, {\n    title: 'Product_Description',\n    dataIndex: 'product_description',\n    editable: true,\n    render: (text, record) => addCommaInData(text)\n  }, {\n    title: 'All-Channel Txn Limit',\n    dataIndex: 'transaction_limit',\n    editable: true,\n    render: (text, record) => addCommaInData(text, true)\n  }, {\n    title: 'All-Channel Daily Limit',\n    dataIndex: 'daily_limit',\n    editable: true,\n    render: (text, record) => addCommaInData(text, true)\n  }, {\n    title: 'Specific Channel Limit',\n    dataIndex: 'Specific',\n    // editable: true,\n    render: (text, record) => addCommaInData(text)\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    render: (text, record, index) => renderActionAddDeleteHandler(record, index)\n  }];\n  return mergedColumns;\n};","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/table-columns.js"],"names":["addCommaInData","renderStatus","record","status","color","green","gold","columnPartnerList","title","dataIndex","render","text","columnProductList","renderActionAddDeleteHandler","mergedColumns","columns","map","col","editable","onCell","inputType","editing","isEditing","index","width"],"mappings":"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","sourcesContent":["import { addCommaInData } from '../data-utility'\nconst renderStatus = (record) => {\n  if (record.status === '1') {\n    return <p style={{ color: green[6] }}>Active</p>\n  } else if (record.status === '2') {\n    return <p style={{ color: gold[6] }}>Pending</p>\n  } else {\n    return null\n  }\n}\n\nexport const columnPartnerList = [\n  {\n    title: 'No.',\n    dataIndex: 'no',\n  },\n  {\n    title: 'Channel',\n    dataIndex: 'channel',\n  },\n  {\n    title: 'Txn Limit',\n    dataIndex: 'txn_limit',\n  },\n  {\n    title: 'Daily Limit',\n    dataIndex: 'daily_limit',\n    render: (text, record) => addCommaInData(text, true)\n  },\n  {\n    title: 'Action',\n    dataIndex: 'operation',\n  },\n]\n\nexport const columnProductList = (renderActionAddDeleteHandler) => {\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n  const columns = [\n    {\n      dataIndex: 'operation',\n      render: (text, record, index) =>\n        renderStatus(record, index)\n    },\n    {\n      title: 'Product_Code',\n      dataIndex: 'product_type',\n      width: '5%',\n      editable: true,\n      render: (text, record) => addCommaInData(text)\n    },\n    {\n      title: 'Product_Description',\n      dataIndex: 'product_description',\n      editable: true,\n      render: (text, record) => addCommaInData(text)\n    },\n    {\n      title: 'All-Channel Txn Limit',\n      dataIndex: 'transaction_limit',\n      editable: true,\n      render: (text, record) => addCommaInData(text, true)\n    },\n    {\n      title: 'All-Channel Daily Limit',\n      dataIndex: 'daily_limit',\n      editable: true,\n      render: (text, record) => addCommaInData(text, true)\n    },\n    {\n      title: 'Specific Channel Limit',\n      dataIndex: 'Specific',\n      // editable: true,\n      render: (text, record) => addCommaInData(text)\n    },\n    {\n      title: 'Action',\n      dataIndex: 'operation',\n      render: (text, record, index) =>\n        renderActionAddDeleteHandler(record, index)\n    },\n  ];\n  return mergedColumns\n}\n\n\n"]},"metadata":{},"sourceType":"module"}