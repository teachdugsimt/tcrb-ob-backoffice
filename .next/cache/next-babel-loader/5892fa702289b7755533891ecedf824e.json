{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport SimpleSearch from '../simple-search';\nimport SimpleSwitch from '../simple-switch';\nimport styled from 'styled-components';\nimport { Row, Switch, Col, Button, Input, Alert } from 'antd';\nimport SimpleModal from '../simple-modal';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { withTranslation } from '../../i18n';\nimport { TcrbSwitch } from '../antd-styles/styles';\nconst StyledA = styled.a.withConfig({\n  displayName: \"account-unbinding__StyledA\",\n  componentId: \"sc-1wve73-0\"\n})([\"display:initial;padding-right:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledP = styled.p.withConfig({\n  displayName: \"account-unbinding__StyledP\",\n  componentId: \"sc-1wve73-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"account-unbinding__StyledSpan\",\n  componentId: \"sc-1wve73-2\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledInput = styled(Input).withConfig({\n  displayName: \"account-unbinding__StyledInput\",\n  componentId: \"sc-1wve73-3\"\n})([\"\", \"\"], ({\n  readOnly\n}) => readOnly && `\n          border-style: solid !important;\n          border-width: 0px 0px 1px 0px !important;\n          border-color: black !important;\n          box-shadow: none !important;\n          border-right-style: unset !important;\n          border-right-width: 0px !important\n      `);\nconst AccountUnbinding = inject('customerServicesMenuStore')(observer(props => {\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: viewDetail,\n    1: setViewDetail\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: accountId,\n    1: setAccountId\n  } = useState('');\n  const mockData = [{\n    accountName: 'Binding to TCRB Mobile Banking',\n    accountBindingStatus: true,\n    accountType: '1',\n    main_account_no: '22223425566'\n  }, {\n    accountName: 'Binding to Micro Pay',\n    accountBindingStatus: true,\n    accountType: '2',\n    main_account_no: '554432268776'\n  }, {\n    accountName: 'Binding to True Money Wallet',\n    accountBindingStatus: true,\n    accountType: '3',\n    main_account_no: '11445677543'\n  }];\n  const {\n    0: stringAccount,\n    1: setStringAccount\n  } = useState([]);\n  const {\n    0: stringSwitch,\n    1: setStringSwitch\n  } = useState([]);\n  const {\n    customerServicesMenuStore,\n    t\n  } = props;\n  useEffect(() => {\n    if (isSearch) {\n      setStringAccount(customerServicesMenuStore.accountInfo);\n    }\n  }, [customerServicesMenuStore.accountInfo]);\n  useEffect(() => {\n    customerServicesMenuStore.accountInfoError = null;\n  }, []);\n  useEffect(() => {\n    if (isSearch) {\n      if (customerServicesMenuStore.unbindAccountInfo) {\n        console.log(toJS(customerServicesMenuStore.unbindAccountInfo));\n        convertArrayObjectToArray(toJS(customerServicesMenuStore.unbindAccountInfo)).then(result => {\n          console.log(result);\n          customerServicesMenuStore.arrayUnbindAccountInfo = result;\n          setStringSwitch(result);\n        });\n      }\n    }\n  }, [customerServicesMenuStore.unbindAccountInfo]);\n\n  const searchIdCardNumber = async value => {\n    setIsSearch(true);\n    await customerServicesMenuStore.getDataAccountUnbind(value);\n  };\n\n  const backSearch = async () => {\n    setViewDetail(false);\n    setIsSearch(false);\n    setStringAccount([]);\n  };\n\n  const convertArrayObjectToArray = arrayObject => {\n    console.log(arrayObject);\n    return new Promise((resolve, reject) => {\n      if (Array.isArray(arrayObject)) {\n        let result = arrayObject.map(accountDetail => [accountDetail.binding_status == '1' ? true : false, accountDetail.partner_name_english]);\n        resolve(result);\n      } else {\n        resolve([]);\n      }\n    });\n  };\n\n  const selectAccount = async selectedAccount => {\n    console.log(toJS(selectedAccount));\n    customerServicesMenuStore.setAccountId(selectedAccount.main_account_no);\n    await customerServicesMenuStore.getDataPartnerInfo(selectedAccount.main_account_no);\n    setViewDetail(true);\n  };\n\n  const onChange = (switchSelected, index) => {\n    console.log(\"indexOf :\" + index, switchSelected);\n    console.log(toJS(customerServicesMenuStore.unbindAccountInfo[index]));\n    let accountSelected = customerServicesMenuStore.unbindAccountInfo[index];\n    customerServicesMenuStore.accountSelected = accountSelected;\n\n    if (switchSelected === true) {\n      setVisble(true);\n\n      switch (accountSelected.partner_code) {\n        case \"TMDS\":\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }\n          }, t(\"unbinding\")), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }\n          }, \" \", t(\"account\") + \" \" + accountSelected.main_account_no, \" from Micro Pay\")));\n          break;\n      }\n    } else {}\n  };\n\n  const unBindingAccount = async () => {\n    setVisble(false); // call api\n\n    await customerServicesMenuStore.submitAccountUnbiding();\n  };\n\n  const AccountList = () => {\n    const listItems = stringAccount.map((string, index) => {\n      let product_name = string.products.map(e => e.product_name_english);\n      return __jsx(Row, {\n        key: index,\n        gutter: [4, 24],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, __jsx(Col, {\n        span: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, __jsx(StyledA, {\n        onClick: () => {\n          selectAccount(string);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, string.main_account_no), __jsx(StyledSpan, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, product_name.join(' ' + ',' + ' '))));\n    });\n    return __jsx(\"ul\", {\n      style: {\n        paddingInlineStart: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, listItems);\n  };\n\n  const newSearch = () => {\n    console.log(customerServicesMenuStore.accountInfoError);\n    return __jsx(\"div\", {\n      style: {\n        margin: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, __jsx(SimpleSearch, {\n      search: searchIdCardNumber,\n      prefixWording: t(\"idCard\"),\n      loading: customerServicesMenuStore.searchFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    })), __jsx(Row, {\n      gutter: [16, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, customerServicesMenuStore.accountInfoError && __jsx(Alert, {\n      message: customerServicesMenuStore.accountInfoError,\n      description: '',\n      type: \"error\",\n      closable: true,\n      onClose: () => customerServicesMenuStore.accountInfoError = null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 66\n      }\n    })))), isSearch ? __jsx(AccountList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }) : '');\n  };\n\n  const accountDetail = __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    align: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    readOnly: true,\n    prefix: t('accountNumber'),\n    defaultValue: customerServicesMenuStore.accountId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }))), __jsx(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, customerServicesMenuStore.accountInfoError && __jsx(Alert, {\n    message: customerServicesMenuStore.accountInfoError,\n    description: '',\n    type: \"error\",\n    closable: true,\n    onClose: () => customerServicesMenuStore.accountInfoError = null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 64\n    }\n  })))), __jsx(Row, {\n    gutter: [4, 24],\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, __jsx(SimpleSwitch, {\n    data: stringSwitch,\n    onChange: (switchSelected, index) => onChange(switchSelected, index),\n    isBinding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }), __jsx(SimpleModal, {\n    type: \"confirm\",\n    onOk: () => unBindingAccount(),\n    onCancel: () => setVisble(false),\n    textCancel: 'Cancel',\n    textOk: 'Confrim',\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    gutter: [4, 24],\n    align: \"bottom\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    shape: \"round\",\n    onClick: () => backSearch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, \"Back\"))));\n\n  return viewDetail ? accountDetail : newSearch();\n}));\nexport default withTranslation('common')(AccountUnbinding);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js"],"names":["React","useState","useEffect","SimpleSearch","SimpleSwitch","styled","Row","Switch","Col","Button","Input","Alert","SimpleModal","inject","observer","toJS","withTranslation","TcrbSwitch","StyledA","a","theme","spacing","medium","StyledP","p","StyledSpan","span","StyledInput","readOnly","AccountUnbinding","props","isSearch","setIsSearch","viewDetail","setViewDetail","visible","setVisble","modalString","setModalString","accountId","setAccountId","mockData","accountName","accountBindingStatus","accountType","main_account_no","stringAccount","setStringAccount","stringSwitch","setStringSwitch","customerServicesMenuStore","t","accountInfo","accountInfoError","unbindAccountInfo","console","log","convertArrayObjectToArray","then","result","arrayUnbindAccountInfo","searchIdCardNumber","value","getDataAccountUnbind","backSearch","arrayObject","Promise","resolve","reject","Array","isArray","map","accountDetail","binding_status","partner_name_english","selectAccount","selectedAccount","getDataPartnerInfo","onChange","switchSelected","index","accountSelected","partner_code","textAlign","unBindingAccount","submitAccountUnbiding","AccountList","listItems","string","product_name","products","e","product_name_english","join","paddingInlineStart","newSearch","margin","searchFetching"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,KAA1C,QAAuD,MAAvD;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,MAAMC,OAAO,GAAGb,MAAM,CAACc,CAAV;AAAA;AAAA;AAAA,+IAEM,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAN,CAAcC,MAFnC,CAAb;AAOA,MAAMC,OAAO,GAAGlB,MAAM,CAACmB,CAAV;AAAA;AAAA;AAAA,wDAEK,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAN,CAAcC,MAFlC,CAAb;AAIA,MAAMG,UAAU,GAAGpB,MAAM,CAACqB,IAAV;AAAA;AAAA;AAAA,wDAGE,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAN,CAAcC,MAH/B,CAAhB;AAKA,MAAMK,WAAW,GAAGtB,MAAM,CAACK,KAAD,CAAT;AAAA;AAAA;AAAA,aACT,CAAC;AAAEkB,EAAAA;AAAF,CAAD,KAAkBA,QAAQ,IAAK;;;;;;;OADtB,CAAjB;AAUA,MAAMC,gBAAgB,GACpBhB,MAAM,CAAC,2BAAD,CAAN,CACGC,QAAQ,CAAEgB,KAAD,IAAW;AACnB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0B/B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACgC,UAAD;AAAA,OAAaC;AAAb,MAA8BjC,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACkC,OAAD;AAAA,OAAUC;AAAV,MAAuBnC,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM;AAAA,OAACoC,WAAD;AAAA,OAAcC;AAAd,MAAgCrC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACsC,SAAD;AAAA,OAAYC;AAAZ,MAA4BvC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMwC,QAAQ,GAAG,CAAC;AAAEC,IAAAA,WAAW,EAAE,gCAAf;AAAiDC,IAAAA,oBAAoB,EAAE,IAAvE;AAA6EC,IAAAA,WAAW,EAAE,GAA1F;AAA+FC,IAAAA,eAAe,EAAE;AAAhH,GAAD,EAAkI;AAAEH,IAAAA,WAAW,EAAE,sBAAf;AAAuCC,IAAAA,oBAAoB,EAAE,IAA7D;AAAmEC,IAAAA,WAAW,EAAE,GAAhF;AAAqFC,IAAAA,eAAe,EAAE;AAAtG,GAAlI,EAA0P;AAAEH,IAAAA,WAAW,EAAE,8BAAf;AAA+CC,IAAAA,oBAAoB,EAAE,IAArE;AAA2EC,IAAAA,WAAW,EAAE,GAAxF;AAA6FC,IAAAA,eAAe,EAAE;AAA9G,GAA1P,CAAjB;AACA,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoC9C,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAAC+C,YAAD;AAAA,OAAeC;AAAf,MAAkChD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAEiD,IAAAA,yBAAF;AAA6BC,IAAAA;AAA7B,MAAmCrB,KAAzC;AAEA5B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,QAAJ,EAAc;AACZgB,MAAAA,gBAAgB,CAACG,yBAAyB,CAACE,WAA3B,CAAhB;AACD;AACF,GAJQ,EAIN,CAACF,yBAAyB,CAACE,WAA3B,CAJM,CAAT;AAMAlD,EAAAA,SAAS,CAAC,MAAM;AACdgD,IAAAA,yBAAyB,CAACG,gBAA1B,GAA6C,IAA7C;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAnD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,QAAJ,EAAc;AACZ,UAAImB,yBAAyB,CAACI,iBAA9B,EAAiD;AAC/CC,QAAAA,OAAO,CAACC,GAAR,CAAYzC,IAAI,CAACmC,yBAAyB,CAACI,iBAA3B,CAAhB;AACAG,QAAAA,yBAAyB,CAAC1C,IAAI,CAACmC,yBAAyB,CAACI,iBAA3B,CAAL,CAAzB,CAA6EI,IAA7E,CAAkFC,MAAM,IAAI;AAC1FJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACAT,UAAAA,yBAAyB,CAACU,sBAA1B,GAAmDD,MAAnD;AACAV,UAAAA,eAAe,CAACU,MAAD,CAAf;AACD,SAJD;AAKD;AACF;AACF,GAXQ,EAWN,CAACT,yBAAyB,CAACI,iBAA3B,CAXM,CAAT;;AAaA,QAAMO,kBAAkB,GAAG,MAAOC,KAAP,IAAiB;AAC1C9B,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,UAAMkB,yBAAyB,CAACa,oBAA1B,CAA+CD,KAA/C,CAAN;AAED,GAJD;;AAMA,QAAME,UAAU,GAAG,YAAY;AAC7B9B,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAe,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAJD;;AAMA,QAAMU,yBAAyB,GAAIQ,WAAD,IAAiB;AACjDV,IAAAA,OAAO,CAACC,GAAR,CAAYS,WAAZ;AACA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAIC,KAAK,CAACC,OAAN,CAAcL,WAAd,CAAJ,EAAgC;AAC9B,YAAIN,MAAM,GAAGM,WAAW,CAACM,GAAZ,CAAgBC,aAAa,IACxC,CAAEA,aAAa,CAACC,cAAd,IAAgC,GAAjC,GAAwC,IAAxC,GAA+C,KAAhD,EAAuDD,aAAa,CAACE,oBAArE,CADW,CAAb;AAEAP,QAAAA,OAAO,CAACR,MAAD,CAAP;AACD,OAJD,MAIO;AACLQ,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,KARM,CAAP;AAUD,GAZD;;AAcA,QAAMQ,aAAa,GAAG,MAAOC,eAAP,IAA2B;AAC/CrB,IAAAA,OAAO,CAACC,GAAR,CAAYzC,IAAI,CAAC6D,eAAD,CAAhB;AACA1B,IAAAA,yBAAyB,CAACV,YAA1B,CAAuCoC,eAAe,CAAC/B,eAAvD;AACA,UAAMK,yBAAyB,CAAC2B,kBAA1B,CAA6CD,eAAe,CAAC/B,eAA7D,CAAN;AACAX,IAAAA,aAAa,CAAC,IAAD,CAAb;AAED,GAND;;AAOA,QAAM4C,QAAQ,GAAG,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAC1CzB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcwB,KAA1B,EAAiCD,cAAjC;AACAxB,IAAAA,OAAO,CAACC,GAAR,CAAYzC,IAAI,CAACmC,yBAAyB,CAACI,iBAA1B,CAA4C0B,KAA5C,CAAD,CAAhB;AACA,QAAIC,eAAe,GAAG/B,yBAAyB,CAACI,iBAA1B,CAA4C0B,KAA5C,CAAtB;AACA9B,IAAAA,yBAAyB,CAAC+B,eAA1B,GAA4CA,eAA5C;;AACA,QAAIF,cAAc,KAAK,IAAvB,EAA6B;AAC3B3C,MAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,cAAQ6C,eAAe,CAACC,YAAxB;AACE,aAAK,MAAL;AACE5C,UAAAA,cAAc,CACZ;AAAK,YAAA,KAAK,EAAE;AAAE6C,cAAAA,SAAS,EAAE;AAAb,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIhC,CAAC,CAAC,WAAD,CAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAKA,CAAC,CAAC,SAAD,CAAD,GAAe,GAAf,GAAqB8B,eAAe,CAACpC,eAA1C,oBAFF,CADY,CAAd;AAMA;AARJ;AAUD,KAZD,MAYO,CACN;AACF,GAnBD;;AAqBA,QAAMuC,gBAAgB,GAAG,YAAY;AACnChD,IAAAA,SAAS,CAAC,KAAD,CAAT,CADmC,CAEnC;;AACA,UAAMc,yBAAyB,CAACmC,qBAA1B,EAAN;AACD,GAJD;;AAOA,QAAMC,WAAW,GAAG,MAAM;AAExB,UAAMC,SAAS,GAAGzC,aAAa,CAACyB,GAAd,CAAkB,CAACiB,MAAD,EAASR,KAAT,KAAmB;AACrD,UAAIS,YAAY,GAAGD,MAAM,CAACE,QAAP,CAAgBnB,GAAhB,CAAoBoB,CAAC,IAAIA,CAAC,CAACC,oBAA3B,CAAnB;AACA,aACE,MAAC,GAAD;AAAK,QAAA,GAAG,EAAEZ,KAAV;AAAiB,QAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,OAAO,EAAE,MAAM;AAAEL,UAAAA,aAAa,CAACa,MAAD,CAAb;AAAuB,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoDA,MAAM,CAAC3C,eAA3D,CADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa4C,YAAY,CAACI,IAAb,CAAkB,MAAM,GAAN,GAAY,GAA9B,CAAb,CAFF,CADF,CADF;AAQD,KAViB,CAAlB;AAYA,WACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,kBAAkB,EAAE;AAAtB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCP,SAAvC,CADF;AAGD,GAjBD;;AAkBA,QAAMQ,SAAS,GAAG,MAAM;AACtBxC,IAAAA,OAAO,CAACC,GAAR,CAAYN,yBAAyB,CAACG,gBAAtC;AAEA,WACE;AAAK,MAAA,KAAK,EAAE;AAAE2C,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAc,MAAA,MAAM,EAAEnC,kBAAtB;AAA0C,MAAA,aAAa,EAAEV,CAAC,CAAC,QAAD,CAA1D;AAAsE,MAAA,OAAO,EAAED,yBAAyB,CAAC+C,cAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,MAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG/C,yBAAyB,CAACG,gBAA1B,IAA8C,MAAC,KAAD;AAC7C,MAAA,OAAO,EAAEH,yBAAyB,CAACG,gBADU;AAE7C,MAAA,WAAW,EAAE,EAFgC;AAG7C,MAAA,IAAI,EAAC,OAHwC;AAI7C,MAAA,QAAQ,MAJqC;AAK7C,MAAA,OAAO,EAAE,MAAMH,yBAAyB,CAACG,gBAA1B,GAA6C,IALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjD,CADF,CADF,CAJF,EAkBItB,QAAD,GACC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEI,EApBP,CADF;AAuBD,GA1BD;;AA4BA,QAAMyC,aAAa,GACjB;AAAK,IAAA,KAAK,EAAE;AAAEwB,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAsB,IAAA,KAAK,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAE,IAAvB;AAA6B,IAAA,MAAM,EAAE7C,CAAC,CAAC,eAAD,CAAtC;AAAyD,IAAA,YAAY,EAAED,yBAAyB,CAACX,SAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,EAOE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,yBAAyB,CAACG,gBAA1B,IAA8C,MAAC,KAAD;AAC7C,IAAA,OAAO,EAAEH,yBAAyB,CAACG,gBADU;AAE7C,IAAA,WAAW,EAAE,EAFgC;AAG7C,IAAA,IAAI,EAAC,OAHwC;AAI7C,IAAA,QAAQ,MAJqC;AAK7C,IAAA,OAAO,EAAE,MAAMH,yBAAyB,CAACG,gBAA1B,GAA6C,IALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjD,CADF,CADF,CAPF,EAsBE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAsB,IAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,IAAI,EAAEL,YADR;AAEE,IAAA,QAAQ,EAAE,CAAC+B,cAAD,EAAiBC,KAAjB,KAA2BF,QAAQ,CAACC,cAAD,EAAiBC,KAAjB,CAF/C;AAGE,IAAA,SAAS,EAAE,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,WAAD;AACE,IAAA,IAAI,EAAE,SADR;AAEE,IAAA,IAAI,EAAE,MAAMI,gBAAgB,EAF9B;AAGE,IAAA,QAAQ,EAAE,MAAMhD,SAAS,CAAC,KAAD,CAH3B;AAIE,IAAA,UAAU,EAAE,QAJd;AAKE,IAAA,MAAM,EAAE,SALV;AAME,IAAA,WAAW,EAAEC,WANf;AAOE,IAAA,OAAO,EAAEF,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAtBF,EAkDE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAsB,IAAA,KAAK,EAAC,QAA5B;AAAqC,IAAA,OAAO,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE,MAAM6B,UAAU,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CAlDF,CADF;;AA2DA,SAAQ/B,UAAD,GAAeuC,aAAf,GAA+BuB,SAAS,EAA/C;AACD,CAzMQ,CADX,CADF;AA4MA,eAAe/E,eAAe,CAAC,QAAD,CAAf,CAA0Ba,gBAA1B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SimpleSearch from '../simple-search'\nimport SimpleSwitch from '../simple-switch'\nimport styled from 'styled-components'\nimport { Row, Switch, Col, Button, Input, Alert } from 'antd';\nimport SimpleModal from '../simple-modal'\nimport { inject, observer } from 'mobx-react'\nimport { toJS } from 'mobx';\nimport { withTranslation } from '../../i18n'\nimport { TcrbSwitch } from '../antd-styles/styles'\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-right: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledP = styled.p`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledInput = styled(Input)`\n      ${({ readOnly }) => readOnly && `\n          border-style: solid !important;\n          border-width: 0px 0px 1px 0px !important;\n          border-color: black !important;\n          box-shadow: none !important;\n          border-right-style: unset !important;\n          border-right-width: 0px !important\n      `}\n`\nconst AccountUnbinding =\n  inject('customerServicesMenuStore')\n    (observer((props) => {\n      const [isSearch, setIsSearch] = useState(false);\n      const [viewDetail, setViewDetail] = useState(false);\n      const [visible, setVisble] = useState(false)\n      const [modalString, setModalString] = useState('')\n      const [accountId, setAccountId] = useState('')\n      const mockData = [{ accountName: 'Binding to TCRB Mobile Banking', accountBindingStatus: true, accountType: '1', main_account_no: '22223425566' }, { accountName: 'Binding to Micro Pay', accountBindingStatus: true, accountType: '2', main_account_no: '554432268776' }, { accountName: 'Binding to True Money Wallet', accountBindingStatus: true, accountType: '3', main_account_no: '11445677543' }]\n      const [stringAccount, setStringAccount] = useState([])\n      const [stringSwitch, setStringSwitch] = useState([])\n      const { customerServicesMenuStore, t } = props\n\n      useEffect(() => {\n        if (isSearch) {\n          setStringAccount(customerServicesMenuStore.accountInfo)\n        }\n      }, [customerServicesMenuStore.accountInfo])\n\n      useEffect(() => {\n        customerServicesMenuStore.accountInfoError = null\n      }, [])\n\n      useEffect(() => {\n        if (isSearch) {\n          if (customerServicesMenuStore.unbindAccountInfo) {\n            console.log(toJS(customerServicesMenuStore.unbindAccountInfo))\n            convertArrayObjectToArray(toJS(customerServicesMenuStore.unbindAccountInfo)).then(result => {\n              console.log(result)\n              customerServicesMenuStore.arrayUnbindAccountInfo = result\n              setStringSwitch(result)\n            })\n          }\n        }\n      }, [customerServicesMenuStore.unbindAccountInfo])\n\n      const searchIdCardNumber = async (value) => {\n        setIsSearch(true)\n        await customerServicesMenuStore.getDataAccountUnbind(value)\n\n      }\n\n      const backSearch = async () => {\n        setViewDetail(false)\n        setIsSearch(false)\n        setStringAccount([])\n      }\n\n      const convertArrayObjectToArray = (arrayObject) => {\n        console.log(arrayObject)\n        return new Promise((resolve, reject) => {\n          if (Array.isArray(arrayObject)) {\n            let result = arrayObject.map(accountDetail =>\n              [(accountDetail.binding_status == '1') ? true : false, accountDetail.partner_name_english]);\n            resolve(result)\n          } else {\n            resolve([])\n          }\n        })\n\n      }\n\n      const selectAccount = async (selectedAccount) => {\n        console.log(toJS(selectedAccount))\n        customerServicesMenuStore.setAccountId(selectedAccount.main_account_no)\n        await customerServicesMenuStore.getDataPartnerInfo(selectedAccount.main_account_no)\n        setViewDetail(true)\n\n      }\n      const onChange = (switchSelected, index) => {\n        console.log(\"indexOf :\" + index, switchSelected)\n        console.log(toJS(customerServicesMenuStore.unbindAccountInfo[index]))\n        let accountSelected = customerServicesMenuStore.unbindAccountInfo[index]\n        customerServicesMenuStore.accountSelected = accountSelected\n        if (switchSelected === true) {\n          setVisble(true)\n          switch (accountSelected.partner_code) {\n            case \"TMDS\":\n              setModalString(\n                <div style={{ textAlign: \"center\" }}>\n                  <p>{t(\"unbinding\")}</p>\n                  <p> {t(\"account\") + \" \" + accountSelected.main_account_no} from Micro Pay</p>\n                </div>\n              )\n              break;\n          }\n        } else {\n        }\n      }\n\n      const unBindingAccount = async () => {\n        setVisble(false)\n        // call api\n        await customerServicesMenuStore.submitAccountUnbiding()\n      }\n\n\n      const AccountList = () => {\n\n        const listItems = stringAccount.map((string, index) => {\n          let product_name = string.products.map(e => e.product_name_english)\n          return (\n            <Row key={index} gutter={[4, 24]}>\n              <Col span={24}>\n                <StyledA onClick={() => { selectAccount(string) }}>{string.main_account_no}</StyledA>\n                <StyledSpan>{product_name.join(' ' + ',' + ' ')}</StyledSpan>\n              </Col>\n            </Row >\n          )\n        })\n\n        return (\n          <ul style={{ paddingInlineStart: 0 }}>{listItems}</ul>\n        );\n      }\n      const newSearch = () => {\n        console.log(customerServicesMenuStore.accountInfoError)\n\n        return (\n          <div style={{ margin: 20 }}>\n            <Row gutter={[4, 24]}>\n              <SimpleSearch search={searchIdCardNumber} prefixWording={t(\"idCard\")} loading={customerServicesMenuStore.searchFetching} />\n            </Row>\n            <Row gutter={[16, 24]}>\n              <Col span={9}>\n                <div style={{}}>\n                  {customerServicesMenuStore.accountInfoError && <Alert\n                    message={customerServicesMenuStore.accountInfoError}\n                    description={''}\n                    type=\"error\"\n                    closable\n                    onClose={() => customerServicesMenuStore.accountInfoError = null}\n                  />\n                  }\n                </div>\n              </Col>\n            </Row>\n            {(isSearch) ? (\n              <AccountList />\n            ) : ('')}\n          </div>)\n      }\n\n      const accountDetail = (\n        <div style={{ margin: 20 }}>\n\n          <Row gutter={[4, 24]} align=\"top\">\n            <Col >\n              <StyledInput readOnly={true} prefix={t('accountNumber')} defaultValue={customerServicesMenuStore.accountId} />\n            </Col>\n          </Row>\n          <Row gutter={[16, 24]}>\n            <Col span={9}>\n              <div style={{}}>\n                {customerServicesMenuStore.accountInfoError && <Alert\n                  message={customerServicesMenuStore.accountInfoError}\n                  description={''}\n                  type=\"error\"\n                  closable\n                  onClose={() => customerServicesMenuStore.accountInfoError = null}\n                />\n                }\n              </div>\n            </Col>\n          </Row>\n\n          <Row gutter={[4, 24]} align=\"middle\">\n            <SimpleSwitch\n              data={stringSwitch}\n              onChange={(switchSelected, index) => onChange(switchSelected, index)}\n              isBinding={true}\n            />\n\n            <SimpleModal\n              type={\"confirm\"}\n              onOk={() => unBindingAccount()}\n              onCancel={() => setVisble(false)}\n              textCancel={'Cancel'}\n              textOk={'Confrim'}\n              modalString={modalString}\n              visible={visible}\n            />\n            {/* <SimpleModal\n            title={titleModal}\n            type={modalType}\n            onOk={() => _onConfirm()}\n            onCancel={() => _onCancel()}\n            textCancel={textCancel}\n            textOk={textOk}\n            modalString={modalString}\n            visible={visible}\n          /> */}\n          </Row>\n\n          <Row gutter={[4, 24]} align=\"bottom\" justify=\"center\">\n            <Col span={6}>\n              <Button shape=\"round\" onClick={() => backSearch()}>Back</Button>\n\n            </Col>\n          </Row>\n        </div>\n      )\n      return (viewDetail) ? accountDetail : newSearch()\n    }))\nexport default withTranslation('common')(AccountUnbinding)\n"]},"metadata":{},"sourceType":"module"}