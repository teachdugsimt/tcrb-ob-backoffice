{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport SimpleSearch from '../simple-search';\nimport styled from 'styled-components';\nimport { Row, Switch, Col, Button } from 'antd';\nimport SimpleModal from '../simple-modal';\nconst StyledA = styled.a.withConfig({\n  displayName: \"account-unbinding__StyledA\",\n  componentId: \"sc-1wve73-0\"\n})([\"display:initial;padding-right:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledP = styled.p.withConfig({\n  displayName: \"account-unbinding__StyledP\",\n  componentId: \"sc-1wve73-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"account-unbinding__StyledSpan\",\n  componentId: \"sc-1wve73-2\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nexport default function AccountUnbinding() {\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: viewDetail,\n    1: setViewDetail\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: accountId,\n    1: setAccountId\n  } = useState('');\n  const numbers = [1, 2, 3, 4, 5];\n  const stringSwitch = ['Binding to TCRB Mobile Banking', 'Binding to Micro Pay', 'Binding to True Money Wallet'];\n  const stringAccount = [{\n    accountNumber: '2233344514',\n    accountName: 'Normal Saving',\n    accountType: '1'\n  }, {\n    accountNumber: '123456789032',\n    accountName: 'Revolving Loan=Non TCG Nano',\n    accountType: '2'\n  }];\n\n  const searchIdCardNumber = value => {\n    // console.log('eiei search:' + value)\n    // setIdCard(value)\n    setIsSearch(true);\n  };\n\n  const selectedMenu = (menu, accountId) => {\n    switch (menu) {\n      case '1':\n        break;\n\n      case '2':\n        console.log('eiei menu2');\n        setAccountId(accountId);\n        setViewDetail(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onChange = (value, index) => {\n    console.log(\"change:\" + value + \",indexOf :\" + index);\n\n    if (value === true) {\n      setVisble(true); // setIsChecked(true)\n\n      switch (index) {\n        case 0:\n          setModalString(__jsx(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }\n          }, \"Unlocking OTP!!\"), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }\n          }, \"Customer ID Card Number\")));\n          break;\n\n        case 1:\n          break;\n\n        case 2:\n          break;\n\n        default:\n          break;\n      }\n    } else {// setIsChecked(false)\n    }\n  };\n\n  const unBindingAccount = () => {};\n\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) => __jsx(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, __jsx(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, __jsx(Switch, {\n      defaultChecked: false,\n      onChange: checked => onChange(checked, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), __jsx(StyledP, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 91\n      }\n    }, string))));\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  const AccountList = () => {\n    const listItems = stringAccount.map((string, index) => __jsx(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, __jsx(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, __jsx(StyledA, {\n      onClick: () => {\n        selectedMenu(string.accountType);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, string.accountNumber), __jsx(StyledSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 105\n      }\n    }, \" \", string.accountType))));\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  const newSearch = __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: \"ID Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(AccountList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }) : '');\n\n  const accountDetail = __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    onClick: () => setViewDetail(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Back\"), __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    disabled: true,\n    defaultValue: \"1234\",\n    prefixWording: \"Account No\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(SwitchList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleModal, {\n    onOk: () => setVisble(false),\n    onCancel: () => setVisble(false),\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })));\n\n  return viewDetail ? accountDetail : newSearch;\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js"],"names":["React","useState","SimpleSearch","styled","Row","Switch","Col","Button","SimpleModal","StyledA","a","theme","spacing","medium","StyledP","p","StyledSpan","span","AccountUnbinding","isSearch","setIsSearch","viewDetail","setViewDetail","visible","setVisble","modalString","setModalString","accountId","setAccountId","numbers","stringSwitch","stringAccount","accountNumber","accountName","accountType","searchIdCardNumber","value","selectedMenu","menu","console","log","onChange","index","unBindingAccount","SwitchList","listItems","map","string","checked","AccountList","newSearch","accountDetail","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport SimpleSearch from '../simple-search'\nimport styled from 'styled-components'\nimport { Row, Switch, Col, Button } from 'antd';\nimport SimpleModal from '../simple-modal'\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-right: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledP = styled.p`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nexport default function AccountUnbinding() {\n  const [isSearch, setIsSearch] = useState(false);\n  const [viewDetail, setViewDetail] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const [accountId, setAccountId] = useState('')\n  const numbers = [1, 2, 3, 4, 5];\n  const stringSwitch = ['Binding to TCRB Mobile Banking', 'Binding to Micro Pay', 'Binding to True Money Wallet']\n  const stringAccount = [{ accountNumber: '2233344514', accountName: 'Normal Saving', accountType: '1' }, { accountNumber: '123456789032', accountName: 'Revolving Loan=Non TCG Nano', accountType: '2' }]\n  const searchIdCardNumber = (value) => {\n    // console.log('eiei search:' + value)\n    // setIdCard(value)\n    setIsSearch(true)\n  }\n  const selectedMenu = (menu, accountId) => {\n    switch (menu) {\n      case '1':\n\n        break;\n      case '2':\n        console.log('eiei menu2')\n        setAccountId(accountId)\n        setViewDetail(true)\n        break;\n      default:\n        break;\n    }\n  }\n  const onChange = (value, index) => {\n    console.log(\"change:\" + value + \",indexOf :\" + index)\n\n    if (value === true) {\n      setVisble(true)\n      // setIsChecked(true)\n      switch (index) {\n        case 0:\n          setModalString(\n            <div>\n              <p>Unlocking OTP!!</p>\n              <p>Customer ID Card Number</p>\n            </div>\n          )\n          break;\n        case 1:\n\n          break;\n        case 2:\n\n          break;\n        default:\n          break;\n      }\n    } else {\n      // setIsChecked(false)\n    }\n  }\n\n  const unBindingAccount = () => {\n\n  }\n\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) =>\n      <Row key={index}>\n        <Col span={24}>\n          <Switch defaultChecked={false} onChange={checked => onChange(checked, index)} /><StyledP>{string}</StyledP>\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  const AccountList = () => {\n    const listItems = stringAccount.map((string, index) =>\n      <Row key={index}>\n        <Col span={24}>\n          <StyledA onClick={() => { selectedMenu(string.accountType) }}>{string.accountNumber}</StyledA><StyledSpan> {string.accountType}</StyledSpan>\n\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  const newSearch = (\n    <div>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (\n        <AccountList />\n      ) : ('')}\n    </div>)\n\n  const accountDetail = (\n    <div>\n      <Button onClick={() => setViewDetail(false)}>Back</Button>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch disabled={true} defaultValue={\"1234\"} prefixWording=\"Account No\" />\n      </Row>\n      <div style={{ marginTop: 20 }} >\n        <SwitchList />\n        <SimpleModal\n          onOk={() => setVisble(false)}\n          onCancel={() => setVisble(false)}\n          okText=\"Confirm\"\n          cancelText=\"Cancel\"\n          modalString={modalString}\n          visible={visible}\n        />\n      </div>\n    </div>\n  )\n  return (viewDetail) ? accountDetail : newSearch\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}