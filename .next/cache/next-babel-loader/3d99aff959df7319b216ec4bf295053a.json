{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport SimpleSearch from '../simple-search';\nimport SimpleSwitch from '../simple-switch';\nimport styled from 'styled-components';\nimport { Row, Switch, Col, Button, Input, Alert } from 'antd';\nimport SimpleModal from '../simple-modal';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { withTranslation } from '../../i18n';\nimport { TcrbSwitch } from '../antd-styles/styles';\nconst StyledA = styled.a.withConfig({\n  displayName: \"account-unbinding__StyledA\",\n  componentId: \"sc-1wve73-0\"\n})([\"display:initial;padding-right:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledP = styled.p.withConfig({\n  displayName: \"account-unbinding__StyledP\",\n  componentId: \"sc-1wve73-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"account-unbinding__StyledSpan\",\n  componentId: \"sc-1wve73-2\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledInput = styled(Input).withConfig({\n  displayName: \"account-unbinding__StyledInput\",\n  componentId: \"sc-1wve73-3\"\n})([\"\", \"\"], ({\n  readOnly\n}) => readOnly && `\n          border-style: solid !important;\n          border-width: 0px 0px 1px 0px !important;\n          border-color: black !important;\n          box-shadow: none !important;\n          border-right-style: unset !important;\n          border-right-width: 0px !important\n      `);\nconst AccountUnbinding = inject('customerServicesMenuStore')(observer(props => {\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: viewDetail,\n    1: setViewDetail\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: accountId,\n    1: setAccountId\n  } = useState(''); // const stringSwitch = [{ accountName: i18n.t(\"bindingTCRBMobilBanking\"), accountBindingStatus: true, accountType: '1' }, { accountName: i18n.t(\"bindingMicroPay\"), accountBindingStatus: true, accountType: '2' }, { accountName: i18n.t(\"bindingTrueMoneyWallet\"), accountBindingStatus: true, accountType: '3' }]\n  // const stringAccount = [{ accountNumber: '2233344514', accountName: i18n.t(\"normalSaving\"), accountType: '1' }, { accountNumber: '123456789032', accountName: i18n.t(\"revolvingLoanNonTCG\"), accountType: '2' }]\n\n  const mockData = [{\n    accountName: 'Binding to TCRB Mobile Banking',\n    accountBindingStatus: true,\n    accountType: '1',\n    main_account_no: '22223425566'\n  }, {\n    accountName: 'Binding to Micro Pay',\n    accountBindingStatus: true,\n    accountType: '2',\n    main_account_no: '554432268776'\n  }, {\n    accountName: 'Binding to True Money Wallet',\n    accountBindingStatus: true,\n    accountType: '3',\n    main_account_no: '11445677543'\n  }];\n  const {\n    0: stringAccount,\n    1: setStringAccount\n  } = useState([]);\n  const {\n    0: stringSwitch,\n    1: setStringSwitch\n  } = useState([]);\n  const {\n    customerServicesMenuStore,\n    t\n  } = props;\n  useEffect(() => {\n    if (isSearch) {\n      setStringAccount(customerServicesMenuStore.accountInfo);\n    }\n  }, [customerServicesMenuStore.accountInfo]);\n  useEffect(() => {\n    customerServicesMenuStore.accountInfoError = null;\n  }, []);\n  useEffect(() => {\n    if (isSearch) {\n      if (customerServicesMenuStore.unbindAccountInfo) {\n        convertArrayObjectToArray(customerServicesMenuStore.unbindAccountInfo).then(result => {\n          console.log(result);\n          customerServicesMenuStore.arrayUnbindAccountInfo = result; // setStringSwitch(result)\n\n          setStringSwitch(result);\n        });\n      }\n    }\n  }, [customerServicesMenuStore.unbindAccountInfo]);\n\n  const searchIdCardNumber = async value => {\n    // console.log('eiei search:' + value)\n    // setIdCard(value)\n    setIsSearch(true); // customerServicesMenuStore.setCitizenId(value)\n\n    await customerServicesMenuStore.getDataAccountUnbind(value);\n  };\n\n  const backSearch = async () => {\n    setViewDetail(false);\n    setIsSearch(false);\n    setStringAccount([]);\n  };\n\n  const convertArrayObjectToArray = arrayObject => {\n    return new Promise((resolve, reject) => {\n      let result = arrayObject.map(accountDetail => [accountDetail.binding_status == '1' ? true : false, accountDetail.partner_name_english]);\n      resolve(result);\n    });\n  };\n\n  const selectAccount = async selectedAccount => {\n    console.log(toJS(selectedAccount));\n    customerServicesMenuStore.setAccountId(selectedAccount.main_account_no);\n    await customerServicesMenuStore.getDataAccountProduct(selectedAccount.main_account_no);\n    setViewDetail(true);\n  };\n\n  const onChange = (switchSelected, index) => {\n    console.log(\"indexOf :\" + index, switchSelected);\n    console.log(toJS(customerServicesMenuStore.unbindAccountInfo[index]));\n    let accountSelected = customerServicesMenuStore.unbindAccountInfo[index];\n\n    if (switchSelected === true) {\n      setVisble(true);\n\n      switch (accountSelected.partner_code) {\n        case \"TMDS\":\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }\n          }, t(\"unbinding\")), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }\n          }, \" \", t(\"account\") + \" \" + accountSelected.main_account_no, \" from Micro Pay\")));\n          break;\n        // case '2':\n        //   setModalString(\n        //     <div style={{ textAlign: \"center\" }}>\n        //       <p>{t(\"unbinding\")}</p>\n        //       <p> {t(\"account\") + \" \" + customerServicesMenuStore.accountId} from Micro Pay</p>\n        //     </div>\n        //   )\n        //   break;\n        // case '3':\n        //   setModalString(\n        //     <div style={{ textAlign: \"center\" }}>\n        //       <p>{t(\"unbinding\")}</p>\n        //       <p> {t(\"account\") + \" \" + customerServicesMenuStore.accountId} from True Money Wallet</p>\n        //     </div>\n        //   )\n        //   break;\n        // default:\n        //   break;\n      }\n    } else {// setIsChecked(false)\n      }\n  };\n\n  const unBindingAccount = async () => {\n    setVisble(false); // call api\n\n    await customerServicesMenuStore.submitAccountUnbiding();\n  };\n\n  const AccountList = () => {\n    const listItems = stringAccount.map((string, index) => __jsx(Row, {\n      key: index,\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, __jsx(StyledA, {\n      onClick: () => {\n        selectAccount(string);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, string.main_account_no), __jsx(StyledSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 100\n      }\n    }, \" \", string.product_name_english))));\n    return __jsx(\"ul\", {\n      style: {\n        paddingInlineStart: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, listItems);\n  };\n\n  const newSearch = () => {\n    console.log(customerServicesMenuStore.accountInfoError);\n    return __jsx(\"div\", {\n      style: {\n        margin: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, __jsx(SimpleSearch, {\n      search: searchIdCardNumber,\n      prefixWording: t(\"idCard\"),\n      loading: customerServicesMenuStore.searchFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    })), __jsx(Row, {\n      gutter: [16, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, customerServicesMenuStore.accountInfoError && __jsx(Alert, {\n      message: customerServicesMenuStore.accountInfoError,\n      description: '',\n      type: \"error\",\n      closable: true,\n      onClose: () => customerServicesMenuStore.accountInfoError = null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 66\n      }\n    })))), isSearch ? __jsx(AccountList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }) : '');\n  };\n\n  const accountDetail = __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    align: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    readOnly: true,\n    prefix: t('accountNumber'),\n    defaultValue: customerServicesMenuStore.accountId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }))), __jsx(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, customerServicesMenuStore.accountInfoError && __jsx(Alert, {\n    message: customerServicesMenuStore.accountInfoError,\n    description: '',\n    type: \"error\",\n    closable: true,\n    onClose: () => customerServicesMenuStore.accountInfoError = null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 64\n    }\n  })))), __jsx(Row, {\n    gutter: [4, 24],\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, __jsx(SimpleSwitch, {\n    data: stringSwitch,\n    onChange: (switchSelected, index) => onChange(switchSelected, index),\n    isBinding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }), __jsx(SimpleModal, {\n    onOk: () => unBindingAccount(),\n    onCancel: () => setVisble(false),\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    gutter: [4, 24],\n    align: \"bottom\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    shape: \"round\",\n    onClick: () => backSearch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, \"Back\"))));\n\n  return viewDetail ? accountDetail : newSearch();\n}));\nexport default withTranslation('common')(AccountUnbinding);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js"],"names":["React","useState","useEffect","SimpleSearch","SimpleSwitch","styled","Row","Switch","Col","Button","Input","Alert","SimpleModal","inject","observer","toJS","withTranslation","TcrbSwitch","StyledA","a","theme","spacing","medium","StyledP","p","StyledSpan","span","StyledInput","readOnly","AccountUnbinding","props","isSearch","setIsSearch","viewDetail","setViewDetail","visible","setVisble","modalString","setModalString","accountId","setAccountId","mockData","accountName","accountBindingStatus","accountType","main_account_no","stringAccount","setStringAccount","stringSwitch","setStringSwitch","customerServicesMenuStore","t","accountInfo","accountInfoError","unbindAccountInfo","convertArrayObjectToArray","then","result","console","log","arrayUnbindAccountInfo","searchIdCardNumber","value","getDataAccountUnbind","backSearch","arrayObject","Promise","resolve","reject","map","accountDetail","binding_status","partner_name_english","selectAccount","selectedAccount","getDataAccountProduct","onChange","switchSelected","index","accountSelected","partner_code","textAlign","unBindingAccount","submitAccountUnbiding","AccountList","listItems","string","product_name_english","paddingInlineStart","newSearch","margin","searchFetching"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SimpleSearch from '../simple-search'\nimport SimpleSwitch from '../simple-switch'\nimport styled from 'styled-components'\nimport { Row, Switch, Col, Button, Input, Alert } from 'antd';\nimport SimpleModal from '../simple-modal'\nimport { inject, observer } from 'mobx-react'\nimport { toJS } from 'mobx';\nimport { withTranslation } from '../../i18n'\nimport { TcrbSwitch } from '../antd-styles/styles'\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-right: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledP = styled.p`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledInput = styled(Input)`\n      ${({ readOnly }) => readOnly && `\n          border-style: solid !important;\n          border-width: 0px 0px 1px 0px !important;\n          border-color: black !important;\n          box-shadow: none !important;\n          border-right-style: unset !important;\n          border-right-width: 0px !important\n      `}\n`\nconst AccountUnbinding =\n  inject('customerServicesMenuStore')\n    (observer((props) => {\n      const [isSearch, setIsSearch] = useState(false);\n      const [viewDetail, setViewDetail] = useState(false);\n      const [visible, setVisble] = useState(false)\n      const [modalString, setModalString] = useState('')\n      const [accountId, setAccountId] = useState('')\n      // const stringSwitch = [{ accountName: i18n.t(\"bindingTCRBMobilBanking\"), accountBindingStatus: true, accountType: '1' }, { accountName: i18n.t(\"bindingMicroPay\"), accountBindingStatus: true, accountType: '2' }, { accountName: i18n.t(\"bindingTrueMoneyWallet\"), accountBindingStatus: true, accountType: '3' }]\n      // const stringAccount = [{ accountNumber: '2233344514', accountName: i18n.t(\"normalSaving\"), accountType: '1' }, { accountNumber: '123456789032', accountName: i18n.t(\"revolvingLoanNonTCG\"), accountType: '2' }]\n      const mockData = [{ accountName: 'Binding to TCRB Mobile Banking', accountBindingStatus: true, accountType: '1', main_account_no: '22223425566' }, { accountName: 'Binding to Micro Pay', accountBindingStatus: true, accountType: '2', main_account_no: '554432268776' }, { accountName: 'Binding to True Money Wallet', accountBindingStatus: true, accountType: '3', main_account_no: '11445677543' }]\n      const [stringAccount, setStringAccount] = useState([])\n      const [stringSwitch, setStringSwitch] = useState([])\n      const { customerServicesMenuStore, t } = props\n\n      useEffect(() => {\n        if (isSearch) {\n          setStringAccount(customerServicesMenuStore.accountInfo)\n        }\n      }, [customerServicesMenuStore.accountInfo])\n\n      useEffect(() => {\n        customerServicesMenuStore.accountInfoError = null\n      }, [])\n\n      useEffect(() => {\n        if (isSearch) {\n          if (customerServicesMenuStore.unbindAccountInfo) {\n            convertArrayObjectToArray(customerServicesMenuStore.unbindAccountInfo).then(result => {\n              console.log(result)\n              customerServicesMenuStore.arrayUnbindAccountInfo = result\n              // setStringSwitch(result)\n              setStringSwitch(result)\n            })\n          }\n        }\n      }, [customerServicesMenuStore.unbindAccountInfo])\n\n      const searchIdCardNumber = async (value) => {\n        // console.log('eiei search:' + value)\n        // setIdCard(value)\n        setIsSearch(true)\n        // customerServicesMenuStore.setCitizenId(value)\n        await customerServicesMenuStore.getDataAccountUnbind(value)\n\n      }\n\n      const backSearch = async () => {\n        setViewDetail(false)\n        setIsSearch(false)\n        setStringAccount([])\n      }\n\n      const convertArrayObjectToArray = (arrayObject) => {\n        return new Promise((resolve, reject) => {\n          let result = arrayObject.map(accountDetail => [(accountDetail.binding_status == '1') ? true : false, accountDetail.partner_name_english]);\n          resolve(result)\n        })\n      }\n\n      const selectAccount = async (selectedAccount) => {\n        console.log(toJS(selectedAccount))\n        customerServicesMenuStore.setAccountId(selectedAccount.main_account_no)\n        await customerServicesMenuStore.getDataAccountProduct(selectedAccount.main_account_no)\n        setViewDetail(true)\n\n      }\n      const onChange = (switchSelected, index) => {\n        console.log(\"indexOf :\" + index, switchSelected)\n        console.log(toJS(customerServicesMenuStore.unbindAccountInfo[index]))\n        let accountSelected = customerServicesMenuStore.unbindAccountInfo[index]\n\n        if (switchSelected === true) {\n          setVisble(true)\n          switch (accountSelected.partner_code) {\n            case \"TMDS\":\n              setModalString(\n                <div style={{ textAlign: \"center\" }}>\n                  <p>{t(\"unbinding\")}</p>\n                  <p> {t(\"account\") + \" \" + accountSelected.main_account_no} from Micro Pay</p>\n                </div>\n              )\n              break;\n            // case '2':\n            //   setModalString(\n            //     <div style={{ textAlign: \"center\" }}>\n            //       <p>{t(\"unbinding\")}</p>\n            //       <p> {t(\"account\") + \" \" + customerServicesMenuStore.accountId} from Micro Pay</p>\n            //     </div>\n            //   )\n            //   break;\n            // case '3':\n            //   setModalString(\n            //     <div style={{ textAlign: \"center\" }}>\n            //       <p>{t(\"unbinding\")}</p>\n            //       <p> {t(\"account\") + \" \" + customerServicesMenuStore.accountId} from True Money Wallet</p>\n            //     </div>\n            //   )\n            //   break;\n            // default:\n            //   break;\n          }\n        } else {\n          // setIsChecked(false)\n        }\n      }\n\n      const unBindingAccount = async () => {\n        setVisble(false)\n        // call api\n        await customerServicesMenuStore.submitAccountUnbiding()\n      }\n\n      const AccountList = () => {\n        const listItems = stringAccount.map((string, index) =>\n          <Row key={index} gutter={[4, 24]}>\n            <Col span={24}>\n              <StyledA onClick={() => { selectAccount(string) }}>{string.main_account_no}</StyledA><StyledSpan> {string.product_name_english}</StyledSpan>\n\n            </Col>\n          </Row>\n        );\n        return (\n          <ul style={{ paddingInlineStart: 0 }}>{listItems}</ul>\n        );\n      }\n      const newSearch = () => {\n        console.log(customerServicesMenuStore.accountInfoError)\n        return (\n          <div style={{ margin: 20 }}>\n            <Row gutter={[4, 24]}>\n              <SimpleSearch search={searchIdCardNumber} prefixWording={t(\"idCard\")} loading={customerServicesMenuStore.searchFetching} />\n            </Row>\n            <Row gutter={[16, 24]}>\n              <Col span={9}>\n                <div style={{}}>\n                  {customerServicesMenuStore.accountInfoError && <Alert\n                    message={customerServicesMenuStore.accountInfoError}\n                    description={''}\n                    type=\"error\"\n                    closable\n                    onClose={() => customerServicesMenuStore.accountInfoError = null}\n                  />\n                  }\n                </div>\n              </Col>\n            </Row>\n            {(isSearch) ? (\n              <AccountList />\n            ) : ('')}\n          </div>)\n      }\n\n      const accountDetail = (\n        <div style={{ margin: 20 }}>\n          {/* <Row gutter={[4, 24]}>\n        <Button onClick={() => setViewDetail(false)}>{i18n.t(\"back\")}</Button>\n      </Row> */}\n          <Row gutter={[4, 24]} align=\"top\">\n            <Col span={6}>\n              <StyledInput readOnly={true} prefix={t('accountNumber')} defaultValue={customerServicesMenuStore.accountId} />\n            </Col>\n          </Row>\n          <Row gutter={[16, 24]}>\n            <Col span={9}>\n              <div style={{}}>\n                {customerServicesMenuStore.accountInfoError && <Alert\n                  message={customerServicesMenuStore.accountInfoError}\n                  description={''}\n                  type=\"error\"\n                  closable\n                  onClose={() => customerServicesMenuStore.accountInfoError = null}\n                />\n                }\n              </div>\n            </Col>\n          </Row>\n\n          <Row gutter={[4, 24]} align=\"middle\">\n            {/* <SwitchList /> */}\n            <SimpleSwitch\n              data={stringSwitch}\n              onChange={(switchSelected, index) => onChange(switchSelected, index)}\n              isBinding={true}\n            />\n            <SimpleModal\n              onOk={() => unBindingAccount()}\n              onCancel={() => setVisble(false)}\n              okText=\"Confirm\"\n              cancelText=\"Cancel\"\n              modalString={modalString}\n              visible={visible}\n            />\n          </Row>\n\n          <Row gutter={[4, 24]} align=\"bottom\" justify=\"center\">\n            <Col span={6}>\n              <Button shape=\"round\" onClick={() => backSearch()}>Back</Button>\n\n            </Col>\n          </Row>\n        </div>\n      )\n      return (viewDetail) ? accountDetail : newSearch()\n    }))\nexport default withTranslation('common')(AccountUnbinding)\n"]},"metadata":{},"sourceType":"module"}