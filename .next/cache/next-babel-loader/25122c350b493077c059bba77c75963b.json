{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/layouts/AdminHeader.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component, useEffect } from 'react';\nimport logo02 from '../images/logo02.png';\nimport DropdownTopRight from '../components/dropdown-top-right';\nimport account from '../images/account.png';\nimport { MainHeader, SubHeader, SubHeader2, DivImageLogo, WrapperImageLogo, InsideTopRightDiv, ContentMainDiv, TextMenu, DivAccount, WrapperImageAccount, DivName, TextName, WrapperButtonAnt } from \"./Styles/AdminHeaderStyles\";\nimport Router from 'next/router';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-stores';\nimport { i18n, withNamespaces, withTranslation } from '../i18n';\nimport { Button } from 'antd';\nvar AdminHeader = observer(_c = _s(function (props) {\n  _s();\n\n  var _useStores = useStores(),\n      authenStore = _useStores.authenStore;\n\n  var goLogin = function goLogin() {\n    authenStore.clear();\n    Router.push(\"/login\");\n  };\n\n  return __jsx(MainHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(SubHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(DivImageLogo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(WrapperImageLogo, {\n    src: logo02,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })), __jsx(InsideTopRightDiv, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(ContentMainDiv, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(WrapperButtonAnt, {\n    title: i18n.t('support'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), __jsx(WrapperButtonAnt, {\n    title: i18n.t(\"signout\"),\n    onClick: function onClick() {\n      return goLogin();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), __jsx(DivAccount, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(WrapperImageAccount, {\n    src: account,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }), __jsx(DivName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, __jsx(TextName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, i18n.t('mockName')), __jsx(TextName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, i18n.t('mockLastName'))))))), __jsx(SubHeader2, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(DropdownTopRight, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}, \"bsttOC2ce9qlpYlICfFkCewlXiQ=\", false, function () {\n  return [useStores];\n})); // AdminHeader.getInitialProps = async () => ({\n//   namespacesRequired: ['AdminHeader'],\n// })\n\n_c2 = AdminHeader;\nexport default withTranslation('AdminHeader')(AdminHeader);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AdminHeader$observer\");\n$RefreshReg$(_c2, \"AdminHeader\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/layouts/AdminHeader.js"],"names":["React","Component","useEffect","logo02","DropdownTopRight","account","MainHeader","SubHeader","SubHeader2","DivImageLogo","WrapperImageLogo","InsideTopRightDiv","ContentMainDiv","TextMenu","DivAccount","WrapperImageAccount","DivName","TextName","WrapperButtonAnt","Router","observer","useStores","i18n","withNamespaces","withTranslation","Button","AdminHeader","props","authenStore","goLogin","clear","push","t"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SACEC,UADF,EACcC,SADd,EACyBC,UADzB,EACqCC,YADrC,EACmDC,gBADnD,EACqEC,iBADrE,EAEEC,cAFF,EAEkBC,QAFlB,EAE4BC,UAF5B,EAEwCC,mBAFxC,EAE6DC,OAF7D,EAEsEC,QAFtE,EAEgFC,gBAFhF,QAGO,4BAHP;AAIA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,eAA/B,QAAsD,SAAtD;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,IAAMC,WAAW,GAAIN,QAAQ,SAAC,UAACO,KAAD,EAAW;AAAA;;AAAA,mBACfN,SAAS,EADM;AAAA,MAC/BO,WAD+B,cAC/BA,WAD+B;;AAEvC,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBD,IAAAA,WAAW,CAACE,KAAZ;AACAX,IAAAA,MAAM,CAACY,IAAP,CAAY,QAAZ;AACD,GAHD;;AAKA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,GAAG,EAAE5B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEmB,IAAI,CAACU,CAAL,CAAO,SAAP,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEV,IAAI,CAACU,CAAL,CAAO,SAAP,CAAzB;AAA4C,IAAA,OAAO,EAAE;AAAA,aAAMH,OAAO,EAAb;AAAA,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAqB,IAAA,GAAG,EAAExB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWiB,IAAI,CAACU,CAAL,CAAO,UAAP,CAAX,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWV,IAAI,CAACU,CAAL,CAAO,cAAP,CAAX,CAFF,CAFF,CAHF,CADF,CAJF,CADF,EAoBE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CApBF,CADF;AA6BD,CApC4B;AAAA,UACHX,SADG;AAAA,GAA7B,C,CAsCA;AACA;AACA;;MAxCMK,W;AA0CN,eAAeF,eAAe,CAAC,aAAD,CAAf,CAA+BE,WAA/B,CAAf","sourcesContent":["import React, { Component, useEffect } from 'react'\nimport logo02 from '../images/logo02.png'\nimport DropdownTopRight from '../components/dropdown-top-right'\nimport account from '../images/account.png'\nimport {\n  MainHeader, SubHeader, SubHeader2, DivImageLogo, WrapperImageLogo, InsideTopRightDiv,\n  ContentMainDiv, TextMenu, DivAccount, WrapperImageAccount, DivName, TextName, WrapperButtonAnt\n} from \"./Styles/AdminHeaderStyles\"\nimport Router from 'next/router'\nimport { observer } from 'mobx-react'\nimport { useStores } from '../hooks/use-stores'\nimport { i18n, withNamespaces, withTranslation } from '../i18n'\nimport { Button } from 'antd';\n\nconst AdminHeader = (observer((props) => {\n  const { authenStore } = useStores()\n  const goLogin = () => {\n    authenStore.clear()\n    Router.push(\"/login\")\n  }\n\n  return (\n    <MainHeader>\n      <SubHeader>\n        <DivImageLogo>\n          <WrapperImageLogo src={logo02} />\n        </DivImageLogo>\n        <InsideTopRightDiv>\n          <ContentMainDiv>\n            <WrapperButtonAnt title={i18n.t('support')} />\n            <WrapperButtonAnt title={i18n.t(\"signout\")} onClick={() => goLogin()} />\n            <DivAccount>\n              <WrapperImageAccount src={account} />\n              <DivName>\n                <TextName>{i18n.t('mockName')}</TextName>\n                <TextName>{i18n.t('mockLastName')}</TextName>\n              </DivName>\n            </DivAccount>\n          </ContentMainDiv>\n        </InsideTopRightDiv>\n      </SubHeader>\n\n      <SubHeader2>\n\n        <DropdownTopRight />\n\n      </SubHeader2>\n\n    </MainHeader>\n  )\n}))\n\n// AdminHeader.getInitialProps = async () => ({\n//   namespacesRequired: ['AdminHeader'],\n// })\n\nexport default withTranslation('AdminHeader')(AdminHeader)\n"]},"metadata":{},"sourceType":"module"}