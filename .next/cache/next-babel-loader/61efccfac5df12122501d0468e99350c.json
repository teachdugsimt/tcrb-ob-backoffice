{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/table-result.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { columnsTranInfo, columnsPartnerInfo, columnsAccInfo, columnsTxn } from './table-column';\nimport { Table, Tabs, Carousel } from 'antd';\nimport { TcrbTabs } from '../antd-styles/styles';\nimport { data } from './data';\nimport moment from 'moment';\nimport 'moment/locale/th';\nvar TabPane = Tabs.TabPane;\n\nfunction callback(key) {\n  console.log(\"CustomerEnquiry :: \", key);\n}\n\nexport var TableResult = inject('customerServiceEnquiry')(observer(_s(function (props) {\n  _s();\n\n  var customerServiceEnquiry = props.customerServiceEnquiry;\n\n  var _useState = useState(null),\n      transInfo = _useState[0],\n      setTransInfo = _useState[1];\n\n  var _useState2 = useState(null),\n      partnerInfo = _useState2[0],\n      setPartnerInfo = _useState2[1];\n\n  var _useState3 = useState(null),\n      accInfo = _useState3[0],\n      setAccInfo = _useState3[1];\n\n  var _useState4 = useState(null),\n      txnInfo = _useState4[0],\n      setTxnInfo = _useState4[1];\n\n  var _useState5 = useState(null),\n      allList = _useState5[0],\n      setallList = _useState5[1];\n\n  var _useState6 = useState(1),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _buildListData = function _buildListData() {\n    var arr = customerServiceEnquiry.tmpListData ? customerServiceEnquiry.tmpListData : data;\n    var list1 = [],\n        list2 = [],\n        list3 = [],\n        list4 = [],\n        groupList = [];\n    arr.forEach(function (e, index) {\n      var b = moment(e.date.toString()).format('l');\n      list1.push({\n        key: index + 1,\n        no: index + 1,\n        tranDate: b,\n        tranTime: e.time,\n        // no: index + 1, tranDate: '29/6/2020', tranTime: e.time,\n        entity: e.parent_partner_code,\n        channel: e.channel,\n        tranType: e.transaction_type,\n        tranSubType: e.transaction_type,\n        prodType: e.product_type,\n        accNo: e.main_account_no,\n        amount: (index + 1) * 1000,\n        status: e.status\n      });\n      list2.push({\n        key: index + 1,\n        no: index + 1,\n        partnerTranRef: e.partner_transaction_reference,\n        partnerReqId: e.request_id,\n        bankTranRef: e.transaction_reference,\n        mobileNo: \"099345666\" + JSON.stringify(index)\n      });\n      list3.push({\n        key: index + 1,\n        no: index + 1,\n        tcrbAccRef: e.citizen_id,\n        subAcc: e.sub_account_no,\n        accName: e.account_name,\n        accRef1: e.reference_1,\n        accRef2: e.reference_2,\n        accRef3: e.reference_3\n      });\n      list4.push({\n        key: index + 1,\n        no: index + 1,\n        txnDrEntry: \"TXD-DR-\" + index,\n        txnCrEntry: \"CR-ENTRY-00\" + index,\n        feeDrEntry: JSON.stringify(index) + \"%\",\n        feeDrAmount: (index + 1) * (index + 30),\n        feeCrEntry: JSON.stringify(index) + \".5%\",\n        feeCrAmount: (index + 1) * 100 + index,\n        amount: (index + 1) * 23 + index\n      });\n      groupList.push(_defineProperty({\n        key: index + 1,\n        no: index + 1,\n        tranDate: e.date,\n        tranTime: e.time,\n        entity: e.parent_partner_code,\n        channel: e.channel,\n        tranType: e.transaction_type,\n        tranSubType: e.transaction_type,\n        prodType: e.product_type,\n        accNo: e.main_account_no,\n        amount: (index + 1) * 1000,\n        status: e.status,\n        partnerReqId: e.request_id,\n        bankTranRef: e.transaction_reference,\n        mobileNo: \"099345666\" + JSON.stringify(index),\n        tcrbAccRef: e.citizen_id,\n        subAcc: e.sub_account_no,\n        accName: e.account_name,\n        accRef1: e.reference_1,\n        accRef2: e.reference_2,\n        accRef3: e.reference_3,\n        txnCrEntry: \"CR-ENTRY-00\" + index,\n        feeDrEntry: JSON.stringify(index) + \"%\",\n        feeDrAmount: (index + 1) * (index + 30),\n        feeCrEntry: JSON.stringify(index) + \".5%\",\n        feeCrAmount: (index + 1) * 100 + index\n      }, \"amount\", (index + 1) * 23 + index));\n    });\n    setTransInfo(list1);\n    setPartnerInfo(list2);\n    setAccInfo(list3);\n    setTxnInfo(list4);\n    setallList(groupList);\n  };\n\n  useEffect(function () {\n    _buildListData();\n  }, []);\n  useEffect(function () {\n    _buildListData();\n  }, [customerServiceEnquiry.tmpListData]);\n  /*return (\n    <TcrbTabs defaultActiveKey=\"1\" onChange={callback}>\n      <TabPane tab=\"Transaction Info\" key=\"1\">\n        <Table\n          filtered={true}\n          onChange={(e) => setPage(e.current)}\n          onRow={(item, index) => {\n            return {\n              onClick: () => {\n                let tmpList = allList.find(e => e.no == item.no)\n                console.log(\"ITEM CLICK : \", tmpList)\n                customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n              },\n            }\n          }}\n          scroll={{ x: true }}\n          columns={columnsTranInfo} dataSource={transInfo}\n          pagination={{ current: page, }}\n        />\n      </TabPane>\n      <TabPane\n        tab=\"Partner Info\" key=\"2\">\n        <Table\n          filtered={true}\n          onChange={(e) => setPage(e.current)}\n          onRow={(item, index) => ({\n            onClick: () => {\n              let tmpList = allList.find(e => e.no == item.no)\n              console.log(\"ITEM CLICK : \", tmpList)\n              customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n            },\n          })}\n          columns={columnsPartnerInfo} dataSource={partnerInfo}\n          pagination={{ current: page, }}\n        />\n      </TabPane>\n      <TabPane\n        tab=\"Account Info\" key=\"3\">\n        <Table\n          filtered={true}\n          onChange={(e) => setPage(e.current)}\n          onRow={(item, index) => ({\n            onClick: () => {\n              let tmpList = allList.find(e => e.no == item.no)\n              console.log(\"ITEM CLICK : \", tmpList)\n              customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n            },\n          })}\n          columns={columnsAccInfo} dataSource={accInfo}\n          pagination={{ current: page, }}\n        />\n      </TabPane>\n      <TabPane\n        tab=\"Txn\" key=\"4\">\n        <Table\n          filtered={true}\n          onChange={(e) => setPage(e.current)}\n          onRow={(item, index) => ({\n            onClick: () => {\n              let tmpList = allList.find(e => e.no == item.no)\n              console.log(\"ITEM CLICK : \", tmpList)\n              customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n            },\n          })}\n          columns={columnsTxn} dataSource={txnInfo}\n          pagination={{ current: page, }}\n        />\n      </TabPane>\n    </TcrbTabs>\n  )*/\n\n  return __jsx(Carousel, {\n    dots: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"1\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"2\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"3\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"4\")));\n}, \"mmvxOr6l1hVjoNsyoVhKskR4wGI=\")));","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/table-result.js"],"names":["React","useState","useEffect","inject","observer","styled","columnsTranInfo","columnsPartnerInfo","columnsAccInfo","columnsTxn","Table","Tabs","Carousel","TcrbTabs","data","moment","TabPane","callback","key","console","log","TableResult","props","customerServiceEnquiry","transInfo","setTransInfo","partnerInfo","setPartnerInfo","accInfo","setAccInfo","txnInfo","setTxnInfo","allList","setallList","page","setPage","_buildListData","arr","tmpListData","list1","list2","list3","list4","groupList","forEach","e","index","b","date","toString","format","push","no","tranDate","tranTime","time","entity","parent_partner_code","channel","tranType","transaction_type","tranSubType","prodType","product_type","accNo","main_account_no","amount","status","partnerTranRef","partner_transaction_reference","partnerReqId","request_id","bankTranRef","transaction_reference","mobileNo","JSON","stringify","tcrbAccRef","citizen_id","subAcc","sub_account_no","accName","account_name","accRef1","reference_1","accRef2","reference_2","accRef3","reference_3","txnDrEntry","txnCrEntry","feeDrEntry","feeDrAmount","feeCrEntry","feeCrAmount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport styled from 'styled-components';\nimport { columnsTranInfo, columnsPartnerInfo, columnsAccInfo, columnsTxn } from './table-column';\nimport { Table, Tabs, Carousel } from 'antd';\nimport { TcrbTabs } from '../antd-styles/styles'\nimport { data } from './data'\nimport moment from 'moment'\nimport 'moment/locale/th'\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(\"CustomerEnquiry :: \", key);\n}\n\nexport const TableResult =\n  inject('customerServiceEnquiry')\n    (observer((props) => {\n      const { customerServiceEnquiry } = props\n      const [transInfo, setTransInfo] = useState(null)\n      const [partnerInfo, setPartnerInfo] = useState(null)\n      const [accInfo, setAccInfo] = useState(null)\n      const [txnInfo, setTxnInfo] = useState(null)\n      const [allList, setallList] = useState(null)\n      const [page, setPage] = useState(1)\n\n      const _buildListData = () => {\n        let arr = customerServiceEnquiry.tmpListData ? customerServiceEnquiry.tmpListData : data\n        let list1 = [], list2 = [], list3 = [], list4 = [], groupList = []\n        arr.forEach((e, index) => {\n          let b = moment((e.date).toString()).format('l')\n          list1.push({\n            key: index + 1,\n            no: index + 1, tranDate: b, tranTime: e.time,\n            // no: index + 1, tranDate: '29/6/2020', tranTime: e.time,\n            entity: e.parent_partner_code, channel: e.channel,\n            tranType: e.transaction_type, tranSubType: e.transaction_type,\n            prodType: e.product_type,\n            accNo: e.main_account_no, amount: (index + 1) * 1000, status: e.status\n          })\n          list2.push({\n            key: index + 1,\n            no: index + 1, partnerTranRef: e.partner_transaction_reference,\n            partnerReqId: e.request_id, bankTranRef: e.transaction_reference,\n            mobileNo: \"099345666\" + JSON.stringify(index)\n          })\n          list3.push({\n            key: index + 1,\n            no: index + 1,\n            tcrbAccRef: e.citizen_id, subAcc: e.sub_account_no,\n            accName: e.account_name, accRef1: e.reference_1,\n            accRef2: e.reference_2, accRef3: e.reference_3,\n          })\n          list4.push({\n            key: index + 1,\n            no: index + 1, txnDrEntry: \"TXD-DR-\" + index,\n            txnCrEntry: \"CR-ENTRY-00\" + index, feeDrEntry: JSON.stringify(index) + \"%\",\n            feeDrAmount: (index + 1) * (index + 30), feeCrEntry: JSON.stringify(index) + \".5%\",\n            feeCrAmount: ((index + 1) * 100) + index, amount: ((index + 1) * 23) + index\n          })\n          groupList.push({\n            key: index + 1,\n            no: index + 1, tranDate: e.date, tranTime: e.time,\n            entity: e.parent_partner_code, channel: e.channel,\n            tranType: e.transaction_type, tranSubType: e.transaction_type,\n            prodType: e.product_type,\n            accNo: e.main_account_no, amount: (index + 1) * 1000, status: e.status,\n            partnerReqId: e.request_id, bankTranRef: e.transaction_reference,\n            mobileNo: \"099345666\" + JSON.stringify(index),\n            tcrbAccRef: e.citizen_id, subAcc: e.sub_account_no,\n            accName: e.account_name, accRef1: e.reference_1,\n            accRef2: e.reference_2, accRef3: e.reference_3,\n            txnCrEntry: \"CR-ENTRY-00\" + index, feeDrEntry: JSON.stringify(index) + \"%\",\n            feeDrAmount: (index + 1) * (index + 30), feeCrEntry: JSON.stringify(index) + \".5%\",\n            feeCrAmount: ((index + 1) * 100) + index, amount: ((index + 1) * 23) + index\n          })\n        })\n\n        setTransInfo(list1)\n        setPartnerInfo(list2)\n        setAccInfo(list3)\n        setTxnInfo(list4)\n        setallList(groupList)\n      }\n\n      useEffect(() => {\n        _buildListData()\n      }, [])\n\n      useEffect(() => {\n        _buildListData()\n      }, [customerServiceEnquiry.tmpListData])\n\n      /*return (\n        <TcrbTabs defaultActiveKey=\"1\" onChange={callback}>\n          <TabPane tab=\"Transaction Info\" key=\"1\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => {\n                return {\n                  onClick: () => {\n                    let tmpList = allList.find(e => e.no == item.no)\n                    console.log(\"ITEM CLICK : \", tmpList)\n                    customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                  },\n                }\n              }}\n              scroll={{ x: true }}\n              columns={columnsTranInfo} dataSource={transInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"Partner Info\" key=\"2\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => ({\n                onClick: () => {\n                  let tmpList = allList.find(e => e.no == item.no)\n                  console.log(\"ITEM CLICK : \", tmpList)\n                  customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                },\n              })}\n              columns={columnsPartnerInfo} dataSource={partnerInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"Account Info\" key=\"3\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => ({\n                onClick: () => {\n                  let tmpList = allList.find(e => e.no == item.no)\n                  console.log(\"ITEM CLICK : \", tmpList)\n                  customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                },\n              })}\n              columns={columnsAccInfo} dataSource={accInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"Txn\" key=\"4\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => ({\n                onClick: () => {\n                  let tmpList = allList.find(e => e.no == item.no)\n                  console.log(\"ITEM CLICK : \", tmpList)\n                  customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                },\n              })}\n              columns={columnsTxn} dataSource={txnInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n        </TcrbTabs>\n      )*/\n      return (\n        <Carousel dots={false}>\n          <div>\n            <h3>1</h3>\n          </div>\n          <div>\n            <h3>2</h3>\n          </div>\n          <div>\n            <h3>3</h3>\n          </div>\n          <div>\n            <h3>4</h3>\n          </div>\n        </Carousel>\n\n      )\n\n    }))\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}