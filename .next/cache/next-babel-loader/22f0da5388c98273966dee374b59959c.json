{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/pending-approval/pending-approval.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Table, Popconfirm, Row, Col } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport { DownOutlined } from '@ant-design/icons';\nimport { withTranslation } from '../../i18n';\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { TcrbSpin } from '../antd-styles/styles';\nimport SimpleModal from '../simple-modal';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { addKeyToDataSource } from '../data-utility';\nvar HoverIcon = styled(Col).withConfig({\n  displayName: \"pending-approval__HoverIcon\",\n  componentId: \"sc-1tne8uu-0\"\n})([\"color:green;cursor:pointer !important;\"]);\n_c = HoverIcon;\nvar HoverIconReject = styled(Col).withConfig({\n  displayName: \"pending-approval__HoverIconReject\",\n  componentId: \"sc-1tne8uu-1\"\n})([\"color:red;cursor:pointer !important;\"]);\n_c2 = HoverIconReject;\nvar PendingApprovals = inject('pendingApprovalStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState(expand),\n      expandable = _useState[0],\n      setExpandable = _useState[1];\n\n  var _useState2 = useState(true),\n      hasData = _useState2[0],\n      setHasData = _useState2[1];\n\n  var _useState3 = useState('none'),\n      top = _useState3[0],\n      setTop = _useState3[1];\n\n  var _useState4 = useState(\"bottomRight\"),\n      bottom = _useState4[0],\n      setBottom = _useState4[1];\n\n  var _useState5 = useState([]),\n      pendingApprovalData = _useState5[0],\n      setPendingApprovalData = _useState5[1];\n\n  var _useState6 = useState(\"Action details\"),\n      title = _useState6[0],\n      settitle = _useState6[1];\n\n  var _useState7 = useState(\"Ok\"),\n      textOk = _useState7[0],\n      settextOk = _useState7[1];\n\n  var _useState8 = useState(\"Cancel\"),\n      textCancel = _useState8[0],\n      settextCancel = _useState8[1];\n\n  var _useState9 = useState(\"initialState\"),\n      modalString = _useState9[0],\n      setmodalString = _useState9[1];\n\n  var _useState10 = useState(false),\n      visible = _useState10[0],\n      setvisible = _useState10[1];\n\n  var pendingApprovalStore = props.pendingApprovalStore,\n      t = props.t;\n  var expand = {\n    expandedRowRender: function expandedRowRender(record) {\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 53\n        }\n      }, record.description);\n    }\n  };\n  var columns = [{\n    title: 'Ticket#',\n    dataIndex: 'id'\n  }, {\n    title: 'Request Type',\n    dataIndex: 'change_type'\n  }, {\n    title: 'Request Description',\n    key: 'description',\n    render: function render(record) {\n      var data = JSON.parse(JSON.stringify(record));\n      var string = JSON.parse(data.data);\n      setmodalString(\"Action : \".concat(string.ChangedType, \" \\n\\n Old Value : \").concat(string.Current.OTP_MAXIMUM_ENTERED ? string.Current.OTP_MAXIMUM_ENTERED : string.Current.OTP_EXPIRE_TIME, \" \\n\\n New Vlaue : \").concat(string.New.OTP_MAXIMUM_ENTERED ? string.New.OTP_MAXIMUM_ENTERED : string.Current.OTP_EXPIRE_TIME));\n      return __jsx(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, data.description ? \"\".concat(data.description, \" \") : \"\".concat(data.action)), __jsx(\"div\", {\n        onClick: function onClick() {\n          return setvisible(true);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 53\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 59\n        }\n      }, \" : details\"))));\n    }\n  }, {\n    title: 'Request ID',\n    dataIndex: 'maker_id'\n  }, {\n    title: 'Request Date',\n    // dataIndex: 'requested_date',\n    key: 'requested_date',\n    render: function render(record) {\n      var data = JSON.parse(JSON.stringify(record));\n      var date = moment(data.requested_date).format('LLL');\n      return __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 20\n        }\n      }, date);\n    }\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: function render(record) {\n      return __jsx(Row, {\n        gutter: 16,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, __jsx(HoverIcon, {\n        onClick: function onClick() {\n          return processPending(\"APPROVE\", record);\n        },\n        className: \"gutter-row\",\n        span: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, __jsx(CheckCircleOutlined, {\n        height: \"1.5em\",\n        width: \"1.5em\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      })), __jsx(HoverIconReject, {\n        onClick: function onClick() {\n          return processPending(\"REJECT\", record);\n        },\n        className: \"gutter-row\",\n        span: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, __jsx(CloseCircleOutlined, {\n        height: \"1.5em\",\n        width: \"1.5em\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      })));\n    }\n  }];\n  useEffect(function () {\n    // call api\n    var data = {\n      filter: {}\n    };\n    pendingApprovalStore.getPendingApprove(data);\n  }, []);\n  useEffect(function () {\n    if (pendingApprovalStore.responseGetPendingApproveList && pendingApprovalStore.responseGetPendingApproveList.length > 0) {\n      addKeyToDataSource(pendingApprovalStore.responseGetPendingApproveList).then(function (result) {\n        //businessParametersSetupStore.arrayProductLimit = result\n        setPendingApprovalData(result);\n      });\n    }\n  }, [pendingApprovalStore.responseGetPendingApproveList]);\n\n  var processPending = function processPending(status, record) {\n    var data = {\n      allowAction: status,\n      data: record,\n      id: record.id\n    };\n    pendingApprovalStore.setTmpPendingListID(record.id);\n    pendingApprovalStore.processPendingListApprove(data);\n  };\n\n  var _onConfirm = function _onConfirm() {\n    setvisible(false);\n  };\n\n  var _onCancel = function _onCancel() {\n    setvisible(false);\n  };\n\n  var tableColumns = columns.map(function (item) {\n    return _objectSpread({}, item);\n  });\n  return __jsx(TcrbSpin, {\n    spinning: pendingApprovalStore.apiLoading,\n    size: \"large\",\n    tip: \"Loading...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    pagination: {\n      position: [top, bottom]\n    },\n    columns: tableColumns,\n    dataSource: pendingApprovalData // scroll={scroll}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }), __jsx(SimpleModal, {\n    title: title // type={modalType}\n    ,\n    onOk: function onOk() {\n      return _onConfirm();\n    },\n    onCancel: function onCancel() {\n      return _onCancel();\n    },\n    textCancel: textCancel,\n    textOk: textOk,\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }))));\n}, \"sz/bQizgZm6WpPRTF4umlVeEQh4=\")));\nexport default withTranslation('common')(PendingApprovals);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HoverIcon\");\n$RefreshReg$(_c2, \"HoverIconReject\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/pending-approval/pending-approval.js"],"names":["React","useState","useEffect","useMemo","Table","Popconfirm","Row","Col","inject","observer","DownOutlined","withTranslation","CheckCircleOutlined","CloseCircleOutlined","TcrbSpin","SimpleModal","styled","moment","addKeyToDataSource","HoverIcon","HoverIconReject","PendingApprovals","props","expand","expandable","setExpandable","hasData","setHasData","top","setTop","bottom","setBottom","pendingApprovalData","setPendingApprovalData","title","settitle","textOk","settextOk","textCancel","settextCancel","modalString","setmodalString","visible","setvisible","pendingApprovalStore","t","expandedRowRender","record","description","columns","dataIndex","key","render","data","JSON","parse","stringify","string","ChangedType","Current","OTP_MAXIMUM_ENTERED","OTP_EXPIRE_TIME","New","action","date","requested_date","format","processPending","filter","getPendingApprove","responseGetPendingApproveList","length","then","result","status","allowAction","id","setTmpPendingListID","processPendingListApprove","_onConfirm","_onCancel","tableColumns","map","item","apiLoading","position"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,GAA5B,EAAiCC,GAAjC,QAA4C,MAA5C;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SACEC,mBADF,EAEEC,mBAFF,QAGO,mBAHP;AAIA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,IAAMC,SAAS,GAAGH,MAAM,CAACT,GAAD,CAAT;AAAA;AAAA;AAAA,8CAAf;KAAMY,S;AAIN,IAAMC,eAAe,GAAGJ,MAAM,CAACT,GAAD,CAAT;AAAA;AAAA;AAAA,4CAArB;MAAMa,e;AAIN,IAAMC,gBAAgB,GACpBb,MAAM,CAAC,sBAAD,CAAN,CACGC,QAAQ,IAAC,UAACa,KAAD,EAAW;AAAA;;AAAA,kBACiBrB,QAAQ,CAACsB,MAAD,CADzB;AAAA,MACZC,UADY;AAAA,MACAC,aADA;;AAAA,mBAEWxB,QAAQ,CAAC,IAAD,CAFnB;AAAA,MAEZyB,OAFY;AAAA,MAEHC,UAFG;;AAAA,mBAGG1B,QAAQ,CAAC,MAAD,CAHX;AAAA,MAGZ2B,GAHY;AAAA,MAGPC,MAHO;;AAAA,mBAIS5B,QAAQ,CAAC,aAAD,CAJjB;AAAA,MAIZ6B,MAJY;AAAA,MAIJC,SAJI;;AAAA,mBAKmC9B,QAAQ,CAAC,EAAD,CAL3C;AAAA,MAKZ+B,mBALY;AAAA,MAKSC,sBALT;;AAAA,mBAMOhC,QAAQ,CAAC,gBAAD,CANf;AAAA,MAMZiC,KANY;AAAA,MAMLC,QANK;;AAAA,mBAOSlC,QAAQ,CAAC,IAAD,CAPjB;AAAA,MAOZmC,MAPY;AAAA,MAOJC,SAPI;;AAAA,mBAQiBpC,QAAQ,CAAC,QAAD,CARzB;AAAA,MAQZqC,UARY;AAAA,MAQAC,aARA;;AAAA,mBASmBtC,QAAQ,CAAC,cAAD,CAT3B;AAAA,MASZuC,WATY;AAAA,MASCC,cATD;;AAAA,oBAUWxC,QAAQ,CAAC,KAAD,CAVnB;AAAA,MAUZyC,OAVY;AAAA,MAUHC,UAVG;;AAAA,MAWXC,oBAXW,GAWiBtB,KAXjB,CAWXsB,oBAXW;AAAA,MAWWC,CAXX,GAWiBvB,KAXjB,CAWWuB,CAXX;AAYnB,MAAMtB,MAAM,GAAG;AAAEuB,IAAAA,iBAAiB,EAAE,2BAAAC,MAAM;AAAA,aAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,MAAM,CAACC,WAAX,CAAJ;AAAA;AAA3B,GAAf;AACA,MAAMC,OAAO,GAAG,CACd;AACEf,IAAAA,KAAK,EAAE,SADT;AAEEgB,IAAAA,SAAS,EAAE;AAFb,GADc,EAKd;AACEhB,IAAAA,KAAK,EAAE,cADT;AAEEgB,IAAAA,SAAS,EAAE;AAFb,GALc,EASd;AACEhB,IAAAA,KAAK,EAAE,qBADT;AAEEiB,IAAAA,GAAG,EAAE,aAFP;AAGEC,IAAAA,MAAM,EAAE,gBAACL,MAAD,EAAY;AAClB,UAAIM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeT,MAAf,CAAX,CAAX;AACA,UAAIU,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACA,IAAhB,CAAb;AACAZ,MAAAA,cAAc,oBAAagB,MAAM,CAACC,WAApB,+BAAoDD,MAAM,CAACE,OAAP,CAAeC,mBAAf,GAAqCH,MAAM,CAACE,OAAP,CAAeC,mBAApD,GAA0EH,MAAM,CAACE,OAAP,CAAeE,eAA7I,+BAAiLJ,MAAM,CAACK,GAAP,CAAWF,mBAAX,GAAiCH,MAAM,CAACK,GAAP,CAAWF,mBAA5C,GAAkEH,MAAM,CAACE,OAAP,CAAeE,eAAlQ,EAAd;AACA,aAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,IAAI,CAACL,WAAL,aAAsBK,IAAI,CAACL,WAA3B,mBAA+CK,IAAI,CAACU,MAApD,CADH,CADK,EAIL;AAAK,QAAA,OAAO,EAAE;AAAA,iBAAMpB,UAAU,CAAC,IAAD,CAAhB;AAAA,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAN,CAAtC,CAJK,CAAP;AAMD;AAbH,GATc,EAwBd;AACET,IAAAA,KAAK,EAAE,YADT;AAEEgB,IAAAA,SAAS,EAAE;AAFb,GAxBc,EA4Bd;AACEhB,IAAAA,KAAK,EAAE,cADT;AAEE;AACAiB,IAAAA,GAAG,EAAE,gBAHP;AAIEC,IAAAA,MAAM,EAAE,gBAACL,MAAD,EAAY;AAClB,UAAIM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeT,MAAf,CAAX,CAAX;AACA,UAAIiB,IAAI,GAAG/C,MAAM,CAACoC,IAAI,CAACY,cAAN,CAAN,CAA4BC,MAA5B,CAAmC,KAAnC,CAAX;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJF,IADI,CAAP;AAGD;AAVH,GA5Bc,EAwCd;AACE9B,IAAAA,KAAK,EAAE,QADT;AAEEiB,IAAAA,GAAG,EAAE,QAFP;AAGEC,IAAAA,MAAM,EAAE,gBAACL,MAAD;AAAA,aACN,MAAC,GAAD;AAAK,QAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAW,QAAA,OAAO,EAAE;AAAA,iBAAMoB,cAAc,CAAC,SAAD,EAAYpB,MAAZ,CAApB;AAAA,SAApB;AAA6D,QAAA,SAAS,EAAC,YAAvE;AAAoF,QAAA,IAAI,EAAE,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,mBAAD;AAAqB,QAAA,MAAM,EAAE,OAA7B;AAAsC,QAAA,KAAK,EAAE,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,MAAC,eAAD;AAAiB,QAAA,OAAO,EAAE;AAAA,iBAAMoB,cAAc,CAAC,QAAD,EAAWpB,MAAX,CAApB;AAAA,SAA1B;AAAkE,QAAA,SAAS,EAAC,YAA5E;AAAyF,QAAA,IAAI,EAAE,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,mBAAD;AAAqB,QAAA,MAAM,EAAE,OAA7B;AAAsC,QAAA,KAAK,EAAE,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADM;AAAA;AAHV,GAxCc,CAAhB;AAwDA7C,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMmD,IAAI,GAAG;AACXe,MAAAA,MAAM,EAAE;AADG,KAAb;AAGAxB,IAAAA,oBAAoB,CAACyB,iBAArB,CAAuChB,IAAvC;AACD,GANQ,EAMN,EANM,CAAT;AAQAnD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI0C,oBAAoB,CAAC0B,6BAArB,IAAsD1B,oBAAoB,CAAC0B,6BAArB,CAAmDC,MAAnD,GAA4D,CAAtH,EAAyH;AACvHrD,MAAAA,kBAAkB,CAAC0B,oBAAoB,CAAC0B,6BAAtB,CAAlB,CAAuEE,IAAvE,CAA4E,UAACC,MAAD,EAAY;AACtF;AACAxC,QAAAA,sBAAsB,CAACwC,MAAD,CAAtB;AACD,OAHD;AAID;AACF,GAPQ,EAON,CAAC7B,oBAAoB,CAAC0B,6BAAtB,CAPM,CAAT;;AASA,MAAMH,cAAc,GAAG,SAAjBA,cAAiB,CAACO,MAAD,EAAS3B,MAAT,EAAoB;AACzC,QAAIM,IAAI,GAAG;AACTsB,MAAAA,WAAW,EAAED,MADJ;AAETrB,MAAAA,IAAI,EAAEN,MAFG;AAGT6B,MAAAA,EAAE,EAAE7B,MAAM,CAAC6B;AAHF,KAAX;AAKAhC,IAAAA,oBAAoB,CAACiC,mBAArB,CAAyC9B,MAAM,CAAC6B,EAAhD;AACAhC,IAAAA,oBAAoB,CAACkC,yBAArB,CAA+CzB,IAA/C;AACD,GARD;;AAUA,MAAM0B,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBpC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAGA,MAAMqC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBrC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,MAAMsC,YAAY,GAAGhC,OAAO,CAACiC,GAAR,CAAY,UAAAC,IAAI;AAAA,6BAAUA,IAAV;AAAA,GAAhB,CAArB;AAEA,SACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEvC,oBAAoB,CAACwC,UAAzC;AAAqD,IAAA,IAAI,EAAC,OAA1D;AAAkE,IAAA,GAAG,EAAC,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,UAAU,EAAE;AAAEC,MAAAA,QAAQ,EAAE,CAACzD,GAAD,EAAME,MAAN;AAAZ,KADd;AAEE,IAAA,OAAO,EAAEmD,YAFX;AAGE,IAAA,UAAU,EAAEjD,mBAHd,CAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,WAAD;AACE,IAAA,KAAK,EAAEE,KADT,CAEE;AAFF;AAGE,IAAA,IAAI,EAAE;AAAA,aAAM6C,UAAU,EAAhB;AAAA,KAHR;AAIE,IAAA,QAAQ,EAAE;AAAA,aAAMC,SAAS,EAAf;AAAA,KAJZ;AAKE,IAAA,UAAU,EAAE1C,UALd;AAME,IAAA,MAAM,EAAEF,MANV;AAOE,IAAA,WAAW,EAAEI,WAPf;AAQE,IAAA,OAAO,EAAEE,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF,CADF;AAwBD,CAjIQ,kCADX,CADF;AAqIA,eAAe/B,eAAe,CAAC,QAAD,CAAf,CAA0BU,gBAA1B,CAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport { Table, Popconfirm, Row, Col } from 'antd';\nimport { inject, observer } from 'mobx-react'\nimport { DownOutlined } from '@ant-design/icons';\nimport { withTranslation } from '../../i18n'\nimport {\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n} from '@ant-design/icons';\nimport { TcrbSpin } from '../antd-styles/styles'\nimport SimpleModal from '../simple-modal'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport { addKeyToDataSource } from '../data-utility'\nconst HoverIcon = styled(Col)`\n    color: green;\n    cursor: pointer !important;\n`\nconst HoverIconReject = styled(Col)`\n    color: red;\n    cursor: pointer !important;\n`\nconst PendingApprovals =\n  inject('pendingApprovalStore')\n    (observer((props) => {\n      const [expandable, setExpandable] = useState(expand)\n      const [hasData, setHasData] = useState(true)\n      const [top, setTop] = useState('none')\n      const [bottom, setBottom] = useState(\"bottomRight\")\n      const [pendingApprovalData, setPendingApprovalData] = useState([])\n      const [title, settitle] = useState(\"Action details\")\n      const [textOk, settextOk] = useState(\"Ok\")\n      const [textCancel, settextCancel] = useState(\"Cancel\")\n      const [modalString, setmodalString] = useState(\"initialState\")\n      const [visible, setvisible] = useState(false)\n      const { pendingApprovalStore, t } = props\n      const expand = { expandedRowRender: record => <p>{record.description}</p> };\n      const columns = [\n        {\n          title: 'Ticket#',\n          dataIndex: 'id',\n        },\n        {\n          title: 'Request Type',\n          dataIndex: 'change_type',\n        },\n        {\n          title: 'Request Description',\n          key: 'description',\n          render: (record) => {\n            let data = JSON.parse(JSON.stringify(record))\n            let string = JSON.parse(data.data)\n            setmodalString(`Action : ${string.ChangedType} \\n\\n Old Value : ${string.Current.OTP_MAXIMUM_ENTERED ? string.Current.OTP_MAXIMUM_ENTERED : string.Current.OTP_EXPIRE_TIME} \\n\\n New Vlaue : ${string.New.OTP_MAXIMUM_ENTERED ? string.New.OTP_MAXIMUM_ENTERED : string.Current.OTP_EXPIRE_TIME}`)\n            return <Row>\n              <span>\n                {data.description ? `${data.description} ` : `${data.action}`}\n              </span>\n              <div onClick={() => setvisible(true)}><span><a> : details</a></span></div>\n            </Row>\n          }\n        },\n        {\n          title: 'Request ID',\n          dataIndex: 'maker_id',\n        },\n        {\n          title: 'Request Date',\n          // dataIndex: 'requested_date',\n          key: 'requested_date',\n          render: (record) => {\n            let data = JSON.parse(JSON.stringify(record))\n            let date = moment(data.requested_date).format('LLL')\n            return <span>\n              {date}\n            </span>\n          }\n        },\n        {\n          title: 'Action',\n          key: 'action',\n          render: (record) => (\n            <Row gutter={16}>\n              <HoverIcon onClick={() => processPending(\"APPROVE\", record)} className=\"gutter-row\" span={6}>\n                <CheckCircleOutlined height={\"1.5em\"} width={\"1.5em\"} />\n              </HoverIcon>\n              <HoverIconReject onClick={() => processPending(\"REJECT\", record)} className=\"gutter-row\" span={6}>\n                <CloseCircleOutlined height={\"1.5em\"} width={\"1.5em\"} />\n              </HoverIconReject>\n            </Row>\n          ),\n        },\n      ];\n\n      useEffect(() => {\n        // call api\n        const data = {\n          filter: {}\n        }\n        pendingApprovalStore.getPendingApprove(data)\n      }, [])\n\n      useEffect(() => {\n        if (pendingApprovalStore.responseGetPendingApproveList && pendingApprovalStore.responseGetPendingApproveList.length > 0) {\n          addKeyToDataSource(pendingApprovalStore.responseGetPendingApproveList).then((result) => {\n            //businessParametersSetupStore.arrayProductLimit = result\n            setPendingApprovalData(result)\n          })\n        }\n      }, [pendingApprovalStore.responseGetPendingApproveList])\n\n      const processPending = (status, record) => {\n        let data = {\n          allowAction: status,\n          data: record,\n          id: record.id\n        }\n        pendingApprovalStore.setTmpPendingListID(record.id)\n        pendingApprovalStore.processPendingListApprove(data)\n      }\n\n      const _onConfirm = () => {\n        setvisible(false)\n      }\n      const _onCancel = () => {\n        setvisible(false)\n      }\n\n      const tableColumns = columns.map(item => ({ ...item }));\n\n      return (\n        <TcrbSpin spinning={pendingApprovalStore.apiLoading} size=\"large\" tip=\"Loading...\" >\n          <Row >\n            <Col span={24}>\n              <Table\n                pagination={{ position: [top, bottom] }}\n                columns={tableColumns}\n                dataSource={pendingApprovalData}\n              // scroll={scroll}\n              />\n              <SimpleModal\n                title={title}\n                // type={modalType}\n                onOk={() => _onConfirm()}\n                onCancel={() => _onCancel()}\n                textCancel={textCancel}\n                textOk={textOk}\n                modalString={modalString}\n                visible={visible}\n              />\n            </Col>\n          </Row>\n        </TcrbSpin>\n      )\n    }))\n\nexport default withTranslation('common')(PendingApprovals)\n\n"]},"metadata":{},"sourceType":"module"}