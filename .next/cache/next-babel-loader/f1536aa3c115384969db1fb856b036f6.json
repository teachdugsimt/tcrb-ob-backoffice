{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport { ApisauceInstance, create, ApiResponse } from 'apisauce';\nimport Header from './api-integrations/Header';\nimport getGeneralApiProblem from './api-integrations/error-handler';\n\nvar StartupApi = function StartupApi() {\n  _classCallCheck(this, StartupApi);\n\n  this.createProcess = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n      var api, response, problem;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              api = create(Header);\n              _context.next = 3;\n              return api.post('v1/calculator/calculate', params);\n\n            case 3:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", response.data);\n\n            case 8:\n              problem = getGeneralApiProblem(response);\n              return _context.abrupt(\"return\", problem);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport default new StartupApi();","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/services/start-up-api.js"],"names":["ApisauceInstance","create","ApiResponse","Header","getGeneralApiProblem","StartupApi","createProcess","params","api","post","response","ok","data","problem"],"mappings":";;;AAAA,SAASA,gBAAT,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,UAAtD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;;IAEMC,U;;;OAEJC,a;wEAAgB,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,cAAAA,GADQ,GACFP,MAAM,CAACE,MAAD,CADJ;AAAA;AAAA,qBAESK,GAAG,CAACC,IAAJ,CAAS,yBAAT,EAAoCF,MAApC,CAFT;;AAAA;AAERG,cAAAA,QAFQ;;AAAA,mBAGVA,QAAQ,CAACC,EAHC;AAAA;AAAA;AAAA;;AAAA,+CAILD,QAAQ,CAACE,IAJJ;;AAAA;AAMRC,cAAAA,OANQ,GAMET,oBAAoB,CAACM,QAAD,CANtB;AAAA,+CAOLG,OAPK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;AAWlB,eAAe,IAAIR,UAAJ,EAAf","sourcesContent":["import { ApisauceInstance, create, ApiResponse } from 'apisauce'\nimport Header from './api-integrations/Header'\nimport getGeneralApiProblem from './api-integrations/error-handler'\n\nclass StartupApi {\n\n  createProcess = async (params) => {\n    const api = create(Header)\n    const response = await api.post('v1/calculator/calculate', params)\n    if (response.ok) {\n      return response.data\n    } else {\n      let problem = getGeneralApiProblem(response)\n      return problem\n    }\n  }\n}\nexport default new StartupApi()\n"]},"metadata":{},"sourceType":"module"}