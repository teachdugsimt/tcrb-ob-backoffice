{"ast":null,"code":"var _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, action } from 'mobx';\nlet CustomerServicesMenuStore = (_class = (_temp = class CustomerServicesMenuStore {\n  constructor() {\n    _initializerDefineProperty(this, \"citizenId\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"setProfile\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"setCitizenId\", _descriptor3, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"citizenId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"setProfile\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (id, password) => {\n      this.id = id;\n      this.password = password;\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"setCitizenId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return id => {\n      console.log(id);\n      this.citizenId = id;\n    };\n  }\n})), _class);\nexport { CustomerServicesMenuStore as default };","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/customer-services-menu-store.js"],"names":["observable","action","CustomerServicesMenuStore","id","password","console","log","citizenId"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;IAEqBC,yB,sBAAN,MAAMA,yBAAN,CAAgC;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA,C,mFAC5CF,U;;;;;WAAuB,E;;8EACvBC,M;;;;;WAAoB,CAACE,EAAD,EAAKC,QAAL,KAAkB;AACrC,WAAKD,EAAL,GAAUA,EAAV;AACA,WAAKC,QAAL,GAAgBA,QAAhB;AACD,K;;gFACAH,M;;;;;WAAuBE,EAAD,IAAQ;AAC7BE,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACA,WAAKI,SAAL,GAAiBJ,EAAjB;AACD,K;;;SATkBD,yB","sourcesContent":["import { observable, action } from 'mobx'\n\nexport default class CustomerServicesMenuStore {\n  @observable citizenId = ''\n  @action setProfile = (id, password) => {\n    this.id = id\n    this.password = password\n  }\n  @action setCitizenId = (id) => {\n    console.log(id)\n    this.citizenId = id\n  }\n}\n"]},"metadata":{},"sourceType":"module"}