{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport ExcuteApi from './api-integrations/excute-api';\n\nvar BusinessParameterSetupApi = function BusinessParameterSetupApi() {\n  _classCallCheck(this, BusinessParameterSetupApi);\n\n  this.getOtpValue = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ExcuteApi('api/backoffice/v1/parameterstore', params, \"get\");\n\n            case 2:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.setOtpValue = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return ExcuteApi('api/backoffice/v1/changerequest/otp', params, \"post\");\n\n            case 2:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.getPendingApproveList = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return ExcuteApi('api/backoffice/v1/changerequest', params, \"get\");\n\n            case 2:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  this.getProductList = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return ExcuteApi('api/backoffice/v1/product', params, \"get\");\n\n            case 2:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  this.getProductLimit = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return ExcuteApi('api/backoffice/v1/partnertransactionlimit', params, \"get\");\n\n            case 2:\n              response = _context5.sent;\n              return _context5.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  this.getDetailProductLimit = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return ExcuteApi('api/backoffice/v1/partnertransactionlimit/' + params, null, \"get\");\n\n            case 2:\n              response = _context6.sent;\n              return _context6.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  this.getChannelPartnerList = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return ExcuteApi('api/backoffice/v1/partnerinformation', params, \"get\");\n\n            case 2:\n              response = _context7.sent;\n              return _context7.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  this.deleteProductLimit = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\");\n\n            case 2:\n              response = _context8.sent;\n              return _context8.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  this.addNewProductLimit = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\");\n\n            case 2:\n              response = _context9.sent;\n              return _context9.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function (_x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  this.submitSpecificLimit = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\");\n\n            case 2:\n              response = _context10.sent;\n              return _context10.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function (_x10) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  this.submitChangePartnerLimit = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\");\n\n            case 2:\n              response = _context11.sent;\n              return _context11.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function (_x11) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  this.getPendingList = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return ExcuteApi('api/backoffice/v1/changerequest', params, \"get\");\n\n            case 2:\n              response = _context12.sent;\n              return _context12.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function (_x12) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  this.approveRejectOtpRequest = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return api.put('api/backoffice/v1/changerequest/otp', params);\n\n            case 2:\n              response = _context13.sent;\n              return _context13.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function (_x13) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  this.rejectProductRequest = /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return api.put('api/backoffice/v1/changerequest/productlimit', params);\n\n            case 2:\n              response = _context14.sent;\n              return _context14.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n\n    return function (_x14) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  this.getPartnerChannel = /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return ExcuteApi('api/backoffice/v1/partnertransactionlimit', params, \"get\");\n\n            case 2:\n              response = _context15.sent;\n              return _context15.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n\n    return function (_x15) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  this.processPendingList = /*#__PURE__*/function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return ExcuteApi(\"api/backoffice/v1/changerequest/\".concat(params.id, \"/confirm\"), params, \"post\");\n\n            case 2:\n              response = _context16.sent;\n              return _context16.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n\n    return function (_x16) {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n};\n\nexport default new BusinessParameterSetupApi(); // HTTPS=true SSL_CRT_FILE=Certificate_chain.txt SSL_KEY_FILE=private_key.txt npm run dev\n// customer service inquiry\n// bussiness parameter setup\n// customer service menu","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/services/business-parameter-setup-api.js"],"names":["ExcuteApi","BusinessParameterSetupApi","getOtpValue","params","response","setOtpValue","getPendingApproveList","getProductList","getProductLimit","getDetailProductLimit","getChannelPartnerList","deleteProductLimit","addNewProductLimit","submitSpecificLimit","submitChangePartnerLimit","getPendingList","approveRejectOtpRequest","api","put","rejectProductRequest","getPartnerChannel","processPendingList","id"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,+BAAtB;;IAEMC,yB;;;OAEJC,W;wEAAc,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWH,SAAS,CAAC,kCAAD,EAAqCG,MAArC,EAA6C,KAA7C,CADpB;;AAAA;AACNC,cAAAA,QADM;AAAA,+CAELA,QAFK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKdC,W;yEAAc,kBAAOF,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWH,SAAS,CAAC,qCAAD,EAAwCG,MAAxC,EAAgD,MAAhD,CADpB;;AAAA;AACNC,cAAAA,QADM;AAAA,gDAELA,QAFK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKdE,qB;yEAAwB,kBAAOH,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCH,SAAS,CAAC,iCAAD,EAAoCG,MAApC,EAA4C,KAA5C,CADV;;AAAA;AAChBC,cAAAA,QADgB;AAAA,gDAEfA,QAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKxBG,c;yEAAiB,kBAAOJ,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQH,SAAS,CAAC,2BAAD,EAA8BG,MAA9B,EAAsC,KAAtC,CADjB;;AAAA;AACTC,cAAAA,QADS;AAAA,gDAERA,QAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKjBI,e;yEAAkB,kBAAOL,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOH,SAAS,CAAC,2CAAD,EAA8CG,MAA9C,EAAsD,KAAtD,CADhB;;AAAA;AACVC,cAAAA,QADU;AAAA,gDAETA,QAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKlBK,qB;yEAAwB,kBAAON,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCH,SAAS,CAAC,+CAA+CG,MAAhD,EAAwD,IAAxD,EAA8D,KAA9D,CADV;;AAAA;AAChBC,cAAAA,QADgB;AAAA,gDAEfA,QAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKxBM,qB;yEAAwB,kBAAOP,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCH,SAAS,CAAC,sCAAD,EAAyCG,MAAzC,EAAiD,KAAjD,CADV;;AAAA;AAChBC,cAAAA,QADgB;AAAA,gDAEfA,QAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKxBO,kB;yEAAqB,kBAAOR,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIH,SAAS,CAAC,8CAAD,EAAiDG,MAAjD,EAAyD,MAAzD,CADb;;AAAA;AACbC,cAAAA,QADa;AAAA,gDAEZA,QAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKrBQ,kB;yEAAqB,kBAAOT,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIH,SAAS,CAAC,8CAAD,EAAiDG,MAAjD,EAAyD,MAAzD,CADb;;AAAA;AACbC,cAAAA,QADa;AAAA,gDAEZA,QAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKrBS,mB;0EAAsB,mBAAOV,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGH,SAAS,CAAC,8CAAD,EAAiDG,MAAjD,EAAyD,MAAzD,CADZ;;AAAA;AACdC,cAAAA,QADc;AAAA,iDAEbA,QAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKtBU,wB;0EAA2B,mBAAOX,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFH,SAAS,CAAC,8CAAD,EAAiDG,MAAjD,EAAyD,MAAzD,CADP;;AAAA;AACnBC,cAAAA,QADmB;AAAA,iDAElBA,QAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAK3BW,c;0EAAiB,mBAAOZ,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQH,SAAS,CAAC,iCAAD,EAAoCG,MAApC,EAA4C,KAA5C,CADjB;;AAAA;AACTC,cAAAA,QADS;AAAA,iDAERA,QAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKjBY,uB;0EAA0B,mBAAOb,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDc,GAAG,CAACC,GAAJ,CAAQ,qCAAR,EAA+Cf,MAA/C,CADC;;AAAA;AAClBC,cAAAA,QADkB;AAAA,iDAEjBA,QAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAK1Be,oB;0EAAuB,mBAAOhB,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACEc,GAAG,CAACC,GAAJ,CAAQ,8CAAR,EAAwDf,MAAxD,CADF;;AAAA;AACfC,cAAAA,QADe;AAAA,iDAEdA,QAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAMvBgB,iB;0EAAoB,mBAAOjB,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKH,SAAS,CAAC,2CAAD,EAA8CG,MAA9C,EAAsD,KAAtD,CADd;;AAAA;AACZC,cAAAA,QADY;AAAA,iDAEXA,QAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKpBiB,kB;0EAAqB,mBAAOlB,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIH,SAAS,2CAAoCG,MAAM,CAACmB,EAA3C,eAAyDnB,MAAzD,EAAiE,MAAjE,CADb;;AAAA;AACbC,cAAAA,QADa;AAAA,iDAEZA,QAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;AAMvB,eAAe,IAAIH,yBAAJ,EAAf,C,CACA;AAGA;AACA;AACA","sourcesContent":["import ExcuteApi from './api-integrations/excute-api'\n\nclass BusinessParameterSetupApi {\n\n  getOtpValue = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/parameterstore', params, \"get\")\n    return response\n  }\n\n  setOtpValue = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/otp', params, \"post\")\n    return response\n  }\n\n  getPendingApproveList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest', params, \"get\")\n    return response\n  }\n\n  getProductList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/product', params, \"get\")\n    return response\n  }\n\n  getProductLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/partnertransactionlimit', params, \"get\")\n    return response\n  }\n\n  getDetailProductLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/partnertransactionlimit/' + params, null, \"get\")\n    return response\n  }\n\n  getChannelPartnerList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/partnerinformation', params, \"get\")\n    return response\n  }\n\n  deleteProductLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\")\n    return response\n  }\n\n  addNewProductLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\")\n    return response\n  }\n\n  submitSpecificLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\")\n    return response\n  }\n\n  submitChangePartnerLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\")\n    return response\n  }\n\n  getPendingList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest', params, \"get\")\n    return response\n  }\n\n  approveRejectOtpRequest = async (params) => {\n    const response = await api.put('api/backoffice/v1/changerequest/otp', params)\n    return response\n  }\n\n  rejectProductRequest = async (params) => {\n    const response = await api.put('api/backoffice/v1/changerequest/productlimit', params)\n    return response\n  }\n\n\n  getPartnerChannel = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/partnertransactionlimit', params, \"get\")\n    return response\n  }\n\n  processPendingList = async (params) => {\n    const response = await ExcuteApi(`api/backoffice/v1/changerequest/${params.id}/confirm`, params, \"post\")\n    return response\n  }\n\n}\nexport default new BusinessParameterSetupApi()\n// HTTPS=true SSL_CRT_FILE=Certificate_chain.txt SSL_KEY_FILE=private_key.txt npm run dev\n\n\n// customer service inquiry\n// bussiness parameter setup\n// customer service menu\n"]},"metadata":{},"sourceType":"module"}