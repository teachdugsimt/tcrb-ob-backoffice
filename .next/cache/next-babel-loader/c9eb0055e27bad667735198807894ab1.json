{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/manage-user.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space, DatePicker } from 'antd';\nimport { DeleteOutlined, EditOutlined, FormOutlined } from '@ant-design/icons';\nimport { inject, observer } from 'mobx-react';\nimport { orange, green, gold } from '@ant-design/colors';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport SimpleInput from '../../simple-input';\nimport SimpleModal from '../../simple-modal';\nimport { addKeyToDataSource, checkDefaultStatus } from '../../data-utility';\nimport userAccessManagement from '..';\nimport moment from 'moment';\nimport { toJS } from 'mobx';\nconst {\n  Option\n} = Select;\nlet groupSelect = null;\nlet dataEditUserProfile = null;\nconst ManageUser = inject('userAccessManagementStore')(observer(props => {\n  const {\n    0: viewEditUserDetail,\n    1: setViewEditUserDetail\n  } = useState(false);\n  const {\n    0: modalTitle,\n    1: setModalTitle\n  } = useState('');\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState('');\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: optionGroupList,\n    1: setOptionGroupList\n  } = useState([]);\n  const {\n    0: supervisorList,\n    1: setSupervisorList\n  } = useState([]);\n  const {\n    0: sectionList,\n    1: setSectionList\n  } = useState([]);\n  const {\n    0: groupListInUser,\n    1: setGroupListInUser\n  } = useState([]);\n  const dateFormat = 'YYYY-MM-DD';\n  const {\n    userAccessManagementStore\n  } = props;\n  const [form] = Form.useForm();\n  useEffect(() => {\n    userAccessManagementStore.getDataGroupOptionList();\n    userAccessManagementStore.getDataSectionList(); // console.log(toJS(userAccessManagementStore.userSelected))\n    // mapKeyToGroupList(userAccessManagementStore.userSelected.map_user_groups)\n  }, []);\n  useEffect(() => {\n    if (userAccessManagementStore.optionGroupList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.optionGroupList).then(result => {\n        setOptionGroupList(result);\n      });\n    }\n  }, [userAccessManagementStore.optionGroupList]);\n  useEffect(() => {\n    if (userAccessManagementStore.supervisorList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.supervisorList).then(result => {\n        setSupervisorList(result);\n      });\n    }\n  }, [userAccessManagementStore.supervisorList]);\n  useEffect(() => {\n    if (userAccessManagementStore.optionSectionList.length >= 0) {\n      mapKeyToGroupList(userAccessManagementStore.userSelected.map_user_groups);\n    }\n  }, [userAccessManagementStore.optionSectionList]);\n  useEffect(() => {\n    console.log(toJS(userAccessManagementStore.userSelected));\n\n    if (Object.keys(userAccessManagementStore.userSelected).length === 0) {\n      null;\n    } else {\n      splitMapUserGroups(userAccessManagementStore.userSelected.map_user_groups);\n    }\n  }, [userAccessManagementStore.userSelected]);\n\n  const goBackToUserList = () => {\n    userAccessManagementStore.nextPageIsManageUser = false;\n  };\n\n  const getSupervisorList = sectionId => {\n    userAccessManagementStore.getDataSupervisor(sectionId);\n  };\n\n  const mapKeyToGroupList = groupListNonKey => {\n    addKeyToDataSource(groupListNonKey).then(result => {\n      setGroupListInUser(result);\n    });\n  };\n\n  const splitMapUserGroups = dataMapUserGroup => {\n    console.log(toJS(dataMapUserGroup));\n    let newUserObject = [];\n\n    for (let index = 0; index < dataMapUserGroup.length; index++) {\n      newUserObject.push(_objectSpread(_objectSpread({}, dataMapUserGroup[index]), {}, {\n        name: dataMapUserGroup[index].group.name\n      }));\n    }\n\n    setGroupListInUser(newUserObject);\n    console.log(newUserObject);\n  };\n\n  const deactivateGroupSelect = record => {\n    let request = {\n      user_id: userAccessManagementStore.userSelected.id,\n      group_id: record.id\n    };\n    userAccessManagementStore.submitDeleteGroupInUser(request);\n  };\n\n  const renderActionGroupInUser = record => {\n    if (record.status == 'ACTIVE') {\n      if (record.request_status == 'APPROVE' || record.request_status == 'REJECT') {\n        return __jsx(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }\n        }, __jsx(TcrbPopconfirm, {\n          title: \"Sure to Deactivate?\",\n          onConfirm: () => deactivateGroupSelect(record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }\n        }, __jsx(\"a\", {\n          style: {\n            color: '#FBA928'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }\n        }, \"Deactivate\")));\n      } else if (record.request_status == 'PENDING') {\n        return null;\n      }\n    } else if (status == 'INACTIVE') {\n      if (record.request_status == 'PENDING') {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const columnGroup = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: (text, record) => checkDefaultStatus(record.status, record.request_status)\n  }, {\n    title: 'Group name',\n    dataIndex: 'name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: (text, record) => renderActionGroupInUser(record)\n  }];\n\n  const openModalSubmitEditUserProfile = values => {\n    dataEditUserProfile = values;\n    setModalTitle('Confirm');\n    setModalType('confirm');\n    setModalString(__jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, \"Confirm to Change UserProfile.\"), __jsx(\"p\", {\n      style: {\n        color: orange[6]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, \"Your changes will take effect after being approved.\")));\n    setVisible(true);\n  };\n\n  const submitEditUser = () => {\n    console.log(dataEditUserProfile);\n    let request = {\n      currentData: userAccessManagementStore.userSelected,\n      newData: _objectSpread(_objectSpread({}, dataEditUserProfile), {}, {\n        join_date: moment(dataEditUserProfile.join_data).format('YYYY-MM-DD'),\n        last_working_date: moment(dataEditUserProfile.last_working_date).format('YYYY-MM-DD')\n      })\n    };\n    userAccessManagementStore.updateUser(request);\n  };\n\n  const FormEditUser = ({\n    onSubmitEditUser\n  }) => {\n    return __jsx(Form, {\n      form: form,\n      layout: \"vertical\",\n      name: \"form_in_modal\",\n      initialValues: {\n        'employee_code': userAccessManagementStore.userSelected.employee_code,\n        'section_id': userAccessManagementStore.userSelected.section_id,\n        'name': userAccessManagementStore.userSelected.name,\n        'surname': userAccessManagementStore.userSelected.surname,\n        'username': userAccessManagementStore.userSelected.name,\n        'email': userAccessManagementStore.userSelected.name,\n        'join_date': moment(userAccessManagementStore.userSelected.join_date),\n        'last_working_date': moment(userAccessManagementStore.userSelected.last_working_date)\n      },\n      onFinish: values => {\n        onSubmitEditUser(values);\n        form.resetFields();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, \"Employee ID\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"employee_code\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.employee_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, \"Section\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"section_id\",\n      rules: [{\n        required: true,\n        message: 'Please input Section!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => getSupervisorList(value),\n      defaultValue: userAccessManagementStore.userSelected.section_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, sectionList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 53\n      }\n    }, item.name)))))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, \"Name\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, \"Surname\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"surname\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.surname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }\n    }, \"Username\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }\n    }, \"Email\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 15\n      }\n    }, \"Join Date\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"join_date\",\n      rules: [{\n        required: false,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      format: dateFormat,\n      defaultValue: moment(userAccessManagementStore.userSelected.join_date, dateFormat),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 15\n      }\n    }, \"Last working date\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"last_working_date\",\n      rules: [{\n        required: false,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 15\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      format: dateFormat,\n      defaultValue: moment(userAccessManagementStore.userSelected.last_working_date, dateFormat),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 15\n      }\n    }, \"Status\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"user_status\",\n      rules: [{\n        // required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 15\n      }\n    }, \"Supervisor\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"supervisor_id\",\n      rules: [{\n        // required: true,\n        message: 'Please input Supervisor!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    }, supervisorList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 56\n      }\n    }, item.name)))))), __jsx(Row, {\n      justify: \"end\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 15\n      }\n    }, __jsx(Space, {\n      size: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, __jsx(TcrbButton, {\n      className: \"default\",\n      onClick: () => {\n        setViewEditUserDetail(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 19\n      }\n    }, \"Cancel\"), __jsx(TcrbButton, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 19\n      }\n    }, \"Submit\"))))));\n  };\n\n  const FormShowUser = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }\n    }, \"Employee ID\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.employee_id), __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 13\n      }\n    }, \"Supervisor\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.supervisor)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }\n    }, \"Name\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.name), __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 13\n      }\n    }, \"Surname\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.surname)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 13\n      }\n    }, \"Username\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.username), __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }\n    }, \"E-mail\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.email)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 13\n      }\n    }, \"Status\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.status), __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 13\n      }\n    }, \"Section\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.section)), __jsx(Row, {\n      justify: \"end\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }, __jsx(TcrbButton, {\n      className: \"primary\",\n      onClick: () => {\n        setViewEditUserDetail(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 15\n      }\n    }, \"Edit\"))));\n  };\n\n  const FormAddGroup = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 15\n      }\n    }, \"Group\")), __jsx(Col, {\n      span: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => group = value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 15\n      }\n    }, optionGroupList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 55\n      }\n    }, item.name))))));\n  };\n\n  const addGroupToUser = () => {\n    groupSelect = null;\n    setModalTitle('Add Group to User');\n    setModalType('confirm');\n    setModalString(__jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => groupSelect = value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }\n    }, optionGroupList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 49\n      }\n    }, item.name))));\n    setVisible(true);\n  };\n\n  const addGroup = () => {\n    console.log(groupSelect);\n    let request = {\n      user_id: userAccessManagementStore.userSelected.id,\n      group_id: groupSelect\n    };\n    userAccessManagementStore.submitAddGroupToUser(request);\n    setVisible(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: () => goBackToUserList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  }, \"Back\"))), viewEditUserDetail ? __jsx(FormEditUser, {\n    onSubmitEditUser: openModalSubmitEditUserProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 31\n    }\n  }) : __jsx(FormShowUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 100\n    }\n  }), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: () => addGroupToUser(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }\n  }, \"Add Group To User\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: groupListInUser,\n    columns: columnGroup,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleModal, {\n    title: modalTitle,\n    type: modalType,\n    onOk: () => {\n      viewEditUserDetail ? submitEditUser() : addGroup();\n    },\n    onCancel: () => setVisible(false),\n    textCancel: 'Cancel',\n    textOk: 'Submit',\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 9\n    }\n  }));\n}));\nexport default ManageUser;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/manage-user.js"],"names":["React","useEffect","useState","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","Space","DatePicker","DeleteOutlined","EditOutlined","FormOutlined","inject","observer","orange","green","gold","TcrbButton","TcrbPopconfirm","SimpleInput","SimpleModal","addKeyToDataSource","checkDefaultStatus","userAccessManagement","moment","toJS","Option","groupSelect","dataEditUserProfile","ManageUser","props","viewEditUserDetail","setViewEditUserDetail","modalTitle","setModalTitle","modalType","setModalType","visible","setVisible","modalString","setModalString","optionGroupList","setOptionGroupList","supervisorList","setSupervisorList","sectionList","setSectionList","groupListInUser","setGroupListInUser","dateFormat","userAccessManagementStore","form","useForm","getDataGroupOptionList","getDataSectionList","length","then","result","optionSectionList","mapKeyToGroupList","userSelected","map_user_groups","console","log","Object","keys","splitMapUserGroups","goBackToUserList","nextPageIsManageUser","getSupervisorList","sectionId","getDataSupervisor","groupListNonKey","dataMapUserGroup","newUserObject","index","push","name","group","deactivateGroupSelect","record","request","user_id","id","group_id","submitDeleteGroupInUser","renderActionGroupInUser","status","request_status","textAlign","color","columnGroup","title","dataIndex","width","render","text","openModalSubmitEditUserProfile","values","submitEditUser","currentData","newData","join_date","join_data","format","last_working_date","updateUser","FormEditUser","onSubmitEditUser","employee_code","section_id","surname","resetFields","padding","required","message","paddingLeft","value","map","item","username","email","marginTop","FormShowUser","employee_id","supervisor","section","FormAddGroup","addGroupToUser","addGroup","submitAddGroupToUser"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,IAArD,EAA2DC,WAA3D,EAAwEC,OAAxE,EAAiFC,MAAjF,EAAyFC,KAAzF,EAAgGC,MAAhG,EAAwGC,KAAxG,EAA+GC,UAA/G,QAAiI,MAAjI;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,YAAvC,QAA2D,mBAA3D;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,oBAApC;AAEA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,0BAA3C;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,oBAAvD;AACA,OAAOC,oBAAP,MAAiC,IAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAa1B,MAAnB;AACA,IAAI2B,WAAW,GAAG,IAAlB;AACA,IAAIC,mBAAmB,GAAG,IAA1B;AACA,MAAMC,UAAU,GAAGjB,MAAM,CAAC,2BAAD,CAAN,CAChBC,QAAQ,CAAEiB,KAAD,IAAW;AACnB,QAAM;AAAA,OAACC,kBAAD;AAAA,OAAqBC;AAArB,MAA8CvC,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM;AAAA,OAACwC,UAAD;AAAA,OAAaC;AAAb,MAA8BzC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAAC0C,SAAD;AAAA,OAAYC;AAAZ,MAA4B3C,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAAC4C,OAAD;AAAA,OAAUC;AAAV,MAAwB7C,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAAC8C,WAAD;AAAA,OAAcC;AAAd,MAAgC/C,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACgD,eAAD;AAAA,OAAkBC;AAAlB,MAAwCjD,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAA,OAACkD,cAAD;AAAA,OAAiBC;AAAjB,MAAsCnD,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM;AAAA,OAACoD,WAAD;AAAA,OAAcC;AAAd,MAAgCrD,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACsD,eAAD;AAAA,OAAkBC;AAAlB,MAAwCvD,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMwD,UAAU,GAAG,YAAnB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAgCpB,KAAtC;AACA,QAAM,CAACqB,IAAD,IAASlD,IAAI,CAACmD,OAAL,EAAf;AAEA5D,EAAAA,SAAS,CAAC,MAAM;AACd0D,IAAAA,yBAAyB,CAACG,sBAA1B;AACAH,IAAAA,yBAAyB,CAACI,kBAA1B,GAFc,CAGd;AACA;AACD,GALQ,EAKN,EALM,CAAT;AAOA9D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0D,yBAAyB,CAACT,eAA1B,CAA0Cc,MAA1C,IAAoD,CAAxD,EAA2D;AACzDlC,MAAAA,kBAAkB,CAAC6B,yBAAyB,CAACT,eAA3B,CAAlB,CAA8De,IAA9D,CAAmEC,MAAM,IAAI;AAC3Ef,QAAAA,kBAAkB,CAACe,MAAD,CAAlB;AACD,OAFD;AAGD;AACF,GANQ,EAMN,CAACP,yBAAyB,CAACT,eAA3B,CANM,CAAT;AAQAjD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0D,yBAAyB,CAACP,cAA1B,CAAyCY,MAAzC,IAAmD,CAAvD,EAA0D;AACxDlC,MAAAA,kBAAkB,CAAC6B,yBAAyB,CAACP,cAA3B,CAAlB,CAA6Da,IAA7D,CAAkEC,MAAM,IAAI;AAC1Eb,QAAAA,iBAAiB,CAACa,MAAD,CAAjB;AACD,OAFD;AAGD;AACF,GANQ,EAMN,CAACP,yBAAyB,CAACP,cAA3B,CANM,CAAT;AAQAnD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0D,yBAAyB,CAACQ,iBAA1B,CAA4CH,MAA5C,IAAsD,CAA1D,EAA6D;AAC3DI,MAAAA,iBAAiB,CAACT,yBAAyB,CAACU,YAA1B,CAAuCC,eAAxC,CAAjB;AACD;AACF,GAJQ,EAIN,CAACX,yBAAyB,CAACQ,iBAA3B,CAJM,CAAT;AAMAlE,EAAAA,SAAS,CAAC,MAAM;AACdsE,IAAAA,OAAO,CAACC,GAAR,CAAYtC,IAAI,CAACyB,yBAAyB,CAACU,YAA3B,CAAhB;;AACA,QAAII,MAAM,CAACC,IAAP,CAAYf,yBAAyB,CAACU,YAAtC,EAAoDL,MAApD,KAA+D,CAAnE,EAAsE;AACpE;AACD,KAFD,MAEO;AACLW,MAAAA,kBAAkB,CAAChB,yBAAyB,CAACU,YAA1B,CAAuCC,eAAxC,CAAlB;AAED;AACF,GARQ,EAQN,CAACX,yBAAyB,CAACU,YAA3B,CARM,CAAT;;AAUA,QAAMO,gBAAgB,GAAG,MAAM;AAC7BjB,IAAAA,yBAAyB,CAACkB,oBAA1B,GAAiD,KAAjD;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIC,SAAD,IAAe;AACvCpB,IAAAA,yBAAyB,CAACqB,iBAA1B,CAA4CD,SAA5C;AACD,GAFD;;AAIA,QAAMX,iBAAiB,GAAIa,eAAD,IAAqB;AAC7CnD,IAAAA,kBAAkB,CAACmD,eAAD,CAAlB,CAAoChB,IAApC,CAAyCC,MAAM,IAAI;AACjDT,MAAAA,kBAAkB,CAACS,MAAD,CAAlB;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMS,kBAAkB,GAAIO,gBAAD,IAAsB;AAC/CX,IAAAA,OAAO,CAACC,GAAR,CAAYtC,IAAI,CAACgD,gBAAD,CAAhB;AACA,QAAIC,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,gBAAgB,CAAClB,MAA7C,EAAqDoB,KAAK,EAA1D,EAA8D;AAC5DD,MAAAA,aAAa,CAACE,IAAd,iCACKH,gBAAgB,CAACE,KAAD,CADrB;AAEEE,QAAAA,IAAI,EAAEJ,gBAAgB,CAACE,KAAD,CAAhB,CAAwBG,KAAxB,CAA8BD;AAFtC;AAID;;AACD7B,IAAAA,kBAAkB,CAAC0B,aAAD,CAAlB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,aAAZ;AACD,GAXD;;AAaA,QAAMK,qBAAqB,GAAIC,MAAD,IAAY;AACxC,QAAIC,OAAO,GAAG;AACZC,MAAAA,OAAO,EAAEhC,yBAAyB,CAACU,YAA1B,CAAuCuB,EADpC;AAEZC,MAAAA,QAAQ,EAAEJ,MAAM,CAACG;AAFL,KAAd;AAIAjC,IAAAA,yBAAyB,CAACmC,uBAA1B,CAAkDJ,OAAlD;AACD,GAND;;AAOA,QAAMK,uBAAuB,GAAIN,MAAD,IAAY;AAC1C,QAAIA,MAAM,CAACO,MAAP,IAAiB,QAArB,EAA+B;AAC7B,UAAIP,MAAM,CAACQ,cAAP,IAAyB,SAAzB,IAAsCR,MAAM,CAACQ,cAAP,IAAyB,QAAnE,EAA6E;AAC3E,eACE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,qBAAtB;AAA4C,UAAA,SAAS,EAAE,MAAMV,qBAAqB,CAACC,MAAD,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,KAAK,EAAE;AAAEU,YAAAA,KAAK,EAAE;AAAT,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CADF;AAOD,OARD,MAQO,IAAIV,MAAM,CAACQ,cAAP,IAAyB,SAA7B,EAAwC;AAC7C,eAAO,IAAP;AACD;AAEF,KAbD,MAaO,IAAID,MAAM,IAAI,UAAd,EAA0B;AAC/B,UAAIP,MAAM,CAACQ,cAAP,IAAyB,SAA7B,EAAwC;AACtC,eAAO,IAAP;AACD;AACF,KAJM,MAIA;AACL,aAAO,IAAP;AACD;AACF,GArBD;;AAsBA,QAAMG,WAAW,GAAG,CAClB;AACEC,IAAAA,KAAK,EAAE,EADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,KAAK,EAAE,IAHT;AAIEC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOhB,MAAP,KAAkB1D,kBAAkB,CAAC0D,MAAM,CAACO,MAAR,EAAgBP,MAAM,CAACQ,cAAvB;AAJ9C,GADkB,EAOlB;AACEI,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,SAAS,EAAE,MAFb,CAGE;;AAHF,GAPkB,EAYlB;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE,WAFb;AAGEC,IAAAA,KAAK,EAAE,KAHT;AAIEC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOhB,MAAP,KAAkBM,uBAAuB,CAACN,MAAD;AAJnD,GAZkB,CAApB;;AAoBA,QAAMiB,8BAA8B,GAAIC,MAAD,IAAY;AACjDtE,IAAAA,mBAAmB,GAAGsE,MAAtB;AACAhE,IAAAA,aAAa,CAAC,SAAD,CAAb;AACAE,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACAI,IAAAA,cAAc,CACZ;AAAK,MAAA,KAAK,EAAE;AAAEiD,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEE;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE5E,MAAM,CAAC,CAAD;AAAf,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFF,CADY,CAAd;AAMAwB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAXD;;AAaA,QAAM6D,cAAc,GAAG,MAAM;AAC3BrC,IAAAA,OAAO,CAACC,GAAR,CAAYnC,mBAAZ;AACA,QAAIqD,OAAO,GAAG;AACZmB,MAAAA,WAAW,EAAElD,yBAAyB,CAACU,YAD3B;AAEZyC,MAAAA,OAAO,kCACFzE,mBADE;AAEL0E,QAAAA,SAAS,EAAE9E,MAAM,CAACI,mBAAmB,CAAC2E,SAArB,CAAN,CAAsCC,MAAtC,CAA6C,YAA7C,CAFN;AAGLC,QAAAA,iBAAiB,EAAEjF,MAAM,CAACI,mBAAmB,CAAC6E,iBAArB,CAAN,CAA8CD,MAA9C,CAAqD,YAArD;AAHd;AAFK,KAAd;AAQAtD,IAAAA,yBAAyB,CAACwD,UAA1B,CAAqCzB,OAArC;AACD,GAXD;;AAaA,QAAM0B,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAA0B;AAC7C,WACE,MAAC,IAAD;AACE,MAAA,IAAI,EAAEzD,IADR;AAEE,MAAA,MAAM,EAAC,UAFT;AAGE,MAAA,IAAI,EAAC,eAHP;AAIE,MAAA,aAAa,EAAE;AACb,yBAAiBD,yBAAyB,CAACU,YAA1B,CAAuCiD,aAD3C;AAEb,sBAAc3D,yBAAyB,CAACU,YAA1B,CAAuCkD,UAFxC;AAGb,gBAAQ5D,yBAAyB,CAACU,YAA1B,CAAuCiB,IAHlC;AAIb,mBAAW3B,yBAAyB,CAACU,YAA1B,CAAuCmD,OAJrC;AAKb,oBAAY7D,yBAAyB,CAACU,YAA1B,CAAuCiB,IALtC;AAMb,iBAAS3B,yBAAyB,CAACU,YAA1B,CAAuCiB,IANnC;AAOb,qBAAarD,MAAM,CAAC0B,yBAAyB,CAACU,YAA1B,CAAuC0C,SAAxC,CAPN;AAQb,6BAAqB9E,MAAM,CAAC0B,yBAAyB,CAACU,YAA1B,CAAuC6C,iBAAxC;AARd,OAJjB;AAcE,MAAA,QAAQ,EAAGP,MAAD,IAAY;AACpBU,QAAAA,gBAAgB,CAACV,MAAD,CAAhB;AACA/C,QAAAA,IAAI,CAAC6D,WAAL;AACD,OAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAqBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAME,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,WAAD;AAAa,MAAA,YAAY,EAAEjE,yBAAyB,CAACU,YAA1B,CAAuCiD,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CANF,EAmBE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEO,QAAAA,WAAW,EAAE;AAAf,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAnBF,EAwBE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEF,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAErB,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,QAAQ,EAAGuB,KAAD,IAAWhD,iBAAiB,CAACgD,KAAD,CAHxC;AAIE,MAAA,YAAY,EAAEnE,yBAAyB,CAACU,YAA1B,CAAuCkD,UAJvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGjE,WAAW,CAACyE,GAAZ,CAAgB,CAACC,IAAD,EAAO5C,KAAP,KAAiB,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAE4C,IAAI,CAACpC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCoC,IAAI,CAAC1C,IAA1C,CAAjC,CANH,CATF,CADF,CAxBF,CArBF,EAmEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEoC,QAAAA,OAAO,EAAE;AAAX,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAME,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,WAAD;AAAa,MAAA,YAAY,EAAEjE,yBAAyB,CAACU,YAA1B,CAAuCiB,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CANF,EAmBE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEuC,QAAAA,WAAW,EAAE;AAAf,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAnBF,EAwBE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEF,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,WAAD;AAAa,MAAA,YAAY,EAAEjE,yBAAyB,CAACU,YAA1B,CAAuCmD,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAxBF,CAnEF,EAyGE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAME,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,WAAD;AAAa,MAAA,YAAY,EAAEjE,yBAAyB,CAACU,YAA1B,CAAuC4D,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CANF,EAmBE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEJ,QAAAA,WAAW,EAAE;AAAf,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAnBF,EAwBE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEF,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,WAAD;AAAa,MAAA,YAAY,EAAEjE,yBAAyB,CAACU,YAA1B,CAAuC6D,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAxBF,CAzGF,EA+IE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAER,QAAAA,OAAO,EAAE;AAAX,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAME,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,KADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAErB,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAsC,MAAA,MAAM,EAAE7C,UAA9C;AAA0D,MAAA,YAAY,EAAEzB,MAAM,CAAC0B,yBAAyB,CAACU,YAA1B,CAAuC0C,SAAxC,EAAmDrD,UAAnD,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CANF,EAmBE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEmE,QAAAA,WAAW,EAAE;AAAf,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAnBF,EAwBE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,mBADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEF,QAAAA,QAAQ,EAAE,KADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAErB,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAsC,MAAA,MAAM,EAAE7C,UAA9C;AAA0D,MAAA,YAAY,EAAEzB,MAAM,CAAC0B,yBAAyB,CAACU,YAA1B,CAAuC6C,iBAAxC,EAA2DxD,UAA3D,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAxBF,CA/IF,EAqLE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEgE,QAAAA,OAAO,EAAE;AAAX,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAME,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,KAAK,EAAE,CACL;AACE;AACAE,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAErB,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,QAAQ,EAAGuB,KAAD,IAAW,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CANF,EA0BE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAED,QAAAA,WAAW,EAAE;AAAf,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CA1BF,EA+BE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,KAAK,EAAE,CACL;AACE;AACAD,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,MAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAErB,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,QAAQ,EAAGuB,KAAD,IAAW,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG1E,cAAc,CAAC2E,GAAf,CAAmB,CAACC,IAAD,EAAO5C,KAAP,KAAiB,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAE4C,IAAI,CAACpC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCoC,IAAI,CAAC1C,IAA1C,CAApC,CALH,CATF,CADF,CA/BF,CArLF,EAwOE,MAAC,GAAD;AAAK,MAAA,OAAO,EAAC,KAAb;AAAmB,MAAA,KAAK,EAAE;AAAE6C,QAAAA,SAAS,EAAE;AAAb,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,IAAI,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAgC,MAAA,OAAO,EAAE,MAAM;AAAE1F,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AAA8B,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,MAAC,UAAD;AAAY,MAAA,IAAI,EAAC,SAAjB;AAA2B,MAAA,QAAQ,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CADF,CAFF,CAxOF,CADF;AAyPD,GA1PD;;AA4PA,QAAM2F,YAAY,GAAG,MAAM;AACzB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgBzE,yBAAyB,CAACU,YAA1B,CAAuCgE,WAAvD,CAFF,EAGE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgB1E,yBAAyB,CAACU,YAA1B,CAAuCiE,UAAvD,CAJF,CADF,EAOE,MAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgB3E,yBAAyB,CAACU,YAA1B,CAAuCiB,IAAvD,CAFF,EAGE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgB3B,yBAAyB,CAACU,YAA1B,CAAuCmD,OAAvD,CAJF,CAPF,EAaE,MAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgB7D,yBAAyB,CAACU,YAA1B,CAAuC4D,QAAvD,CAFF,EAGE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgBtE,yBAAyB,CAACU,YAA1B,CAAuC6D,KAAvD,CAJF,CAbF,EAmBE,MAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgBvE,yBAAyB,CAACU,YAA1B,CAAuC2B,MAAvD,CAFF,EAGE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgBrC,yBAAyB,CAACU,YAA1B,CAAuCkE,OAAvD,CAJF,CAnBF,EAyBE,MAAC,GAAD;AAAK,MAAA,OAAO,EAAC,KAAb;AAAmB,MAAA,KAAK,EAAE;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAgC,MAAA,OAAO,EAAE,MAAM;AAAE1F,QAAAA,qBAAqB,CAAC,IAAD,CAArB;AAA6B,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CAzBF,CADF;AAiCD,GAlCD;;AAmCA,QAAM+F,YAAY,GAAG,MAAM;AACzB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,KAAK,EAAE;AAAEd,QAAAA,OAAO,EAAE;AAAX,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAEnB,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,QAAQ,EAAGuB,KAAD,IAAWvC,KAAK,GAAGuC,KAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG5E,eAAe,CAAC6E,GAAhB,CAAoB,CAACC,IAAD,EAAO5C,KAAP,KAAiB,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAE4C,IAAI,CAACpC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCoC,IAAI,CAAC1C,IAA1C,CAArC,CALH,CADF,CAJF,CADF,CADF;AAkBD,GAnBD;;AAoBA,QAAMmD,cAAc,GAAG,MAAM;AAC3BrG,IAAAA,WAAW,GAAG,IAAd;AACAO,IAAAA,aAAa,CAAC,mBAAD,CAAb;AACAE,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACAI,IAAAA,cAAc,CACZ,MAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAEsD,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,QAAQ,EAAGuB,KAAD,IAAW1F,WAAW,GAAG0F,KAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG5E,eAAe,CAAC6E,GAAhB,CAAoB,CAACC,IAAD,EAAO5C,KAAP,KAAiB,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAE4C,IAAI,CAACpC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCoC,IAAI,CAAC1C,IAA1C,CAArC,CALH,CADY,CAAd;AASAvC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAdD;;AAgBA,QAAM2F,QAAQ,GAAG,MAAM;AACrBnE,IAAAA,OAAO,CAACC,GAAR,CAAYpC,WAAZ;AACA,QAAIsD,OAAO,GAAG;AACZC,MAAAA,OAAO,EAAEhC,yBAAyB,CAACU,YAA1B,CAAuCuB,EADpC;AAEZC,MAAAA,QAAQ,EAAEzD;AAFE,KAAd;AAIAuB,IAAAA,yBAAyB,CAACgF,oBAA1B,CAA+CjD,OAA/C;AACA3C,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GARD;;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE,MAAM6B,gBAAgB,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADF,EAMGpC,kBAAkB,GAAG,MAAC,YAAD;AAAc,IAAA,gBAAgB,EAAEkE,8BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAwE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN7F,EAOE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE,MAAM+B,cAAc,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,CARF,EAaE,MAAC,KAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,UAAU,EAAEjF,eAFd;AAGE,IAAA,OAAO,EAAE4C,WAHX;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAmBE,MAAC,WAAD;AACE,IAAA,KAAK,EAAE1D,UADT;AAEE,IAAA,IAAI,EAAEE,SAFR;AAGE,IAAA,IAAI,EAAE,MAAM;AACVJ,MAAAA,kBAAkB,GAAGoE,cAAc,EAAjB,GAAsB8B,QAAQ,EAAhD;AACD,KALH;AAME,IAAA,QAAQ,EAAE,MAAM3F,UAAU,CAAC,KAAD,CAN5B;AAOE,IAAA,UAAU,EAAE,QAPd;AAQE,IAAA,MAAM,EAAE,QARV;AASE,IAAA,KAAK,EAAE,GATT;AAUE,IAAA,WAAW,EAAEC,WAVf;AAWE,IAAA,OAAO,EAAEF,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAoCD,CA9gBQ,CADQ,CAAnB;AAihBA,eAAeR,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space, DatePicker } from 'antd'\nimport { DeleteOutlined, EditOutlined, FormOutlined } from '@ant-design/icons';\nimport { inject, observer } from 'mobx-react'\nimport { orange, green, gold } from '@ant-design/colors';\n\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport SimpleInput from '../../simple-input'\nimport SimpleModal from '../../simple-modal'\nimport { addKeyToDataSource, checkDefaultStatus } from '../../data-utility';\nimport userAccessManagement from '..';\nimport moment from 'moment';\nimport { toJS } from 'mobx';\n\nconst { Option } = Select;\nlet groupSelect = null\nlet dataEditUserProfile = null\nconst ManageUser = inject('userAccessManagementStore')\n  (observer((props) => {\n    const [viewEditUserDetail, setViewEditUserDetail] = useState(false)\n    const [modalTitle, setModalTitle] = useState('')\n    const [modalType, setModalType] = useState('')\n    const [visible, setVisible] = useState(false)\n    const [modalString, setModalString] = useState('')\n    const [optionGroupList, setOptionGroupList] = useState([])\n    const [supervisorList, setSupervisorList] = useState([])\n    const [sectionList, setSectionList] = useState([])\n    const [groupListInUser, setGroupListInUser] = useState([])\n    const dateFormat = 'YYYY-MM-DD'\n\n    const { userAccessManagementStore } = props\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n      userAccessManagementStore.getDataGroupOptionList()\n      userAccessManagementStore.getDataSectionList()\n      // console.log(toJS(userAccessManagementStore.userSelected))\n      // mapKeyToGroupList(userAccessManagementStore.userSelected.map_user_groups)\n    }, [])\n\n    useEffect(() => {\n      if (userAccessManagementStore.optionGroupList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.optionGroupList).then(result => {\n          setOptionGroupList(result)\n        })\n      }\n    }, [userAccessManagementStore.optionGroupList])\n\n    useEffect(() => {\n      if (userAccessManagementStore.supervisorList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.supervisorList).then(result => {\n          setSupervisorList(result)\n        })\n      }\n    }, [userAccessManagementStore.supervisorList])\n\n    useEffect(() => {\n      if (userAccessManagementStore.optionSectionList.length >= 0) {\n        mapKeyToGroupList(userAccessManagementStore.userSelected.map_user_groups)\n      }\n    }, [userAccessManagementStore.optionSectionList])\n\n    useEffect(() => {\n      console.log(toJS(userAccessManagementStore.userSelected))\n      if (Object.keys(userAccessManagementStore.userSelected).length === 0) {\n        null\n      } else {\n        splitMapUserGroups(userAccessManagementStore.userSelected.map_user_groups)\n\n      }\n    }, [userAccessManagementStore.userSelected])\n\n    const goBackToUserList = () => {\n      userAccessManagementStore.nextPageIsManageUser = false\n    }\n\n    const getSupervisorList = (sectionId) => {\n      userAccessManagementStore.getDataSupervisor(sectionId)\n    }\n\n    const mapKeyToGroupList = (groupListNonKey) => {\n      addKeyToDataSource(groupListNonKey).then(result => {\n        setGroupListInUser(result)\n      })\n    }\n\n    const splitMapUserGroups = (dataMapUserGroup) => {\n      console.log(toJS(dataMapUserGroup))\n      let newUserObject = []\n      for (let index = 0; index < dataMapUserGroup.length; index++) {\n        newUserObject.push({\n          ...dataMapUserGroup[index],\n          name: dataMapUserGroup[index].group.name\n        })\n      }\n      setGroupListInUser(newUserObject)\n      console.log(newUserObject)\n    }\n\n    const deactivateGroupSelect = (record) => {\n      let request = {\n        user_id: userAccessManagementStore.userSelected.id,\n        group_id: record.id\n      }\n      userAccessManagementStore.submitDeleteGroupInUser(request)\n    }\n    const renderActionGroupInUser = (record) => {\n      if (record.status == 'ACTIVE') {\n        if (record.request_status == 'APPROVE' || record.request_status == 'REJECT') {\n          return (\n            <div style={{ textAlign: \"center\" }}>\n              <TcrbPopconfirm title=\"Sure to Deactivate?\" onConfirm={() => deactivateGroupSelect(record)}>\n                <a style={{ color: '#FBA928' }}>Deactivate</a>\n              </TcrbPopconfirm>\n            </div>\n          )\n        } else if (record.request_status == 'PENDING') {\n          return null\n        }\n\n      } else if (status == 'INACTIVE') {\n        if (record.request_status == 'PENDING') {\n          return null\n        }\n      } else {\n        return null\n      }\n    }\n    const columnGroup = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkDefaultStatus(record.status, record.request_status)\n      },\n      {\n        title: 'Group name',\n        dataIndex: 'name',\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Action',\n        dataIndex: 'operation',\n        width: '10%',\n        render: (text, record) => renderActionGroupInUser(record)\n      }\n    ]\n\n    const openModalSubmitEditUserProfile = (values) => {\n      dataEditUserProfile = values\n      setModalTitle('Confirm')\n      setModalType('confirm')\n      setModalString(\n        <div style={{ textAlign: \"center\" }}>\n          <p>Confirm to Change UserProfile.</p>\n          <p style={{ color: orange[6] }}>Your changes will take effect after being approved.</p>\n        </div>\n      )\n      setVisible(true)\n    }\n\n    const submitEditUser = () => {\n      console.log(dataEditUserProfile)\n      let request = {\n        currentData: userAccessManagementStore.userSelected,\n        newData: {\n          ...dataEditUserProfile,\n          join_date: moment(dataEditUserProfile.join_data).format('YYYY-MM-DD'),\n          last_working_date: moment(dataEditUserProfile.last_working_date).format('YYYY-MM-DD')\n        }\n      }\n      userAccessManagementStore.updateUser(request)\n    }\n\n    const FormEditUser = ({ onSubmitEditUser }) => {\n      return (\n        <Form\n          form={form}\n          layout=\"vertical\"\n          name=\"form_in_modal\"\n          initialValues={{\n            'employee_code': userAccessManagementStore.userSelected.employee_code,\n            'section_id': userAccessManagementStore.userSelected.section_id,\n            'name': userAccessManagementStore.userSelected.name,\n            'surname': userAccessManagementStore.userSelected.surname,\n            'username': userAccessManagementStore.userSelected.name,\n            'email': userAccessManagementStore.userSelected.name,\n            'join_date': moment(userAccessManagementStore.userSelected.join_date),\n            'last_working_date': moment(userAccessManagementStore.userSelected.last_working_date)\n          }}\n          onFinish={(values) => {\n            onSubmitEditUser(values)\n            form.resetFields()\n          }}\n\n        >\n\n          <Row >\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Employee ID\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"employee_code\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.employee_code} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Section\n                </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"section_id\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input Section!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => getSupervisorList(value)}\n                  defaultValue={userAccessManagementStore.userSelected.section_id}\n                >\n                  {sectionList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n                  {/* {children} */}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row >\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Name\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"name\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.name} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Surname\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"surname\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.surname} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Username\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.username} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Email\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.email} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Join Date\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"join_date\"\n                rules={[\n                  {\n                    required: false,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <DatePicker style={{ width: '100%' }} format={dateFormat} defaultValue={moment(userAccessManagementStore.userSelected.join_date, dateFormat)} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Last working date\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"last_working_date\"\n                rules={[\n                  {\n                    required: false,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <DatePicker style={{ width: '100%' }} format={dateFormat} defaultValue={moment(userAccessManagementStore.userSelected.last_working_date, dateFormat)} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Status\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"user_status\"\n                rules={[\n                  {\n                    // required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => null}\n                >\n                  {/* {children} */}\n                </Select>\n\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Supervisor\n                </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"supervisor_id\"\n                rules={[\n                  {\n                    // required: true,\n                    message: 'Please input Supervisor!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => null}\n                >\n                  {supervisorList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row justify=\"end\" style={{ marginTop: 8 }}>\n\n            <Col span={4}>\n              <Form.Item>\n                <Space size={8}>\n\n                  <TcrbButton className=\"default\" onClick={() => { setViewEditUserDetail(false) }} >Cancel</TcrbButton>\n                  <TcrbButton type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </TcrbButton>\n                </Space>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      )\n    }\n\n    const FormShowUser = () => {\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Employee ID</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.employee_id}</Col>\n            <Col span={4}>Supervisor</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.supervisor}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Name</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.name}</Col>\n            <Col span={4}>Surname</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.surname}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Username</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.username}</Col>\n            <Col span={4}>E-mail</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.email}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Status</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.status}</Col>\n            <Col span={4}>Section</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.section}</Col>\n          </Row>\n          <Row justify=\"end\" style={{ marginTop: 8 }}>\n            <Col span={4}>\n              <TcrbButton className=\"primary\" onClick={() => { setViewEditUserDetail(true) }} >Edit</TcrbButton>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n    const FormAddGroup = () => {\n      return (\n        <div>\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Group</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => group = value}\n              >\n                {optionGroupList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n    const addGroupToUser = () => {\n      groupSelect = null\n      setModalTitle('Add Group to User')\n      setModalType('confirm')\n      setModalString(\n        <Select\n          style={{ width: '100%' }}\n          placeholder=\"Please select\"\n          onChange={(value) => groupSelect = value}\n        >\n          {optionGroupList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n        </Select>\n      )\n      setVisible(true)\n    }\n\n    const addGroup = () => {\n      console.log(groupSelect)\n      let request = {\n        user_id: userAccessManagementStore.userSelected.id,\n        group_id: groupSelect\n      }\n      userAccessManagementStore.submitAddGroupToUser(request)\n      setVisible(false)\n    }\n\n\n    return (\n      <div>\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"default\" onClick={() => goBackToUserList()} >Back</TcrbButton>\n          </Col>\n        </Row>\n        {viewEditUserDetail ? <FormEditUser onSubmitEditUser={openModalSubmitEditUserProfile} /> : <FormShowUser />}\n        <Divider />\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"primary\" onClick={() => addGroupToUser()} >Add Group To User</TcrbButton>\n          </Col>\n        </Row>\n        <Table\n          bordered\n          dataSource={groupListInUser}\n          columns={columnGroup}\n          size=\"small\"\n        />\n        <SimpleModal\n          title={modalTitle}\n          type={modalType}\n          onOk={() => {\n            viewEditUserDetail ? submitEditUser() : addGroup()\n          }}\n          onCancel={() => setVisible(false)}\n          textCancel={'Cancel'}\n          textOk={'Submit'}\n          width={600}\n          modalString={modalString}\n          visible={visible}\n        />\n\n      </div>\n    )\n  }))\n\nexport default ManageUser\n"]},"metadata":{},"sourceType":"module"}