{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport CircleButton from '../components/button-circle/circle-button'; // import Link from 'next/link'\n\nimport { TcrbButton } from '../components/antd-styles/styles';\nimport { i18n, Link, withTranslation } from '../i18n';\nvar index = inject('counterStore', 'authenStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      id = _useState[0],\n      setId = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var authenStore = props.authenStore,\n      t = props.t;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 14\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, authenStore.id ? \"ID :\" + authenStore.id : \"\"), __jsx(\"h1\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, authenStore.password ? \"Password : \" + authenStore.password : \"\"));\n}, \"q6YKsEiQbB/HjLDjguOyUUblDf0=\")));\nindex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: []\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default withTranslation('common')(index);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/pages/index.js"],"names":["React","useContext","useState","PropTypes","inject","observer","CircleButton","TcrbButton","i18n","Link","withTranslation","index","props","id","setId","password","setPassword","authenStore","t","color","getInitialProps","namespacesRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,2CAAzB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,eAArB,QAA4C,SAA5C;AAEA,IAAMC,KAAK,GACTP,MAAM,CAAC,cAAD,EAAiB,aAAjB,CAAN,CACGC,QAAQ,IAAC,UAACO,KAAD,EAAW;AAAA;;AAAA,kBACCV,QAAQ,CAAC,EAAD,CADT;AAAA,MACZW,EADY;AAAA,MACRC,KADQ;;AAAA,mBAEaZ,QAAQ,CAAC,EAAD,CAFrB;AAAA,MAEZa,QAFY;AAAA,MAEFC,WAFE;;AAAA,MAGXC,WAHW,GAGQL,KAHR,CAGXK,WAHW;AAAA,MAGEC,CAHF,GAGQN,KAHR,CAGEM,CAHF;AAKnB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,WAAW,CAACJ,EAAZ,GAAiB,SAASI,WAAW,CAACJ,EAAtC,GAA2C,EAAzE,CADK,EAEL;AAAI,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,WAAW,CAACF,QAAZ,GAAuB,gBAAgBE,WAAW,CAACF,QAAnD,GAA8D,EAA5F,CAFK,CAAP;AAID,CATQ,kCADX,CADF;AAaAJ,KAAK,CAACS,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAa;AACnCC,YAAAA,kBAAkB,EAAE;AADe,WAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAIA,eAAeX,eAAe,CAAC,QAAD,CAAf,CAA0BC,KAA1B,CAAf","sourcesContent":["import React, { useContext, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { inject, observer } from 'mobx-react'\nimport CircleButton from '../components/button-circle/circle-button'\n// import Link from 'next/link'\nimport { TcrbButton } from '../components/antd-styles/styles'\nimport { i18n, Link, withTranslation } from '../i18n'\n\nconst index =\n  inject('counterStore', 'authenStore')\n    (observer((props) => {\n      const [id, setId] = useState(\"\")\n      const [password, setPassword] = useState(\"\")\n      const { authenStore, t } = props\n\n      return <div>\n        <h1 style={{ color: 'red' }}>{authenStore.id ? \"ID :\" + authenStore.id : \"\"}</h1>\n        <h1 style={{ color: 'red' }}>{authenStore.password ? \"Password : \" + authenStore.password : \"\"}</h1>\n      </div>\n    }))\n\nindex.getInitialProps = async () => ({\n  namespacesRequired: [],\n})\n\nexport default withTranslation('common')(index)\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}