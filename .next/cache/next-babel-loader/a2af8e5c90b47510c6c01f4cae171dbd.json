{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport SimpleSwitch from '../simple-switch';\nimport { useStores } from '../../hooks/use-stores';\nimport { toJS } from 'mobx';\nvar StyledA = styled.a.withConfig({\n  displayName: \"otp-unlocking__StyledA\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.spacing.medium;\n});\n_c = StyledA;\nvar StyledSpan = styled.span.withConfig({\n  displayName: \"otp-unlocking__StyledSpan\",\n  componentId: \"r234ff-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.spacing.medium;\n});\n_c2 = StyledSpan;\nvar StyledSwitch = styled(Switch).withConfig({\n  displayName: \"otp-unlocking__StyledSwitch\",\n  componentId: \"r234ff-2\"\n})([\"\", \"\"], function (_ref3) {\n  var defaultChecked = _ref3.defaultChecked;\n  return defaultChecked && \"\\n      background-color: #F88008 !important;\\n  \";\n});\n_c3 = StyledSwitch;\nexport default function OtpUnlocking() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(''),\n      idCard = _useState[0],\n      setIdCard = _useState[1];\n\n  var _useState2 = useState(false),\n      isSearch = _useState2[0],\n      setIsSearch = _useState2[1];\n\n  var _useState3 = useState(false),\n      visible = _useState3[0],\n      setVisble = _useState3[1];\n\n  var _useState4 = useState(false),\n      isChecked = _useState4[0],\n      setIsChecked = _useState4[1];\n\n  var _useState5 = useState(''),\n      modalString = _useState5[0],\n      setModalString = _useState5[1];\n\n  var _useState6 = useState([{\n    accountNumber: '123123123123',\n    accountType: 'Binding to TCRB Mobile Banking',\n    accountStatus: true\n  }, {\n    accountNumber: '00993445123123',\n    accountType: 'Binding to Micro Pay',\n    accountStatus: false\n  }]),\n      stringSwitch = _useState6[0],\n      setStringSwitch = _useState6[1];\n\n  var _useStores = useStores(),\n      customerServicesMenuStore = _useStores.customerServicesMenuStore;\n\n  var searchIdCardNumber = function searchIdCardNumber(value) {\n    console.log('eiei search:' + value);\n    setIdCard(value);\n    setIsSearch(true);\n  };\n\n  var replaceNewDataForSetString = function replaceNewDataForSetString() {\n    var newArray = stringSwitch.filter(function (accountInfo) {\n      return accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber);\n    });\n    setStringSwitch([].concat(_toConsumableArray(newArray), [toJS(customerServicesMenuStore.accountSelected)]));\n  };\n\n  var hideModal = function hideModal() {\n    _this.setState({\n      visible: false\n    });\n  };\n\n  var _onChange = function onChange(value, switchSelected, index) {\n    console.log(switchSelected);\n\n    if (switchSelected.accountStatus === true) {\n      customerServicesMenuStore.accountSelected = switchSelected;\n      setVisble(true);\n      setIsChecked(true);\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, \"Unlocking OTP!!\"), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Account Number \", switchSelected.accountNumber)));\n    } else {// setIsChecked(false)\n    }\n  };\n\n  var unlockOTP = function unlockOTP() {\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false;\n    setVisble(false);\n    replaceNewDataForSetString();\n  };\n\n  var SwitchList = function SwitchList() {\n    var listItems = stringSwitch.map(function (string, index) {\n      return __jsx(Row, {\n        key: index,\n        gutter: [4, 8],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, __jsx(Col, {\n        span: 5,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, __jsx(StyledSwitch, {\n        defaultChecked: string.accountStatus,\n        onChange: function onChange(checked) {\n          return _onChange(checked, string, index);\n        },\n        disabled: string.accountStatus === false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }), __jsx(StyledA, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, string.accountNumber)), __jsx(Col, {\n        span: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, __jsx(StyledSpan, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, \" \", string.accountType)), __jsx(Col, {\n        span: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, string.accountStatus ? __jsx(StyledSpan, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 36\n        }\n      }, \"OTP is Locked\") : __jsx(StyledSpan, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 79\n        }\n      }, \"OTP is ready for using\")));\n    });\n    return __jsx(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: \"ID Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(SimpleSwitch, {\n    string: stringSwitch,\n    onChange: function onChange() {\n      return _onChange();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }) : '', __jsx(SimpleModal, {\n    onOk: function onOk() {\n      return unlockOTP();\n    },\n    onCancel: function onCancel() {\n      return setVisble(false);\n    },\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(OtpUnlocking, \"4a7o0VvAPnC35f2IWs339h3zVaQ=\", false, function () {\n  return [useStores];\n});\n\n_c4 = OtpUnlocking;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledA\");\n$RefreshReg$(_c2, \"StyledSpan\");\n$RefreshReg$(_c3, \"StyledSwitch\");\n$RefreshReg$(_c4, \"OtpUnlocking\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","SimpleSwitch","useStores","toJS","StyledA","a","theme","spacing","medium","StyledSpan","span","StyledSwitch","defaultChecked","OtpUnlocking","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","accountNumber","accountType","accountStatus","stringSwitch","setStringSwitch","customerServicesMenuStore","searchIdCardNumber","value","console","log","replaceNewDataForSetString","newArray","filter","accountInfo","accountSelected","hideModal","setState","onChange","switchSelected","index","textAlign","unlockOTP","SwitchList","listItems","map","string","checked","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport SimpleSwitch from '../simple-switch'\nimport { useStores } from '../../hooks/use-stores'\nimport { toJS } from 'mobx';\n\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n\n      ${({ defaultChecked }) => defaultChecked && `\n      background-color: #F88008 !important;\n  `}\n`\n\nexport default function OtpUnlocking\n  () {\n  const [idCard, setIdCard] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const [stringSwitch, setStringSwitch] = useState([{ accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true }, { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }])\n  const { customerServicesMenuStore } = useStores()\n  const searchIdCardNumber = (value) => {\n    console.log('eiei search:' + value)\n    setIdCard(value)\n    setIsSearch(true)\n  }\n\n  const replaceNewDataForSetString = () => {\n    let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber))\n    setStringSwitch([...newArray, toJS(customerServicesMenuStore.accountSelected)])\n  }\n\n  const hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  const onChange = (value, switchSelected, index) => {\n    console.log(switchSelected)\n    if (switchSelected.accountStatus === true) {\n      customerServicesMenuStore.accountSelected = switchSelected\n      setVisble(true)\n      setIsChecked(true)\n      setModalString(\n        <div style={{ textAlign: \"center\" }}>\n          <p>Unlocking OTP!!</p>\n          <p>Account Number {switchSelected.accountNumber}</p>\n        </div>\n      )\n    } else {\n      // setIsChecked(false)\n    }\n  }\n  const unlockOTP = () => {\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false\n    setVisble(false)\n    replaceNewDataForSetString()\n  }\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) =>\n      <Row key={index} gutter={[4, 8]}>\n        <Col span={5}>\n          <StyledSwitch defaultChecked={string.accountStatus} onChange={checked => onChange(checked, string, index)} disabled={string.accountStatus === false} />\n          <StyledA>{string.accountNumber}</StyledA>\n        </Col>\n        <Col span={6}>\n          <StyledSpan> {string.accountType}</StyledSpan>\n        </Col>\n        <Col span={4}>\n          {string.accountStatus ? (<StyledSpan>OTP is Locked</StyledSpan>) : (<StyledSpan>OTP is ready for using</StyledSpan>)}\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  return (\n    <div style={{ margin: 20 }}>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (\n        <SimpleSwitch string={stringSwitch} onChange={() => onChange()} />\n      ) : ('')}\n      <SimpleModal\n        onOk={() => unlockOTP()}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}