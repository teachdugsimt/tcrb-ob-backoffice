{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport { orange, green, gold } from '@ant-design/colors';\nimport SimpleModal from '../simple-modal';\nimport SimpleInput from '../simple-input';\nimport { addKeyToDataSource } from '../data-utility';\nvar Option = Select.Option;\nvar Department = inject('UserAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var UserAccessManagementStore = props.UserAccessManagementStore,\n      t = props.t;\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      settitle = _useState[1];\n\n  var _useState2 = useState(\"Submit\"),\n      textOk = _useState2[0],\n      settextOk = _useState2[1];\n\n  var _useState3 = useState(\"Add Section\"),\n      textEdit = _useState3[0],\n      setTextEdit = _useState3[1];\n\n  var _useState4 = useState(\"Cancel\"),\n      textCancel = _useState4[0],\n      settextCancel = _useState4[1];\n\n  var _useState5 = useState(\"initialState\"),\n      modalString = _useState5[0],\n      setmodalString = _useState5[1];\n\n  var _useState6 = useState(''),\n      modalType = _useState6[0],\n      setModalType = _useState6[1];\n\n  var _useState7 = useState(false),\n      visible = _useState7[0],\n      setvisible = _useState7[1];\n\n  var _useState8 = useState([]),\n      mockDataDepartment = _useState8[0],\n      setMockDataDepartment = _useState8[1];\n\n  var _useState9 = useState(false),\n      addSection = _useState9[0],\n      setAddSection = _useState9[1];\n\n  var _useState10 = useState(''),\n      editingKey = _useState10[0],\n      setEditingKey = _useState10[1];\n\n  var _useState11 = useState(''),\n      editingKeySection = _useState11[0],\n      setEditingKeySection = _useState11[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var isEditing = function isEditing(record) {\n    return record.key === editingKey;\n  };\n\n  var isEditingSection = function isEditingSection(record) {\n    return record.key === editingKeySection;\n  };\n\n  var children = [];\n\n  for (var i = 10; i < 36; i++) {\n    children.push(__jsx(Option, {\n      key: i.toString(36) + i,\n      value: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }\n    }, \"Section_\", i));\n  }\n\n  var edit = function edit(record) {\n    console.log(record);\n    form.setFieldsValue(_objectSpread({\n      department: '',\n      section: record.section,\n      status: record.status\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  var editSection = function editSection(record) {\n    console.log(record);\n    form.setFieldsValue(_objectSpread({\n      section: '',\n      status: record.status\n    }, record));\n    setEditingKeySection(record.key);\n    /* setmodalString(\n       <div>\n        <ListSection />\n      </div>\n     ) */\n  };\n\n  var cancel = function cancel() {\n    setEditingKey('');\n  };\n\n  var EditableCell = function EditableCell(_ref) {\n    var editing = _ref.editing,\n        dataIndex = _ref.dataIndex,\n        title = _ref.title,\n        inputType = _ref.inputType,\n        record = _ref.record,\n        index = _ref.index,\n        children = _ref.children,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    // const inputNode = inputType === 'number' ? <InputNumber style={{ width: \"100%\" }} /> : <Input />;\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: \"Please Input \".concat(title, \"!\")\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    })) : children);\n  };\n\n  var mockData = [{\n    status: '1',\n    department: 'Information Technology',\n    request_status: '1',\n    section: 3\n    /*  section: [{\n       section_name: 'section_1',\n       section_id: '01',\n       status: '1',\n       key: 1\n     },\n     {\n       section_name: 'section_2',\n       section_id: '02',\n       status: '1',\n       key: 2\n     },\n     {\n       section_name: 'section_3',\n       section_id: '03',\n       status: '1',\n       key: 3\n     }] */\n\n  }];\n  var mockSection = [{\n    section_name: 'section_1',\n    section_id: '01',\n    status: '1',\n    key: 1\n  }, {\n    section_name: 'section_2',\n    section_id: '02',\n    status: '1',\n    key: 2\n  }, {\n    section_name: 'section_3',\n    section_id: '03',\n    status: '1',\n    key: 3\n  }];\n  useEffect(function () {\n    //cal api\n    addKeyToDataSource(mockData).then(function (result) {\n      setMockDataDepartment(result);\n    });\n  }, []);\n  /*  const mockDataDepartment = [\n     {\n       status: '1',\n       department: 'Information Technology',\n       section: []\n     }\n   ] */\n\n  var save = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n      var row, newData, index, item;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return form.validateFields();\n\n            case 2:\n              row = _context.sent;\n              newData = _toConsumableArray(mockDataDepartment);\n              index = newData.findIndex(function (item) {\n                return key === item.key;\n              }); //waiting for call api\n\n              if (index > -1) {\n                item = newData[index];\n                newData.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n                setMockDataDepartment(newData);\n                setEditingKey('');\n              } else {\n                newData.push(row);\n                setMockDataDepartment(newData);\n                setEditingKey('');\n              } //config request api\n\n              /*  let request = {\n                 currentData: item,\n                 newData: { ...item, ...row }\n               } */\n              // setEditingKey('');\n\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function save(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var renderActionDepartment = function renderActionDepartment(record) {\n    var editable = isEditing(record);\n\n    if (record.status === '1') {\n      return editable ? __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Save?\",\n        onConfirm: function onConfirm() {\n          return save(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, \"Save\")), __jsx(TcrbPopconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: cancel,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))) : __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        disabled: editingKey !== '',\n        onClick: function onClick() {\n          return edit(record);\n        },\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 19\n        }\n      }, \"Deactivate\")));\n    } else if (record.status === '2') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  var renderActionSectionAndTeam = function renderActionSectionAndTeam(record) {\n    console.log(record);\n    var editable = isEditingSection(record);\n\n    if (record.status === '1') {\n      return editable ? __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Save?\",\n        onConfirm: function onConfirm() {\n          return save(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }\n      }, \"Save\")), __jsx(TcrbPopconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: cancel,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))) : __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        disabled: editingKeySection !== '',\n        onClick: function onClick() {\n          return editSection(record);\n        },\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 19\n        }\n      }, \"Deactivate\")));\n    } else if (record.status === '2') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  var renderSection = function renderSection(record) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 16\n      }\n    }, __jsx(\"a\", {\n      onClick: function onClick() {\n        return selectSection(record);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, record.section, \" Section\"));\n  };\n\n  var checkStatus = function checkStatus(record) {\n    if (record.status === '1') {\n      return __jsx(\"span\", {\n        style: {\n          color: green[6]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 18\n        }\n      }, \"Active\");\n    } else if (record.status === '2') {\n      return __jsx(\"span\", {\n        style: {\n          color: gold[6]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 18\n        }\n      }, \"Pending\");\n    } else {\n      return null;\n    }\n  };\n\n  var columnDepartment = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkStatus(record);\n    }\n  }, {\n    title: 'Department',\n    dataIndex: 'department',\n    editable: true // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Section / Team',\n    dataIndex: 'section',\n    render: function render(text, record) {\n      return renderSection(record);\n    }\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: function render(text, record) {\n      return renderActionDepartment(record);\n    }\n  }];\n  var columnSection = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkStatus(record);\n    }\n  }, {\n    title: 'Section / Team',\n    dataIndex: 'section_name',\n    editable: true // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    render: function render(text, record) {\n      return renderActionSectionAndTeam(record);\n    }\n  }];\n  var mergedColumnsDepartment = columnDepartment.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          inputType: 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        };\n      }\n    });\n  });\n  var mergedColumnsSection = columnSection.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          inputType: 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditingSection(record)\n        };\n      }\n    });\n  });\n\n  var AddDepartment = function AddDepartment() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }, \"Department Name\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      onChange: function onChange(value) {\n        return console.log(value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }))));\n  };\n\n  var handleChange = function handleChange(value) {\n    console.log(value);\n  };\n\n  var SelectDepartment = function SelectDepartment(props) {\n    return __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    }, \"Section / Team\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      mode: \"tags\",\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return handleChange(value);\n      },\n      defaultValue: [10, 11, 14],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }\n    })));\n  };\n\n  var ListSection = function ListSection() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      flex: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 15\n      }\n    }, __jsx(Form, {\n      form: form,\n      component: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }\n    }, __jsx(Table, {\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: mockSection,\n      columns: mergedColumnsSection,\n      size: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 19\n      }\n    })))));\n  };\n\n  var selectSection = function selectSection() {\n    setModalType('edit');\n    settitle('Edit Section and Team');\n    setmodalString(__jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }\n    }, __jsx(ListSection, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 13\n      }\n    })));\n    setvisible(true);\n  };\n\n  var openModalSection = function openModalSection() {};\n\n  var openModalAddDepartment = function openModalAddDepartment() {\n    setModalType('confirm');\n    settitle('Add New Department');\n    setmodalString(__jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }\n    }, __jsx(AddDepartment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }\n    }), __jsx(SelectDepartment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }\n    })));\n    setvisible(true);\n  };\n\n  var confirmDepartmentSelected = function confirmDepartmentSelected() {};\n\n  var onEditSection = function onEditSection() {\n    setAddSection(true);\n    setModalType('');\n    setmodalString(__jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }\n    }, __jsx(SelectDepartment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 13\n      }\n    }), __jsx(Row, {\n      justify: \"end\",\n      style: {\n        marginTop: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        textAlign: \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 15\n      }\n    }, __jsx(TcrbPopconfirm, {\n      title: \"Confirm to Add Section/Team to Department\",\n      onConfirm: function onConfirm() {\n        /*waiting for api */\n      },\n      okText: \"Confirm\",\n      cancelText: \"No\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      className: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 19\n      }\n    }, \"Add\")))), __jsx(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 13\n      }\n    }), __jsx(ListSection, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      return openModalAddDepartment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 15\n    }\n  }, \"Add\"))), __jsx(Form, {\n    form: form,\n    component: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: mockDataDepartment,\n    columns: mergedColumnsDepartment,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }\n  })), __jsx(SimpleModal, {\n    title: title,\n    type: modalType,\n    onOk: function onOk() {\n      return setvisible(false);\n    },\n    onCancel: function onCancel() {\n      return setvisible(false);\n    },\n    onEdit: function onEdit() {\n      return onEditSection();\n    },\n    textCancel: textCancel,\n    textOk: textOk,\n    textEdit: textEdit,\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 11\n    }\n  }));\n}, \"w8uEziBob0gNaEGppRlLLe31w28=\", false, function () {\n  return [Form.useForm];\n})));\nexport default Department;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","TcrbButton","TcrbPopconfirm","inject","observer","orange","green","gold","SimpleModal","SimpleInput","addKeyToDataSource","Option","Department","props","UserAccessManagementStore","t","title","settitle","textOk","settextOk","textEdit","setTextEdit","textCancel","settextCancel","modalString","setmodalString","modalType","setModalType","visible","setvisible","mockDataDepartment","setMockDataDepartment","addSection","setAddSection","editingKey","setEditingKey","editingKeySection","setEditingKeySection","useForm","form","isEditing","record","key","isEditingSection","children","i","push","toString","edit","console","log","setFieldsValue","department","section","status","editSection","cancel","EditableCell","editing","dataIndex","inputType","index","restProps","margin","required","message","mockData","request_status","mockSection","section_name","section_id","then","result","save","validateFields","row","newData","findIndex","item","splice","renderActionDepartment","editable","marginRight","color","textAlign","renderActionSectionAndTeam","renderSection","selectSection","checkStatus","columnDepartment","width","render","text","columnSection","mergedColumnsDepartment","map","col","onCell","mergedColumnsSection","AddDepartment","padding","value","handleChange","SelectDepartment","ListSection","body","cell","openModalSection","openModalAddDepartment","confirmDepartmentSelected","onEditSection","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\nimport { orange, green, gold } from '@ant-design/colors';\n\nimport SimpleModal from '../simple-modal'\nimport SimpleInput from '../simple-input'\n\nimport { addKeyToDataSource } from '../data-utility'\n\nconst { Option } = Select;\n\nconst Department =\n  inject('UserAccessManagementStore')\n    (observer((props) => {\n      const { UserAccessManagementStore, t } = props\n      const [title, settitle] = useState(\"\")\n      const [textOk, settextOk] = useState(\"Submit\")\n      const [textEdit, setTextEdit] = useState(\"Add Section\")\n      const [textCancel, settextCancel] = useState(\"Cancel\")\n      const [modalString, setmodalString] = useState(\"initialState\")\n      const [modalType, setModalType] = useState('')\n      const [visible, setvisible] = useState(false)\n      const [mockDataDepartment, setMockDataDepartment] = useState([])\n      const [addSection, setAddSection] = useState(false)\n      const [editingKey, setEditingKey] = useState('')\n      const [editingKeySection, setEditingKeySection] = useState('')\n      const [form] = Form.useForm();\n\n\n      const isEditing = record => record.key === editingKey\n\n\n      const isEditingSection = record => record.key === editingKeySection\n      const children = [];\n      for (let i = 10; i < 36; i++) {\n        children.push(<Option key={i.toString(36) + i} value={i}>Section_{i}</Option>);\n      }\n\n      const edit = record => {\n        console.log(record)\n        form.setFieldsValue({\n          department: '',\n          section: record.section,\n          status: record.status,\n          ...record,\n        });\n        setEditingKey(record.key);\n      };\n\n      const editSection = record => {\n        console.log(record)\n        form.setFieldsValue({\n          section: '',\n          status: record.status,\n          ...record,\n        })\n        setEditingKeySection(record.key)\n\n        /* setmodalString(\n\n          <div>\n            <ListSection />\n          </div>\n\n        ) */\n      };\n\n      const cancel = () => {\n        setEditingKey('');\n      };\n\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        // const inputNode = inputType === 'number' ? <InputNumber style={{ width: \"100%\" }} /> : <Input />;\n        return (\n          <td {...restProps}>\n            {editing ? (\n              <Form.Item\n                name={dataIndex}\n                style={{\n                  margin: 0\n                }}\n                rules={[\n                  {\n                    required: true,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        );\n      };\n\n\n\n      const mockData = [\n        {\n          status: '1',\n          department: 'Information Technology',\n          request_status: '1',\n          section: 3\n          /*  section: [{\n             section_name: 'section_1',\n             section_id: '01',\n             status: '1',\n             key: 1\n           },\n           {\n             section_name: 'section_2',\n             section_id: '02',\n             status: '1',\n             key: 2\n           },\n           {\n             section_name: 'section_3',\n             section_id: '03',\n             status: '1',\n             key: 3\n           }] */\n        }\n      ]\n\n      const mockSection = [{\n        section_name: 'section_1',\n        section_id: '01',\n        status: '1',\n        key: 1\n      },\n      {\n        section_name: 'section_2',\n        section_id: '02',\n        status: '1',\n        key: 2\n      },\n      {\n        section_name: 'section_3',\n        section_id: '03',\n        status: '1',\n        key: 3\n      }]\n\n\n\n      useEffect(() => {\n        //cal api\n        addKeyToDataSource(mockData).then(result => {\n          setMockDataDepartment(result)\n        })\n      }, [])\n\n      /*  const mockDataDepartment = [\n         {\n           status: '1',\n           department: 'Information Technology',\n           section: []\n         }\n       ] */\n\n      const save = async key => {\n        const row = await form.validateFields();\n        const newData = [...mockDataDepartment];\n        const index = newData.findIndex(item => key === item.key);\n\n        //waiting for call api\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, { ...item, ...row });\n          setMockDataDepartment(newData);\n          setEditingKey('');\n        } else {\n          newData.push(row);\n          setMockDataDepartment(newData);\n          setEditingKey('');\n        }\n        //config request api\n        /*  let request = {\n           currentData: item,\n           newData: { ...item, ...row }\n         } */\n        // setEditingKey('');\n      };\n\n      const renderActionDepartment = (record) => {\n        const editable = isEditing(record);\n        if (record.status === '1') {\n          return editable ? (\n            <span>\n              <TcrbPopconfirm title=\"Sure to Save?\" onConfirm={() => save(record.key)}>\n                <a style={{ marginRight: 8, }}>\n                  Save\n              </a>\n              </TcrbPopconfirm>\n              <TcrbPopconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n                <a style={{ color: '#3e3e3e' }}>Cancel</a>\n              </TcrbPopconfirm>\n            </span>\n          ) : (\n              <div style={{ textAlign: \"center\" }}>\n                {/* <TcrbPopconfirm title=\"Sure to Edit?\" onConfirm={() => edit(record)}> */}\n                <a disabled={editingKey !== ''} onClick={() => edit(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n                  Edit\n              </a>\n                {/* </TcrbPopconfirm> */}\n                <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n                  <a style={{ color: '#3e3e3e' }}>Deactivate</a>\n                </TcrbPopconfirm>\n                {/* <TcrbPopconfirm title=\"Sure to Delete?\" disabled={editingKey !== ''} onConfirm={() => deletePartnerSelect(record)}>\n                  <a><DeleteOutlined style={{ fontSize: '18px', paddingRight: 8 }} /></a>\n                </TcrbPopconfirm>\n                <a disabled={editingKey !== ''} onClick={() => edit(record)}><EditOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a> */}\n              </div>\n            );\n        } else if (record.status === '2') {\n          return null\n        } else {\n          return null\n        }\n      }\n\n      const renderActionSectionAndTeam = (record) => {\n        console.log(record)\n        const editable = isEditingSection(record);\n        if (record.status === '1') {\n          return editable ? (\n            <span>\n              <TcrbPopconfirm title=\"Sure to Save?\" onConfirm={() => save(record.key)}>\n                <a style={{ marginRight: 8, }}>\n                  Save\n              </a>\n              </TcrbPopconfirm>\n              <TcrbPopconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n                <a style={{ color: '#3e3e3e' }}>Cancel</a>\n              </TcrbPopconfirm>\n            </span>\n          ) : (\n              <div style={{ textAlign: \"center\" }}>\n                {/* <TcrbPopconfirm title=\"Sure to Edit?\" onConfirm={() => edit(record)}> */}\n                <a disabled={editingKeySection !== ''} onClick={() => editSection(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n                  Edit\n              </a>\n                {/* </TcrbPopconfirm> */}\n                <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n                  <a style={{ color: '#3e3e3e' }}>Deactivate</a>\n                </TcrbPopconfirm>\n                {/* <TcrbPopconfirm title=\"Sure to Delete?\" disabled={editingKey !== ''} onConfirm={() => deletePartnerSelect(record)}>\n                  <a><DeleteOutlined style={{ fontSize: '18px', paddingRight: 8 }} /></a>\n                </TcrbPopconfirm>\n                <a disabled={editingKey !== ''} onClick={() => edit(record)}><EditOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a> */}\n              </div>\n            );\n        } else if (record.status === '2') {\n          return null\n        } else {\n          return null\n        }\n      }\n\n      const renderSection = (record) => {\n        return <div>\n          <a onClick={() => selectSection(record)}>{record.section} Section</a>\n        </div>\n      }\n\n      const checkStatus = (record) => {\n        if (record.status === '1') {\n          return <span style={{ color: green[6] }}>Active</span>\n        } else if (record.status === '2') {\n          return <span style={{ color: gold[6] }}>Pending</span>\n        } else {\n          return null\n        }\n      }\n\n      const columnDepartment = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          render: (text, record) => checkStatus(record)\n        },\n        {\n          title: 'Department',\n          dataIndex: 'department',\n          editable: true,\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Section / Team',\n          dataIndex: 'section',\n          render: (text, record) => renderSection(record)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          width: '10%',\n          render: (text, record) => renderActionDepartment(record)\n        }\n      ]\n\n      const columnSection = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          render: (text, record) => checkStatus(record)\n        },\n        {\n          title: 'Section / Team',\n          dataIndex: 'section_name',\n          editable: true,\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          render: (text, record) => renderActionSectionAndTeam(record)\n        }\n      ]\n\n      const mergedColumnsDepartment = columnDepartment.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: 'text',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n\n      const mergedColumnsSection = columnSection.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: 'text',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditingSection(record),\n          }),\n        };\n      });\n\n      const AddDepartment = () => {\n        return (\n          <div>\n            <Row>\n              <Col span={10} style={{ padding: 4 }}>\n                <p>\n                  Department Name\n            </p>\n              </Col>\n              <Col span={14}>\n                <SimpleInput onChange={(value) => console.log(value)} />\n              </Col>\n            </Row>\n          </div>\n        )\n      }\n\n      const handleChange = (value) => {\n        console.log(value)\n      }\n\n      const SelectDepartment = (props) => {\n        return (\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Section / Team</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                mode=\"tags\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => handleChange(value)}\n                defaultValue={[10, 11, 14]}\n              >\n                {/* {children} */}\n              </Select>\n            </Col>\n          </Row>\n\n        )\n      }\n\n      const ListSection = () => {\n        return (\n          <div>\n            <Row>\n              <Col flex={100}>\n                <Form form={form} component={false}>\n\n                  <Table\n                    components={{\n                      body: {\n                        cell: EditableCell,\n                      },\n                    }}\n                    bordered\n                    dataSource={mockSection}\n                    columns={mergedColumnsSection}\n                    size=\"small\"\n                  />\n                </Form>\n              </Col>\n            </Row>\n          </div>\n        )\n      }\n\n      const selectSection = () => {\n        setModalType('edit')\n        settitle('Edit Section and Team')\n        setmodalString(\n          <div>\n            <ListSection />\n          </div>\n        )\n        setvisible(true)\n      }\n\n      const openModalSection = () => {\n\n      }\n\n      const openModalAddDepartment = () => {\n        setModalType('confirm')\n        settitle('Add New Department')\n        setmodalString(\n          <div>\n            <AddDepartment />\n            <SelectDepartment />\n          </div>\n        )\n        setvisible(true)\n      }\n\n      const confirmDepartmentSelected = () => {\n\n      }\n\n      const onEditSection = () => {\n        setAddSection(true)\n        setModalType('')\n        setmodalString(\n          <div>\n            <SelectDepartment />\n            <Row justify=\"end\" style={{ marginTop: 8 }}>\n              <Col span={4} style={{ textAlign: \"right\" }}>\n                <TcrbPopconfirm title=\"Confirm to Add Section/Team to Department\" onConfirm={() => { /*waiting for api */ }} okText=\"Confirm\" cancelText=\"No\">\n                  <Button className=\"primary\" >Add</Button>\n                </TcrbPopconfirm>\n              </Col>\n            </Row>\n            <Divider />\n            <ListSection />\n          </div>\n        )\n      }\n\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"primary\" onClick={() => openModalAddDepartment()} >Add</TcrbButton>\n            </Col>\n          </Row>\n          <Form form={form} component={false}>\n            <Table\n              components={{\n                body: {\n                  cell: EditableCell,\n                },\n              }}\n              bordered\n              dataSource={mockDataDepartment}\n              columns={mergedColumnsDepartment}\n              size=\"small\"\n            />\n          </Form>\n          <SimpleModal\n            title={title}\n            type={modalType}\n            onOk={() => setvisible(false)}\n            onCancel={() => setvisible(false)}\n            onEdit={() => onEditSection()}\n            textCancel={textCancel}\n            textOk={textOk}\n            textEdit={textEdit}\n            width={600}\n            modalString={modalString}\n            visible={visible}\n          />\n\n        </div>\n      )\n    }))\n\nexport default Department\n"]},"metadata":{},"sourceType":"module"}