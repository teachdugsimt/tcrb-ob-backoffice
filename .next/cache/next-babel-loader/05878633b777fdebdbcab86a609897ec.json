{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/pending-approvals.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Table, Popconfirm } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport { DownOutlined } from '@ant-design/icons';\nimport { withTranslation } from '../../i18n';\nimport { toJS } from 'mobx';\nconst PendingApprovals = inject('businessParametersSetupStore')(observer(props => {\n  const data = [{\n    id: 1,\n    key: 1,\n    ticket: \"PAR0000001\",\n    requestType: \"OTP Max Retrying\",\n    requestDescription: \"Change from 3 to 5\",\n    requestId: \"T630213\",\n    requestDate: \"21-May-2020\",\n    action: null\n  }];\n  const expand = {\n    expandedRowRender: record => __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 53\n      }\n    }, record.description)\n  };\n\n  const titleTable = () => 'Here is title';\n\n  const showHead = true;\n\n  const foot = () => 'Here is footer';\n\n  const page = {\n    position: 'bottom'\n  };\n  const columns = [{\n    title: 'Ticket#',\n    dataIndex: 'action'\n  }, {\n    title: 'Request Type',\n    dataIndex: 'change_type'\n  }, {\n    title: 'Request Description',\n    dataIndex: 'description'\n  }, {\n    title: 'Request ID',\n    dataIndex: 'maker_id'\n  }, {\n    title: 'Request Date',\n    dataIndex: 'requested_date'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: record => __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, __jsx(Popconfirm, {\n      title: \"Sure to Accept?\",\n      onConfirm: () => {\n        let data = {\n          allowActions: \"APPROVE\",\n          data: record,\n          id: record.id\n        };\n        businessParametersSetupStore.processPendingListApprove(data);\n        console.log(\"Record Accept: \", toJS(record));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      style: {\n        marginRight: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Accept\")), __jsx(Popconfirm, {\n      title: \"Sure to Reject?\",\n      onConfirm: () => {\n        let data = {\n          allowActions: \"REJECT\",\n          data: record,\n          id: record.id\n        };\n        businessParametersSetupStore.processPendingListApprove(data);\n        console.log(\"Record Reject: \", toJS(record));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      style: {\n        marginRight: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Reject\")))\n  }];\n  const {\n    0: expandable,\n    1: setExpandable\n  } = useState(expand);\n  const {\n    0: hasData,\n    1: setHasData\n  } = useState(true);\n  const {\n    0: top,\n    1: setTop\n  } = useState('none');\n  const {\n    0: bottom,\n    1: setBottom\n  } = useState(\"bottomRight\");\n  const {\n    0: pendingApprovalData,\n    1: setPendingApprovalData\n  } = useState([]);\n  const {\n    businessParametersSetupStore\n  } = props;\n  useEffect(() => {\n    // call api\n    const data = {\n      filter: {}\n    };\n    businessParametersSetupStore.getPendingApprove(data);\n  }, []);\n  useEffect(() => {\n    if (businessParametersSetupStore.pendingApprovals.length > 0) {\n      setPendingApprovalData(businessParametersSetupStore.pendingApprovals);\n    }\n  }, [businessParametersSetupStore.pendingApprovals]);\n  useMemo(() => {\n    // setPendingApprovalData(businessParametersSetupStore.pendingApprovals)\n    console.log('render');\n  }, []);\n\n  const handleTableLayoutChange = e => {\n    setTableLayout(e.target.value);\n  };\n\n  const handleExpandChange = enable => {\n    setExpandable(enable ? expandable : undefined);\n  };\n\n  const handleDataChange = hasData => {\n    setHasData(hasData);\n  };\n\n  const tableColumns = columns.map(item => _objectSpread({}, item));\n  return __jsx(Table, {\n    pagination: {\n      position: [top, bottom]\n    },\n    columns: tableColumns,\n    dataSource: businessParametersSetupStore.responseGetPendingApproveList // dataSource={pendingApprovalData}\n    // scroll={scroll}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  });\n}));\nexport default withTranslation('common')(PendingApprovals);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/pending-approvals.js"],"names":["React","useState","useEffect","useMemo","Table","Popconfirm","inject","observer","DownOutlined","withTranslation","toJS","PendingApprovals","props","data","id","key","ticket","requestType","requestDescription","requestId","requestDate","action","expand","expandedRowRender","record","description","titleTable","showHead","foot","page","position","columns","title","dataIndex","render","allowActions","businessParametersSetupStore","processPendingListApprove","console","log","marginRight","expandable","setExpandable","hasData","setHasData","top","setTop","bottom","setBottom","pendingApprovalData","setPendingApprovalData","filter","getPendingApprove","pendingApprovals","length","handleTableLayoutChange","e","setTableLayout","target","value","handleExpandChange","enable","undefined","handleDataChange","tableColumns","map","item","responseGetPendingApproveList"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,MAAlC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,IAAT,QAAqB,MAArB;AAIA,MAAMC,gBAAgB,GACpBL,MAAM,CAAC,8BAAD,CAAN,CACGC,QAAQ,CAAEK,KAAD,IAAW;AAGnB,QAAMC,IAAI,GAAG,CAAC;AACZC,IAAAA,EAAE,EAAE,CADQ;AACLC,IAAAA,GAAG,EAAE,CADA;AACGC,IAAAA,MAAM,EAAE,YADX;AACyBC,IAAAA,WAAW,EAAE,kBADtC;AAC0DC,IAAAA,kBAAkB,EAAE,oBAD9E;AACoGC,IAAAA,SAAS,EAAE,SAD/G;AAEZC,IAAAA,WAAW,EAAE,aAFD;AAEgBC,IAAAA,MAAM,EAAE;AAFxB,GAAD,CAAb;AAKA,QAAMC,MAAM,GAAG;AAAEC,IAAAA,iBAAiB,EAAEC,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,MAAM,CAACC,WAAX;AAA/B,GAAf;;AACA,QAAMC,UAAU,GAAG,MAAM,eAAzB;;AACA,QAAMC,QAAQ,GAAG,IAAjB;;AACA,QAAMC,IAAI,GAAG,MAAM,gBAAnB;;AACA,QAAMC,IAAI,GAAG;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAb;AACA,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GADc,EAKd;AACED,IAAAA,KAAK,EAAE,cADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GALc,EASd;AACED,IAAAA,KAAK,EAAE,qBADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GATc,EAad;AACED,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GAbc,EAiBd;AACED,IAAAA,KAAK,EAAE,cADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GAjBc,EAqBd;AACED,IAAAA,KAAK,EAAE,QADT;AAEEjB,IAAAA,GAAG,EAAE,QAFP;AAGEmB,IAAAA,MAAM,EAAGV,MAAD,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,iBAAlB;AACE,MAAA,SAAS,EAAE,MAAM;AACf,YAAIX,IAAI,GAAG;AACTsB,UAAAA,YAAY,EAAE,SADL;AAETtB,UAAAA,IAAI,EAAEW,MAFG;AAGTV,UAAAA,EAAE,EAAEU,MAAM,CAACV;AAHF,SAAX;AAKAsB,QAAAA,4BAA4B,CAACC,yBAA7B,CAAuDxB,IAAvD;AACAyB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B7B,IAAI,CAACc,MAAD,CAAnC;AACD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE;AAAG,MAAA,KAAK,EAAE;AAAEgB,QAAAA,WAAW,EAAE;AAAf,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CADF,EAeE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,iBAAlB;AACE,MAAA,SAAS,EAAE,MAAM;AACf,YAAI3B,IAAI,GAAG;AACTsB,UAAAA,YAAY,EAAE,QADL;AAETtB,UAAAA,IAAI,EAAEW,MAFG;AAGTV,UAAAA,EAAE,EAAEU,MAAM,CAACV;AAHF,SAAX;AAKAsB,QAAAA,4BAA4B,CAACC,yBAA7B,CAAuDxB,IAAvD;AACAyB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B7B,IAAI,CAACc,MAAD,CAAnC;AACD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE;AAAG,MAAA,KAAK,EAAE;AAAEgB,QAAAA,WAAW,EAAE;AAAf,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CAfF;AAJJ,GArBc,CAAhB;AA4DA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BzC,QAAQ,CAACqB,MAAD,CAA5C;AACA,QAAM;AAAA,OAACqB,OAAD;AAAA,OAAUC;AAAV,MAAwB3C,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAAC4C,GAAD;AAAA,OAAMC;AAAN,MAAgB7C,QAAQ,CAAC,MAAD,CAA9B;AACA,QAAM;AAAA,OAAC8C,MAAD;AAAA,OAASC;AAAT,MAAsB/C,QAAQ,CAAC,aAAD,CAApC;AACA,QAAM;AAAA,OAACgD,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDjD,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM;AAAEmC,IAAAA;AAAF,MAAmCxB,KAAzC;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMW,IAAI,GAAG;AACXsC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGAf,IAAAA,4BAA4B,CAACgB,iBAA7B,CAA+CvC,IAA/C;AACD,GANQ,EAMN,EANM,CAAT;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkC,4BAA4B,CAACiB,gBAA7B,CAA8CC,MAA9C,GAAuD,CAA3D,EAA8D;AAC5DJ,MAAAA,sBAAsB,CAACd,4BAA4B,CAACiB,gBAA9B,CAAtB;AACD;AACF,GAJQ,EAIN,CAACjB,4BAA4B,CAACiB,gBAA9B,CAJM,CAAT;AAMAlD,EAAAA,OAAO,CAAC,MAAM;AACZ;AACAmC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAHM,EAGJ,EAHI,CAAP;;AAIA,QAAMgB,uBAAuB,GAAGC,CAAC,IAAI;AACnCC,IAAAA,cAAc,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAGC,MAAM,IAAI;AACnCnB,IAAAA,aAAa,CAACmB,MAAM,GAAGpB,UAAH,GAAgBqB,SAAvB,CAAb;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGpB,OAAO,IAAI;AAClCC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAFD;;AAIA,QAAMqB,YAAY,GAAGjC,OAAO,CAACkC,GAAR,CAAYC,IAAI,sBAAUA,IAAV,CAAhB,CAArB;AAEA,SACE,MAAC,KAAD;AACE,IAAA,UAAU,EAAE;AAAEpC,MAAAA,QAAQ,EAAE,CAACe,GAAD,EAAME,MAAN;AAAZ,KADd;AAEE,IAAA,OAAO,EAAEiB,YAFX;AAGE,IAAA,UAAU,EAAE5B,4BAA4B,CAAC+B,6BAH3C,CAIA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CAxHQ,CADX,CADF;AA4HA,eAAe1D,eAAe,CAAC,QAAD,CAAf,CAA0BE,gBAA1B,CAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport { Table, Popconfirm } from 'antd';\nimport { inject, observer } from 'mobx-react'\nimport { DownOutlined } from '@ant-design/icons';\nimport { withTranslation } from '../../i18n'\nimport { toJS } from 'mobx';\n\n\n\nconst PendingApprovals =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n\n\n      const data = [{\n        id: 1, key: 1, ticket: \"PAR0000001\", requestType: \"OTP Max Retrying\", requestDescription: \"Change from 3 to 5\", requestId: \"T630213\",\n        requestDate: \"21-May-2020\", action: null\n      }];\n\n      const expand = { expandedRowRender: record => <p>{record.description}</p> };\n      const titleTable = () => 'Here is title';\n      const showHead = true;\n      const foot = () => 'Here is footer';\n      const page = { position: 'bottom' };\n      const columns = [\n        {\n          title: 'Ticket#',\n          dataIndex: 'action',\n        },\n        {\n          title: 'Request Type',\n          dataIndex: 'change_type',\n        },\n        {\n          title: 'Request Description',\n          dataIndex: 'description',\n        },\n        {\n          title: 'Request ID',\n          dataIndex: 'maker_id',\n        },\n        {\n          title: 'Request Date',\n          dataIndex: 'requested_date',\n        },\n        {\n          title: 'Action',\n          key: 'action',\n          render: (record) => (\n            <span>\n              <Popconfirm title=\"Sure to Accept?\"\n                onConfirm={() => {\n                  let data = {\n                    allowActions: \"APPROVE\",\n                    data: record,\n                    id: record.id\n                  }\n                  businessParametersSetupStore.processPendingListApprove(data)\n                  console.log(\"Record Accept: \", toJS(record))\n                }}\n              >\n                <a style={{ marginRight: 16 }}>Accept</a>\n              </Popconfirm>\n\n              <Popconfirm title=\"Sure to Reject?\"\n                onConfirm={() => {\n                  let data = {\n                    allowActions: \"REJECT\",\n                    data: record,\n                    id: record.id\n                  }\n                  businessParametersSetupStore.processPendingListApprove(data)\n                  console.log(\"Record Reject: \", toJS(record))\n                }}\n              >\n                <a style={{ marginRight: 16 }}>Reject</a>\n              </Popconfirm>\n            </span>\n          ),\n        },\n      ];\n\n\n\n      const [expandable, setExpandable] = useState(expand)\n      const [hasData, setHasData] = useState(true)\n      const [top, setTop] = useState('none')\n      const [bottom, setBottom] = useState(\"bottomRight\")\n      const [pendingApprovalData, setPendingApprovalData] = useState([])\n      const { businessParametersSetupStore } = props\n      useEffect(() => {\n        // call api\n        const data = {\n          filter: {}\n        }\n        businessParametersSetupStore.getPendingApprove(data)\n      }, [])\n\n      useEffect(() => {\n        if (businessParametersSetupStore.pendingApprovals.length > 0) {\n          setPendingApprovalData(businessParametersSetupStore.pendingApprovals)\n        }\n      }, [businessParametersSetupStore.pendingApprovals])\n\n      useMemo(() => {\n        // setPendingApprovalData(businessParametersSetupStore.pendingApprovals)\n        console.log('render')\n      }, [])\n      const handleTableLayoutChange = e => {\n        setTableLayout(e.target.value)\n      };\n\n      const handleExpandChange = enable => {\n        setExpandable(enable ? expandable : undefined)\n      };\n\n      const handleDataChange = hasData => {\n        setHasData(hasData)\n      };\n\n      const tableColumns = columns.map(item => ({ ...item }));\n\n      return (\n        <Table\n          pagination={{ position: [top, bottom] }}\n          columns={tableColumns}\n          dataSource={businessParametersSetupStore.responseGetPendingApproveList}\n        // dataSource={pendingApprovalData}\n        // scroll={scroll}\n        />\n      )\n    }))\n\nexport default withTranslation('common')(PendingApprovals)\n\n"]},"metadata":{},"sourceType":"module"}