{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport { checkDefaultStatus } from '../../data-utility';\nimport SimpleInput from '../../simple-input';\nvar Option = Select.Option;\nvar UserList = inject('userAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState([]),\n      mockDataUser = _useState2[0],\n      setMockDataUser = _useState2[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var userAccessManagementStore = props.userAccessManagementStore;\n  useEffect(function () {\n    setMockDataUser(testAddUser());\n  }, []);\n\n  var CollectionCreateForm = function CollectionCreateForm(_ref) {\n    var visible = _ref.visible,\n        onCreate = _ref.onCreate,\n        onCancel = _ref.onCancel;\n    return __jsx(Modal, {\n      visible: visible,\n      title: \"Add new User\",\n      okText: \"Submit\",\n      cancelText: \"Cancel\",\n      onCancel: onCancel,\n      width: 900,\n      onOk: function onOk() {\n        form.validateFields().then(function (values) {\n          form.resetFields();\n          onCreate(values);\n        })[\"catch\"](function (info) {\n          console.log('Validate Failed:', info);\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, __jsx(Form, {\n      form: form,\n      layout: \"vertical\",\n      name: \"form_in_modal\",\n      initialValues: {\n        modifier: 'public'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Employee ID\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Supervisor\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"supervisor\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return null;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Name\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Surname\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"surname\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"Username\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"Username\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"Email\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"email\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, \"Join Date\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"jonDate\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, \"Last working date\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"lastWorkingDate\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, \"Status\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"status\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return null;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, \"Section\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"section\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return null;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    }))))));\n  };\n\n  var testAddUser = function testAddUser() {\n    var newUser = [];\n\n    for (var index = 1; index < 6; index++) {\n      newUser.push({\n        id: index,\n        key: index,\n        username: \"Username_\" + index,\n        name: 'name' + index,\n        surname: 'Surname' + index,\n        supervisor: 'Supervisor' + index,\n        department: 'Department' + index,\n        groups: 3,\n        request_status: 'APPROVE'\n      });\n    }\n\n    return newUser;\n  };\n\n  var onCreate = function onCreate(values) {\n    console.log('Received values of form: ', values);\n    setVisible(false);\n  };\n\n  var viewUserDetail = function viewUserDetail(record) {\n    userAccessManagementStore.userSelected = record;\n    userAccessManagementStore.nextPageIsManageUser = true;\n  };\n\n  var renderActionUser = function renderActionUser(record) {\n    if (record.request_status == 'APPROVE') {\n      return __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          return viewUserDetail(record);\n        },\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }\n      }, \"Deactivate\")));\n    } else if (record.request_status == 'PENDING') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  var columnUser = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkDefaultStatus(record.request_status);\n    }\n  }, {\n    title: 'Username',\n    dataIndex: 'username',\n    editable: true // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Name',\n    dataIndex: 'name' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Surname',\n    dataIndex: 'surname' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Supervisor',\n    dataIndex: 'supervisor' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Department',\n    dataIndex: 'department' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Groups',\n    dataIndex: 'groups' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: function render(text, record) {\n      return renderActionUser(record);\n    }\n  }];\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      return setVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }, \"Add User\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: mockDataUser,\n    columns: columnUser,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }), __jsx(CollectionCreateForm, {\n    visible: visible,\n    onCreate: onCreate,\n    onCancel: function onCancel() {\n      setVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }));\n}, \"E0hUQVO6b7LCBGA9fgy7O3V+3C0=\", false, function () {\n  return [Form.useForm];\n})));\nexport default UserList;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","InputNumber","Divider","Button","Modal","Drawer","Form","DatePicker","Space","TcrbButton","TcrbPopconfirm","inject","observer","checkDefaultStatus","SimpleInput","Option","UserList","props","visible","setVisible","mockDataUser","setMockDataUser","useForm","form","userAccessManagementStore","testAddUser","CollectionCreateForm","onCreate","onCancel","validateFields","then","values","resetFields","info","console","log","modifier","padding","required","message","paddingLeft","width","value","type","newUser","index","push","id","key","username","name","surname","supervisor","department","groups","request_status","viewUserDetail","record","userSelected","nextPageIsManageUser","renderActionUser","textAlign","marginRight","color","columnUser","title","dataIndex","render","text","editable"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\n\nimport { checkDefaultStatus } from '../../data-utility'\nimport SimpleInput from '../../simple-input'\n\nconst { Option } = Select;\n\nconst UserList = inject('userAccessManagementStore')\n  (observer((props) => {\n    const [visible, setVisible] = useState(false)\n    const [mockDataUser, setMockDataUser] = useState([])\n    const [form] = Form.useForm();\n    const { userAccessManagementStore } = props\n\n    useEffect(() => {\n      setMockDataUser(testAddUser())\n    }, [])\n    const CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\n      return (\n        <Modal\n          visible={visible}\n          title=\"Add new User\"\n          okText=\"Submit\"\n          cancelText=\"Cancel\"\n          onCancel={onCancel}\n          width={900}\n          onOk={() => {\n            form\n              .validateFields()\n              .then(values => {\n                form.resetFields();\n                onCreate(values);\n              })\n              .catch(info => {\n                console.log('Validate Failed:', info);\n              });\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"form_in_modal\"\n            initialValues={{\n              modifier: 'public',\n            }}\n          >\n\n            <Row >\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Employee ID\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"title\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Supervisor\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"supervisor\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => null}\n                  >\n                    {/* {children} */}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row >\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Name\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Surname\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"surname\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Username\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"Username\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Email\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"email\"\n                  rules={[\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Join Date\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"jonDate\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: '100%' }} />\n\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Last working date\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"lastWorkingDate\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Status\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"status\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => null}\n                  >\n                    {/* {children} */}\n                  </Select>\n\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Section\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"section\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => null}\n                  >\n                    {/* {children} */}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n\n\n\n          </Form>\n        </Modal>\n      );\n    }\n\n    const testAddUser = () => {\n      let newUser = []\n      for (let index = 1; index < 6; index++) {\n        newUser.push(\n          {\n            id: index,\n            key: index,\n            username: \"Username_\" + index,\n            name: 'name' + index,\n            surname: 'Surname' + index,\n            supervisor: 'Supervisor' + index,\n            department: 'Department' + index,\n            groups: 3,\n            request_status: 'APPROVE'\n          }\n        )\n      }\n      return newUser\n    }\n    const onCreate = values => {\n      console.log('Received values of form: ', values);\n      setVisible(false);\n    }\n\n    const viewUserDetail = (record) => {\n      userAccessManagementStore.userSelected = record\n      userAccessManagementStore.nextPageIsManageUser = true\n    }\n\n    const renderActionUser = (record) => {\n      if (record.request_status == 'APPROVE') {\n        return (\n          <div style={{ textAlign: \"center\" }}>\n            <a onClick={() => viewUserDetail(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n              Edit\n          </a>\n            <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n              <a style={{ color: '#FBA928' }}>Deactivate</a>\n            </TcrbPopconfirm>\n          </div>\n        )\n      } else if (record.request_status == 'PENDING') {\n        return null\n      } else {\n        return null\n      }\n    }\n\n    const columnUser = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkDefaultStatus(record.request_status)\n      },\n      {\n        title: 'Username',\n        dataIndex: 'username',\n        editable: true,\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Surname',\n        dataIndex: 'surname',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Supervisor',\n        dataIndex: 'supervisor',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Department',\n        dataIndex: 'department',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Groups',\n        dataIndex: 'groups',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Action',\n        dataIndex: 'operation',\n        width: '10%',\n        render: (text, record) => renderActionUser(record)\n      }\n    ]\n\n\n    return (\n      <div>\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"primary\" onClick={() => setVisible(true)} >Add User</TcrbButton>\n          </Col>\n        </Row>\n        <Table\n          bordered\n          dataSource={mockDataUser}\n          columns={columnUser}\n          size=\"small\"\n        />\n        <CollectionCreateForm\n          visible={visible}\n          onCreate={onCreate}\n          onCancel={() => {\n            setVisible(false);\n          }}\n        />\n      </div>\n    )\n  }))\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}