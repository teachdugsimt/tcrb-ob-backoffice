{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport SimpleModal from '../simple-modal';\nimport SimpleInput from '../simple-input';\nimport { addKeyToDataSource } from '../data-utility';\nconst {\n  Option\n} = Select;\nconst Department = inject('UserAccessManagementStore')(observer(props => {\n  const {\n    UserAccessManagementStore,\n    t\n  } = props;\n  const {\n    0: title,\n    1: settitle\n  } = useState(\"\");\n  const {\n    0: textOk,\n    1: settextOk\n  } = useState(\"Ok\");\n  const {\n    0: textCancel,\n    1: settextCancel\n  } = useState(\"Cancel\");\n  const {\n    0: modalString,\n    1: setmodalString\n  } = useState(\"initialState\");\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState('');\n  const {\n    0: visible,\n    1: setvisible\n  } = useState(false);\n  const {\n    0: mockDataDepartment,\n    1: setMockDataDepartment\n  } = useState([]);\n  const {\n    0: editSection,\n    1: setEditSection\n  } = useState(false);\n  const children = [];\n\n  for (let i = 10; i < 36; i++) {\n    children.push(__jsx(Option, {\n      key: i.toString(36) + i,\n      value: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }\n    }, i.toString(36) + i));\n  }\n\n  const mockData = [{\n    status: '1',\n    department: 'Information Technology',\n    request_status: '1',\n    section: [{\n      section_name: 'section_1',\n      section_id: '01',\n      status: '1',\n      key: 1\n    }, {\n      section_name: 'section_2',\n      section_id: '02',\n      status: '1',\n      key: 2\n    }, {\n      section_name: 'section_3',\n      section_id: '03',\n      status: '1',\n      key: 3\n    }]\n  }];\n  const mockSection = [{\n    section_name: 'section_1',\n    section_id: '01',\n    status: '1',\n    key: 1\n  }, {\n    section_name: 'section_2',\n    section_id: '02',\n    status: '1',\n    key: 2\n  }, {\n    section_name: 'section_3',\n    section_id: '03',\n    status: '1',\n    key: 3\n  }];\n  useEffect(() => {\n    //cal api\n    addKeyToDataSource(mockData).then(result => {\n      setMockDataDepartment(result);\n    });\n  }, []);\n  /*  const mockDataDepartment = [\n     {\n       status: '1',\n       department: 'Information Technology',\n       section: []\n     }\n   ] */\n\n  const renderActionDepartment = record => {\n    if (record.status === '1') {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 18\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Edit?\",\n        onConfirm: () => console.log('edit'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, \"Edit\")), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, \"Deactivate\")));\n    } else {\n      return null;\n    }\n  };\n\n  const renderSection = record => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 16\n      }\n    }, __jsx(\"a\", {\n      onClick: () => selectSection(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, record.section.length, \" Section\"));\n  };\n\n  const columnDepartment = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%' // render: (text, record) => checkStatus(record)\n\n  }, {\n    title: 'Department',\n    dataIndex: 'department' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Section / Team',\n    dataIndex: 'section',\n    render: (text, record) => renderSection(record)\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    render: (text, record) => renderActionDepartment(record)\n  }];\n  const columnSection = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%' // render: (text, record) => checkStatus(record)\n\n  }, {\n    title: 'Section / Team',\n    dataIndex: 'section_name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation' // render: (text, record) => renderActionDepartment(record)\n\n  }];\n\n  const AddDepartment = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \"Department Name\")), __jsx(Col, {\n      span: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      onChange: value => console.log(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }))));\n  };\n\n  const handleChange = value => {\n    console.log(value);\n  };\n\n  const SelectDepartment = () => {\n    return __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, \"Section / Team\")), __jsx(Col, {\n      span: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      mode: \"multiple\",\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => handleChange(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, children)));\n  };\n\n  const ListSection = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      flex: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, __jsx(Table, {\n      bordered: true,\n      dataSource: mockSection,\n      columns: columnSection,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }))));\n  };\n\n  const EditSection = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    });\n  };\n\n  const selectSection = () => {\n    setModalType('edit');\n    settitle('Edit Section and Team');\n    setmodalString(__jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, __jsx(ListSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    })));\n    setvisible(true);\n  };\n\n  const openModalSection = () => {};\n\n  const openModalAddDepartment = () => {\n    settitle('Add New Department');\n    setmodalString(__jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, __jsx(AddDepartment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }), __jsx(SelectDepartment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    })));\n    setvisible(true);\n  };\n\n  const confirmDepartmentSelected = () => {};\n\n  const onEditSection = () => {\n    setEditSection(true);\n    setModalType('confirm');\n    setmodalString(__jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }\n    }, __jsx(SelectDepartment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }), __jsx(Row, {\n      justify: \"end\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, __jsx(TcrbPopconfirm, {\n      title: \"Confirm to Add Section/Team to Department\",\n      onConfirm: () => {\n        /*waiting for api */\n      },\n      okText: \"Confirm\",\n      cancelText: \"No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      shape: \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }, \"Add\")))), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }), __jsx(ListSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: () => openModalAddDepartment(),\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, \"Add\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: mockDataDepartment,\n    columns: columnDepartment,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }), __jsx(SimpleModal, {\n    title: title,\n    type: modalType,\n    onOk: () => setvisible(false),\n    onCancel: () => setvisible(false),\n    onEdit: () => onEditSection(),\n    textCancel: textCancel,\n    textOk: textOk,\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }));\n}));\nexport default Department;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","TcrbButton","TcrbPopconfirm","inject","observer","SimpleModal","SimpleInput","addKeyToDataSource","Option","Department","props","UserAccessManagementStore","t","title","settitle","textOk","settextOk","textCancel","settextCancel","modalString","setmodalString","modalType","setModalType","visible","setvisible","mockDataDepartment","setMockDataDepartment","editSection","setEditSection","children","i","push","toString","mockData","status","department","request_status","section","section_name","section_id","key","mockSection","then","result","renderActionDepartment","record","console","log","marginRight","color","renderSection","selectSection","length","columnDepartment","dataIndex","width","render","text","columnSection","AddDepartment","padding","value","handleChange","SelectDepartment","ListSection","EditSection","openModalSection","openModalAddDepartment","confirmDepartmentSelected","onEditSection","marginTop","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\n\nimport SimpleModal from '../simple-modal'\nimport SimpleInput from '../simple-input'\n\nimport { addKeyToDataSource } from '../data-utility'\n\nconst { Option } = Select;\n\nconst Department =\n  inject('UserAccessManagementStore')\n    (observer((props) => {\n      const { UserAccessManagementStore, t } = props\n      const [title, settitle] = useState(\"\")\n      const [textOk, settextOk] = useState(\"Ok\")\n      const [textCancel, settextCancel] = useState(\"Cancel\")\n      const [modalString, setmodalString] = useState(\"initialState\")\n      const [modalType, setModalType] = useState('')\n      const [visible, setvisible] = useState(false)\n      const [mockDataDepartment, setMockDataDepartment] = useState([])\n      const [editSection, setEditSection] = useState(false)\n\n      const children = [];\n      for (let i = 10; i < 36; i++) {\n        children.push(<Option key={i.toString(36) + i} value={i}>{i.toString(36) + i}</Option>);\n      }\n      const mockData = [\n        {\n          status: '1',\n          department: 'Information Technology',\n          request_status: '1',\n          section: [{\n            section_name: 'section_1',\n            section_id: '01',\n            status: '1',\n            key: 1\n          },\n          {\n            section_name: 'section_2',\n            section_id: '02',\n            status: '1',\n            key: 2\n          },\n          {\n            section_name: 'section_3',\n            section_id: '03',\n            status: '1',\n            key: 3\n          }]\n        }\n      ]\n\n      const mockSection = [{\n        section_name: 'section_1',\n        section_id: '01',\n        status: '1',\n        key: 1\n      },\n      {\n        section_name: 'section_2',\n        section_id: '02',\n        status: '1',\n        key: 2\n      },\n      {\n        section_name: 'section_3',\n        section_id: '03',\n        status: '1',\n        key: 3\n      }]\n\n      useEffect(() => {\n        //cal api\n        addKeyToDataSource(mockData).then(result => {\n          setMockDataDepartment(result)\n        })\n      }, [])\n\n      /*  const mockDataDepartment = [\n         {\n           status: '1',\n           department: 'Information Technology',\n           section: []\n         }\n       ] */\n\n\n      const renderActionDepartment = (record) => {\n        if (record.status === '1') {\n          return <span>\n            <TcrbPopconfirm title=\"Sure to Edit?\" onConfirm={() => console.log('edit')}>\n              <a style={{ marginRight: 8, }}>\n                Edit\n              </a>\n            </TcrbPopconfirm>\n            <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n              <a style={{ color: '#3e3e3e' }}>Deactivate</a>\n            </TcrbPopconfirm>\n          </span>\n        } else {\n          return null\n        }\n      }\n\n      const renderSection = (record) => {\n        return <div>\n          <a onClick={() => selectSection(record)}>{record.section.length} Section</a>\n        </div>\n      }\n\n      const columnDepartment = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          // render: (text, record) => checkStatus(record)\n        },\n        {\n          title: 'Department',\n          dataIndex: 'department',\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Section / Team',\n          dataIndex: 'section',\n          render: (text, record) => renderSection(record)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          render: (text, record) => renderActionDepartment(record)\n        }\n      ]\n\n      const columnSection = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          // render: (text, record) => checkStatus(record)\n        },\n        {\n          title: 'Section / Team',\n          dataIndex: 'section_name',\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          // render: (text, record) => renderActionDepartment(record)\n        }\n      ]\n\n      const AddDepartment = () => {\n        return (\n          <div>\n            <Row>\n              <Col span={10} style={{ padding: 4 }}>\n                <p>\n                  Department Name\n            </p>\n              </Col>\n              <Col span={14}>\n                <SimpleInput onChange={(value) => console.log(value)} />\n              </Col>\n            </Row>\n          </div>\n        )\n      }\n\n      const handleChange = (value) => {\n        console.log(value)\n      }\n\n      const SelectDepartment = () => {\n        return (\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Section / Team</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => handleChange(value)}\n              >\n                {children}\n              </Select>\n            </Col>\n          </Row>\n\n        )\n      }\n\n      const ListSection = () => {\n        return (\n          <div>\n            <Row>\n              <Col flex={100}>\n                <Table\n                  bordered\n                  dataSource={mockSection}\n                  columns={columnSection}\n                  size=\"small\"\n                />\n              </Col>\n            </Row>\n          </div>\n        )\n      }\n\n      const EditSection = () => {\n        return (\n          <div>\n\n          </div>\n        )\n      }\n\n      const selectSection = () => {\n        setModalType('edit')\n        settitle('Edit Section and Team')\n        setmodalString(\n          <div>\n            <ListSection />\n          </div>\n        )\n        setvisible(true)\n      }\n\n      const openModalSection = () => {\n\n      }\n\n      const openModalAddDepartment = () => {\n        settitle('Add New Department')\n        setmodalString(\n          <div>\n            <AddDepartment />\n            <SelectDepartment />\n          </div>\n        )\n        setvisible(true)\n      }\n\n      const confirmDepartmentSelected = () => {\n\n      }\n\n      const onEditSection = () => {\n        setEditSection(true)\n        setModalType('confirm')\n        setmodalString(\n          <div>\n            <SelectDepartment />\n            <Row justify=\"end\" style={{ marginTop: 8 }}>\n              <Col span={4} style={{ textAlign: \"right\" }}>\n                <TcrbPopconfirm title=\"Confirm to Add Section/Team to Department\" onConfirm={() => { /*waiting for api */ }} okText=\"Confirm\" cancelText=\"No\">\n                  <Button shape=\"round\" >Add</Button>\n                </TcrbPopconfirm>\n              </Col>\n            </Row>\n            <Divider />\n            <ListSection />\n          </div>\n        )\n      }\n\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"primary\" onClick={() => openModalAddDepartment()} shape=\"round\">Add</TcrbButton>\n            </Col>\n          </Row>\n          <Table\n            bordered\n            dataSource={mockDataDepartment}\n            columns={columnDepartment}\n            size=\"small\"\n          />\n          <SimpleModal\n            title={title}\n            type={modalType}\n            onOk={() => setvisible(false)}\n            onCancel={() => setvisible(false)}\n            onEdit={() => onEditSection()}\n            textCancel={textCancel}\n            textOk={textOk}\n            width={600}\n            modalString={modalString}\n            visible={visible}\n          />\n\n        </div>\n      )\n    }))\n\nexport default Department\n"]},"metadata":{},"sourceType":"module"}