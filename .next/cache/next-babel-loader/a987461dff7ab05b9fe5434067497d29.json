{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/manage-partner.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../../i18n';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Popconfirm, Space } from 'antd';\nimport { DeleteOutlined, EditOutlined, FormOutlined } from '@ant-design/icons';\nimport { orange, green, gold } from '@ant-design/colors';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { addKeyToDataSource, addCommaInData } from '../../data-utility';\nimport SimpleInput from '../../simple-input';\nimport SimpleModal from '../../simple-modal';\nimport { toJS } from 'mobx';\nlet txnLimit = null;\nlet dailyLimit = null;\nconst managePartner = inject('businessParametersSetupStore')(observer(props => {\n  const {\n    businessParametersSetupStore,\n    t\n  } = props;\n  const [form] = Form.useForm();\n  const {\n    0: editingKey,\n    1: setEditingKey\n  } = useState('');\n\n  const isEditing = record => record.key === editingKey;\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    0: isEnableEditButton,\n    1: setIsEnableEditButton\n  } = useState(true);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: titleModal,\n    1: setTitleModal\n  } = useState('');\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState(''); // var mockDataPartnerList = []\n\n  useEffect(() => {\n    //wait call api\n    businessParametersSetupStore.getDataActivePartnerBindingList(businessParametersSetupStore.productLimitDetail);\n    txnLimit = businessParametersSetupStore.productLimitDetail.transaction_limit;\n    dailyLimit = businessParametersSetupStore.productLimitDetail.daily_limit;\n  }, []);\n  useEffect(() => {\n    if (businessParametersSetupStore.responseActivePartnerBindingList.length >= 1) {\n      addKeyToDataSource(businessParametersSetupStore.responseActivePartnerBindingList).then(result => {\n        // mockDataPartnerList = result\n        setDataSource(result);\n      });\n    }\n  }, [businessParametersSetupStore.responseActivePartnerBindingList]);\n\n  const edit = record => {\n    form.setFieldsValue(_objectSpread({\n      partner_code: record.product_type,\n      partner_description: record.product_description,\n      transaction_limit: '',\n      daily_limit: ''\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const EditableCell = (_ref) => {\n    let {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children\n    } = _ref,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    const inputNode = inputType === 'number' ? __jsx(InputNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 52\n      }\n    }) : __jsx(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 70\n      }\n    });\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(Form.Item, {\n      name: dataIndex == 'product_type' ? 'product_code' : dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: inputType === 'number' ? true : false,\n        message: `Please Input ${title}!`\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, inputNode) : children);\n  };\n\n  const submitChangeProductLimitSelect = () => {\n    //call api\n    let request = {\n      // partner_code: selectPartnerAndProduct.partner_code,\n      // product_code: businessParametersSetupStore.productLimitDetail.product_code,\n      // transaction_code: '6931',\n      action: \"Update\",\n      currentData: businessParametersSetupStore.productLimitDetail,\n      newData: _objectSpread(_objectSpread({}, businessParametersSetupStore.productLimitDetail), {}, {\n        transaction_limit: txnLimit,\n        daily_limit: dailyLimit\n      }) // transaction_limit: txnLimit,\n      // daily_limit: dailyLimit\n\n    };\n    businessParametersSetupStore.changeProductLimit(request);\n    setIsEnableEditButton(true);\n    setVisble(false);\n  };\n\n  const prepareAllLimitToSubmitAndUpdate = () => {\n    setModalString( //waiting for confirm task\n    __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Confirm to Change Limit Product Code \", businessParametersSetupStore.productLimitDetail.product_type, \"  !!!\"), __jsx(\"p\", {\n      style: {\n        color: orange[6]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Your changes will take effect after being approved.\")));\n    setVisble(true);\n    setTitleModal('Confirm');\n    setModalType(\"confirm\");\n  };\n\n  const goBackToProductList = () => {\n    businessParametersSetupStore.goBack = true;\n  };\n\n  const save = async key => {\n    const row = await form.validateFields();\n    const newData = [...dataSource];\n    const index = newData.findIndex(item => key === item.key);\n    const item = newData[index];\n    /* if (index > -1) {\n      const item = newData[index];\n      console.log({ ...item, ...row })\n      newData.splice(index, 1, { ...item, ...row });\n      setDataSource(newData);\n      setEditingKey('');\n    } else {\n      newData.push(row);\n      setDataSource(newData);\n      setEditingKey('');\n    } */\n\n    let request = {\n      currentData: item,\n      newData: _objectSpread(_objectSpread({}, item), row)\n    };\n    setEditingKey('');\n    businessParametersSetupStore.submitUpdatePartnerLimit(request); // console.log(toJS(businessParametersSetupStore.productLimitDetail))\n\n    /* try {\n      const row = await form.validateFields();\n      const newData = [...mockDataPartnerList];\n      const index = newData.findIndex(item => key === item.key);\n       if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...row });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    } */\n  };\n\n  const deletePartnerSelect = record => {\n    console.log(toJS(record));\n    businessParametersSetupStore.deletePartner(record); //waiting call api\n  };\n\n  const setEditEnableLimit = () => {\n    setIsEnableEditButton(false);\n  };\n\n  const cancelEditLimit = () => {\n    setIsEnableEditButton(true);\n  };\n\n  const renderAction = record => {\n    const editable = isEditing(record);\n\n    if (record.status === '1') {\n      return editable ? __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Delete?\",\n        onConfirm: () => save(record.key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, \"Save\")), __jsx(TcrbPopconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: cancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))) : __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Delete?\",\n        disabled: editingKey !== '',\n        onConfirm: () => deletePartnerSelect(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }\n      }, __jsx(DeleteOutlined, {\n        style: {\n          fontSize: '18px',\n          paddingRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 22\n        }\n      }))), __jsx(\"a\", {\n        disabled: editingKey !== '',\n        onClick: () => edit(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }\n      }, __jsx(EditOutlined, {\n        style: {\n          fontSize: '18px',\n          color: '#FBA928'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 78\n        }\n      })));\n    } else if (record.status === '2') {\n      return null;\n    } else {\n      return null;\n    }\n\n    {\n      /* <EditOutlined /> */\n    }\n  }; //1,2 active, 3 pending\n\n\n  const checkStatus = record => {\n    if (record.status === '1') {\n      return __jsx(\"p\", {\n        style: {\n          color: green[6]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 18\n        }\n      }, \"Active\");\n    } else if (record.status === '2') {\n      return __jsx(\"p\", {\n        style: {\n          color: gold[6]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 18\n        }\n      }, \"Pending\");\n    } else {\n      return null;\n    }\n  };\n\n  const columnPartnerList = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: (text, record) => checkStatus(record)\n  }, {\n    title: 'Partner / Channel',\n    dataIndex: 'partner_code',\n    render: (text, record) => addCommaInData(text)\n  }, {\n    title: 'Partner Description',\n    dataIndex: 'partner_abbreviation',\n    render: (text, record) => addCommaInData(text)\n  }, {\n    title: 'Txn Limit',\n    dataIndex: 'transaction_limit',\n    editable: true,\n    render: (text, record) => addCommaInData(text, true)\n  }, {\n    title: ' Daily Limit',\n    dataIndex: 'daily_limit',\n    editable: true,\n    render: (text, record) => addCommaInData(text, true)\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: (text, record, index) => renderAction(record, index)\n  }];\n  const mergedColumns = columnPartnerList.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    });\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: () => goBackToProductList(),\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, \"Back\"))), __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, \"Product_Code\"), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, businessParametersSetupStore.productLimitDetail.product_type), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, \"Product_Description\"), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, businessParametersSetupStore.productLimitDetail.product_description)), __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, \"All-Channel Txn Limit\"), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, \" \", isEnableEditButton ? businessParametersSetupStore.productLimitDetail.transaction_limit : __jsx(SimpleInput, {\n    defaultValue: businessParametersSetupStore.productLimitDetail.transaction_limit,\n    halfsize: true,\n    onChange: e => txnLimit = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, \"All-Channel Daily Limit\"), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, \" \", isEnableEditButton ? businessParametersSetupStore.productLimitDetail.daily_limit : __jsx(SimpleInput, {\n    defaultValue: businessParametersSetupStore.productLimitDetail.daily_limit,\n    halfsize: true,\n    onChange: e => dailyLimit = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }))), __jsx(Row, {\n    justify: \"end\",\n    style: {\n      marginTop: 8,\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, isEnableEditButton ? __jsx(TcrbButton, {\n    shape: \"round\",\n    className: \"primary\",\n    onClick: () => {\n      setEditEnableLimit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, \"Edit\") : __jsx(Space, {\n    size: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, __jsx(TcrbButton, {\n    shape: \"round\",\n    className: \"default\",\n    onClick: () => {\n      cancelEditLimit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(TcrbButton, {\n    shape: \"round\",\n    className: \"primary\",\n    onClick: () => {\n      prepareAllLimitToSubmitAndUpdate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }, \"Submit\")))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }), __jsx(Form, {\n    form: form,\n    component: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: dataSource,\n    columns: mergedColumns,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  })), __jsx(SimpleModal, {\n    title: titleModal,\n    type: modalType,\n    onOk: () => {\n      submitChangeProductLimitSelect();\n    },\n    onCancel: () => setVisble(false),\n    textOk: t(\"confirm\"),\n    textCancel: t(\"cancel\"),\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }));\n}));\nexport default withTranslation('common')(managePartner);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/manage-partner.js"],"names":["React","useState","useEffect","inject","observer","withTranslation","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Popconfirm","Space","DeleteOutlined","EditOutlined","FormOutlined","orange","green","gold","TcrbButton","TcrbPopconfirm","addKeyToDataSource","addCommaInData","SimpleInput","SimpleModal","toJS","txnLimit","dailyLimit","managePartner","props","businessParametersSetupStore","t","form","useForm","editingKey","setEditingKey","isEditing","record","key","dataSource","setDataSource","isEnableEditButton","setIsEnableEditButton","visible","setVisble","modalString","setModalString","titleModal","setTitleModal","modalType","setModalType","getDataActivePartnerBindingList","productLimitDetail","transaction_limit","daily_limit","responseActivePartnerBindingList","length","then","result","edit","setFieldsValue","partner_code","product_type","partner_description","product_description","cancel","EditableCell","editing","dataIndex","title","inputType","index","children","restProps","inputNode","margin","required","message","submitChangeProductLimitSelect","request","action","currentData","newData","changeProductLimit","prepareAllLimitToSubmitAndUpdate","textAlign","color","goBackToProductList","goBack","save","row","validateFields","findIndex","item","submitUpdatePartnerLimit","deletePartnerSelect","console","log","deletePartner","setEditEnableLimit","cancelEditLimit","renderAction","editable","status","marginRight","fontSize","paddingRight","checkStatus","columnPartnerList","width","render","text","mergedColumns","map","col","onCell","e","marginTop","body","cell"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../../i18n'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Popconfirm, Space } from 'antd'\nimport { DeleteOutlined, EditOutlined, FormOutlined } from '@ant-design/icons';\nimport { orange, green, gold } from '@ant-design/colors';\n\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { addKeyToDataSource, addCommaInData } from '../../data-utility'\nimport SimpleInput from '../../simple-input'\nimport SimpleModal from '../../simple-modal'\nimport { toJS } from 'mobx';\n\nlet txnLimit = null\nlet dailyLimit = null\n\nconst managePartner =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const { businessParametersSetupStore, t } = props\n      const [form] = Form.useForm();\n      const [editingKey, setEditingKey] = useState('')\n      const isEditing = record => record.key === editingKey;\n      const [dataSource, setDataSource] = useState([])\n      const [isEnableEditButton, setIsEnableEditButton] = useState(true)\n      const [visible, setVisble] = useState(false)\n      const [modalString, setModalString] = useState('')\n      const [titleModal, setTitleModal] = useState('')\n      const [modalType, setModalType] = useState('')\n\n      // var mockDataPartnerList = []\n      useEffect(() => {\n        //wait call api\n        businessParametersSetupStore.getDataActivePartnerBindingList(businessParametersSetupStore.productLimitDetail)\n\n        txnLimit = businessParametersSetupStore.productLimitDetail.transaction_limit\n        dailyLimit = businessParametersSetupStore.productLimitDetail.daily_limit\n      }, [])\n\n      useEffect(() => {\n        if (businessParametersSetupStore.responseActivePartnerBindingList.length >= 1) {\n          addKeyToDataSource(businessParametersSetupStore.responseActivePartnerBindingList).then((result) => {\n            // mockDataPartnerList = result\n            setDataSource(result)\n          })\n        }\n      }, [businessParametersSetupStore.responseActivePartnerBindingList])\n\n      const edit = record => {\n        form.setFieldsValue({\n          partner_code: record.product_type,\n          partner_description: record.product_description,\n          transaction_limit: '',\n          daily_limit: '',\n          ...record,\n        });\n        setEditingKey(record.key);\n      };\n\n      const cancel = () => {\n        setEditingKey('');\n      };\n\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n        return (\n          <td {...restProps}>\n            {editing ? (\n\n              <Form.Item\n                name={dataIndex == 'product_type' ? 'product_code' : dataIndex}\n                style={{\n                  margin: 0,\n                }}\n                rules={[\n                  {\n                    required: (inputType === 'number') ? true : false,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                {inputNode}\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        );\n      };\n      const submitChangeProductLimitSelect = () => {\n        //call api\n        let request = {\n          // partner_code: selectPartnerAndProduct.partner_code,\n          // product_code: businessParametersSetupStore.productLimitDetail.product_code,\n          // transaction_code: '6931',\n          action: \"Update\",\n          currentData: businessParametersSetupStore.productLimitDetail,\n          newData: { ...businessParametersSetupStore.productLimitDetail, transaction_limit: txnLimit, daily_limit: dailyLimit },\n          // transaction_limit: txnLimit,\n          // daily_limit: dailyLimit\n        }\n        businessParametersSetupStore.changeProductLimit(request)\n        setIsEnableEditButton(true)\n        setVisble(false)\n      }\n\n      const prepareAllLimitToSubmitAndUpdate = () => {\n        setModalString(\n          //waiting for confirm task\n          <div style={{ textAlign: \"center\" }}>\n            <p>Confirm to Change Limit Product Code {businessParametersSetupStore.productLimitDetail.product_type}  !!!</p>\n            <p style={{ color: orange[6] }}>Your changes will take effect after being approved.</p>\n          </div>\n        )\n        setVisble(true)\n        setTitleModal('Confirm')\n        setModalType(\"confirm\")\n      }\n      const goBackToProductList = () => {\n        businessParametersSetupStore.goBack = true\n      }\n\n      const save = async key => {\n        const row = await form.validateFields();\n        const newData = [...dataSource];\n        const index = newData.findIndex(item => key === item.key);\n        const item = newData[index];\n\n        /* if (index > -1) {\n          const item = newData[index];\n          console.log({ ...item, ...row })\n          newData.splice(index, 1, { ...item, ...row });\n          setDataSource(newData);\n          setEditingKey('');\n        } else {\n          newData.push(row);\n          setDataSource(newData);\n          setEditingKey('');\n        } */\n        let request = {\n          currentData: item,\n          newData: { ...item, ...row }\n        }\n        setEditingKey('');\n\n        businessParametersSetupStore.submitUpdatePartnerLimit(request)\n\n        // console.log(toJS(businessParametersSetupStore.productLimitDetail))\n        /* try {\n          const row = await form.validateFields();\n          const newData = [...mockDataPartnerList];\n          const index = newData.findIndex(item => key === item.key);\n\n          if (index > -1) {\n            const item = newData[index];\n            newData.splice(index, 1, { ...item, ...row });\n            setData(newData);\n            setEditingKey('');\n          } else {\n            newData.push(row);\n            setData(newData);\n            setEditingKey('');\n          }\n        } catch (errInfo) {\n          console.log('Validate Failed:', errInfo);\n        } */\n      };\n\n      const deletePartnerSelect = (record) => {\n        console.log(toJS(record))\n        businessParametersSetupStore.deletePartner(record)\n        //waiting call api\n      }\n\n      const setEditEnableLimit = () => {\n        setIsEnableEditButton(false)\n      }\n\n      const cancelEditLimit = () => {\n        setIsEnableEditButton(true)\n      }\n\n      const renderAction = (record) => {\n        const editable = isEditing(record);\n        if (record.status === '1') {\n          return editable ? (\n            <span>\n              <TcrbPopconfirm title=\"Sure to Delete?\" onConfirm={() => save(record.key)}>\n                <a style={{ marginRight: 8, }}>\n                  Save\n              </a>\n              </TcrbPopconfirm>\n              <TcrbPopconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n                <a style={{ color: '#3e3e3e' }}>Cancel</a>\n              </TcrbPopconfirm>\n            </span>\n          ) : (\n              <div style={{ textAlign: \"center\" }}>\n                <TcrbPopconfirm title=\"Sure to Delete?\" disabled={editingKey !== ''} onConfirm={() => deletePartnerSelect(record)}>\n                  <a><DeleteOutlined style={{ fontSize: '18px', paddingRight: 8 }} /></a>\n                </TcrbPopconfirm>\n                <a disabled={editingKey !== ''} onClick={() => edit(record)}><EditOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n              </div>\n            );\n        } else if (record.status === '2') {\n          return null\n        } else {\n          return null\n        }\n\n        {/* <EditOutlined /> */ }\n      }\n      //1,2 active, 3 pending\n      const checkStatus = (record) => {\n        if (record.status === '1') {\n          return <p style={{ color: green[6] }}>Active</p>\n        } else if (record.status === '2') {\n          return <p style={{ color: gold[6] }}>Pending</p>\n        } else {\n          return null\n        }\n      }\n      const columnPartnerList = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          render: (text, record) => checkStatus(record)\n        },\n        {\n          title: 'Partner / Channel',\n          dataIndex: 'partner_code',\n          render: (text, record) => addCommaInData(text)\n        },\n        {\n          title: 'Partner Description',\n          dataIndex: 'partner_abbreviation',\n          render: (text, record) => addCommaInData(text)\n        },\n        {\n          title: 'Txn Limit',\n          dataIndex: 'transaction_limit',\n          editable: true,\n          render: (text, record) => addCommaInData(text, true)\n        },\n        {\n          title: ' Daily Limit',\n          dataIndex: 'daily_limit',\n          editable: true,\n          render: (text, record) => addCommaInData(text, true)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          width: '10%',\n          render: (text, record, index) =>\n            renderAction(record, index)\n        },\n      ]\n      const mergedColumns = columnPartnerList.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"default\" onClick={() => goBackToProductList()} shape=\"round\">Back</TcrbButton>\n            </Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={6}>Product_Code</Col>\n            <Col span={6}>{businessParametersSetupStore.productLimitDetail.product_type}</Col>\n            <Col span={6}>Product_Description</Col>\n            <Col span={6}>{businessParametersSetupStore.productLimitDetail.product_description}</Col>\n\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={6}>All-Channel Txn Limit</Col>\n            {/* <Col span={6}>{businessParametersSetupStore.productLimitDetail.transaction_limit}</Col> */}\n            <Col span={6}> {isEnableEditButton ?\n              businessParametersSetupStore.productLimitDetail.transaction_limit :\n              <SimpleInput defaultValue={businessParametersSetupStore.productLimitDetail.transaction_limit} halfsize={true} onChange={(e) => txnLimit = e} />}\n            </Col>\n\n            <Col span={6}>All-Channel Daily Limit</Col>\n            {/* <Col span={6}>{businessParametersSetupStore.productLimitDetail.daily_limit}</Col> */}\n            <Col span={6}> {isEnableEditButton ?\n              businessParametersSetupStore.productLimitDetail.daily_limit :\n              <SimpleInput defaultValue={businessParametersSetupStore.productLimitDetail.daily_limit} halfsize={true} onChange={(e) => dailyLimit = e} />}\n            </Col>\n          </Row>\n          <Row justify=\"end\" style={{ marginTop: 8, textAlign: \"right\" }}>\n            {/* <Col span={2}>\n              <TcrbButton className=\"default\" onClick={() => goBackToProductList()} shape=\"round\">Back</TcrbButton>\n            </Col> */}\n            <Col span={4}>\n              {isEnableEditButton ? (\n                <TcrbButton shape=\"round\" className=\"primary\" onClick={() => { setEditEnableLimit() }}>Edit</TcrbButton>\n              ) : (\n                  <Space size={8}>\n                    <TcrbButton shape=\"round\" className=\"default\" onClick={() => { cancelEditLimit() }}>Cancel</TcrbButton>\n                    <TcrbButton shape=\"round\" className=\"primary\" onClick={() => { prepareAllLimitToSubmitAndUpdate() }}>Submit</TcrbButton>\n                  </Space>\n                )}\n            </Col>\n          </Row>\n          <Divider />\n          <Form form={form} component={false}>\n            <Table\n              components={{\n                body: {\n                  cell: EditableCell,\n                },\n              }}\n              bordered\n              dataSource={dataSource}\n              columns={mergedColumns}\n              size=\"small\"\n            />\n          </Form>\n          <SimpleModal\n            title={titleModal}\n            type={modalType}\n            onOk={() => { submitChangeProductLimitSelect() }}\n            onCancel={() => setVisble(false)}\n            textOk={t(\"confirm\")}\n            textCancel={t(\"cancel\")}\n            modalString={modalString}\n            visible={visible}\n          />\n        </div>\n      )\n    }))\nexport default withTranslation('common')(managePartner)\n"]},"metadata":{},"sourceType":"module"}