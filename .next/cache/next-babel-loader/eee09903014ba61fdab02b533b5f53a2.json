{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _temp;\n\nimport { observable, action, toJS } from 'mobx';\nimport { StartupApi } from '../services';\nimport getGeneralApiProblem from '../services/api-integrations/ErrorHandler';\nvar CustomerServicesMenuStore = (_class = (_temp = function CustomerServicesMenuStore() {\n  _classCallCheck(this, CustomerServicesMenuStore);\n\n  _initializerDefineProperty(this, \"citizenId\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"accountId\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"accountSelected\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"accountInfoFetching\", _descriptor4, this);\n\n  _initializerDefineProperty(this, \"accountInfo\", _descriptor5, this);\n\n  _initializerDefineProperty(this, \"arrayAccountInfo\", _descriptor6, this);\n\n  _initializerDefineProperty(this, \"accountInfoError\", _descriptor7, this);\n\n  _initializerDefineProperty(this, \"unlockOtpError\", _descriptor8, this);\n\n  _initializerDefineProperty(this, \"unlockOtpInfo\", _descriptor9, this);\n\n  _initializerDefineProperty(this, \"getData\", _descriptor10, this);\n\n  _initializerDefineProperty(this, \"submitUnlockOTP\", _descriptor11, this);\n\n  _initializerDefineProperty(this, \"getDataAccountUnbind\", _descriptor12, this);\n\n  _initializerDefineProperty(this, \"setCitizenId\", _descriptor13, this);\n\n  _initializerDefineProperty(this, \"setAccountId\", _descriptor14, this);\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"citizenId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"accountId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"accountSelected\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"accountInfoFetching\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"accountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"arrayAccountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"accountInfoError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"unlockOtpError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"unlockOtpInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"getData\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(citizenId) {\n        var temp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.citizenId = {\n                  idCard: citizenId\n                };\n                _this.accountInfoFetching = true;\n                _context.next = 4;\n                return StartupApi.getAccountInfo(_this.citizenId);\n\n              case 4:\n                temp = _context.sent;\n\n                if (temp.ok && temp.data.statusCode === 200) {\n                  _this.accountInfoFetching = false;\n                  _this.accountInfo = temp.data;\n                } else {\n                  _this.accountInfoFetching = false; // let problem = getGeneralApiProblem(response)\n\n                  _this.accountInfoError = JSON.parse(temp.data.body);\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"submitUnlockOTP\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var temp;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // this.accountSelected\n              _this2.accountInfoFetching = true;\n              _context2.next = 3;\n              return StartupApi.unlockOTPAccount();\n\n            case 3:\n              temp = _context2.sent;\n              console.log(temp);\n\n              if (temp.ok && temp.data.statusCode === 200) {\n                _this2.accountInfoFetching = false;\n                _this2.unlockOtpInfo = temp.data;\n              } else {\n                _this2.accountInfoFetching = false;\n                _this2.unlockOtpError = JSON.parse(temp.data.body);\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"getDataAccountUnbind\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"setCitizenId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function (id) {\n      _this3.citizenId = {\n        idCard: id\n      };\n    };\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"setAccountId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return function (id) {\n      _this4.accountId = id;\n    };\n  }\n})), _class);\nexport default CustomerServicesMenuStore;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/customer-services-menu-store.js"],"names":["observable","action","toJS","StartupApi","getGeneralApiProblem","CustomerServicesMenuStore","citizenId","idCard","accountInfoFetching","getAccountInfo","temp","ok","data","statusCode","accountInfo","accountInfoError","JSON","parse","body","unlockOTPAccount","console","log","unlockOtpInfo","unlockOtpError","id","accountId"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,oBAAP,MAAiC,2CAAjC;IAEMC,yB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oFACHL,U;;;;;WAAuB,E;;6EACvBA,U;;;;;WAAuB,E;;mFACvBA,U;;;;;WAA6B,E;;uFAC7BA,U;;;;;WAAiC,K;;+EACjCA,U;;;;;WAAyB,I;;oFACzBA,U;;;;;WAA8B,E;;oFAC9BA,U;;;;;WAA8B,E;;kFAC9BA,U;;;;;WAA4B,E;;iFAC5BA,U;;;;;WAA2B,I;;4EAE3BC,M;;;;;;;;0EAAiB,iBAAOK,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,gBAAA,KAAI,CAACA,SAAL,GAAiB;AAAEC,kBAAAA,MAAM,EAAED;AAAV,iBAAjB;AACA,gBAAA,KAAI,CAACE,mBAAL,GAA2B,IAA3B;AAFgB;AAAA,uBAGCL,UAAU,CAACM,cAAX,CAA0B,KAAI,CAACH,SAA/B,CAHD;;AAAA;AAGZI,gBAAAA,IAHY;;AAIhB,oBAAIA,IAAI,CAACC,EAAL,IAAWD,IAAI,CAACE,IAAL,CAAUC,UAAV,KAAyB,GAAxC,EAA6C;AAC3C,kBAAA,KAAI,CAACL,mBAAL,GAA2B,KAA3B;AACA,kBAAA,KAAI,CAACM,WAAL,GAAmBJ,IAAI,CAACE,IAAxB;AACD,iBAHD,MAGO;AACL,kBAAA,KAAI,CAACJ,mBAAL,GAA2B,KAA3B,CADK,CAEL;;AACA,kBAAA,KAAI,CAACO,gBAAL,GAAwBC,IAAI,CAACC,KAAL,CAAWP,IAAI,CAACE,IAAL,CAAUM,IAArB,CAAxB;AACD;;AAXe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;oFAajBjB,M;;;;;;;iFAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB;AACA,cAAA,MAAI,CAACO,mBAAL,GAA2B,IAA3B;AAFwB;AAAA,qBAGPL,UAAU,CAACgB,gBAAX,EAHO;;AAAA;AAGpBT,cAAAA,IAHoB;AAIxBU,cAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;;AACA,kBAAIA,IAAI,CAACC,EAAL,IAAWD,IAAI,CAACE,IAAL,CAAUC,UAAV,KAAyB,GAAxC,EAA6C;AAC3C,gBAAA,MAAI,CAACL,mBAAL,GAA2B,KAA3B;AACA,gBAAA,MAAI,CAACc,aAAL,GAAqBZ,IAAI,CAACE,IAA1B;AAED,eAJD,MAIO;AACL,gBAAA,MAAI,CAACJ,mBAAL,GAA2B,KAA3B;AACA,gBAAA,MAAI,CAACe,cAAL,GAAsBP,IAAI,CAACC,KAAL,CAAWP,IAAI,CAACE,IAAL,CAAUM,IAArB,CAAtB;AACD;;AAZuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;yFAczBjB,M;;;;;iFAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;iFAG9BA,M;;;;;;;WAAsB,UAACuB,EAAD,EAAQ;AAC7B,MAAA,MAAI,CAAClB,SAAL,GAAiB;AAAEC,QAAAA,MAAM,EAAEiB;AAAV,OAAjB;AACD,K;;iFACAvB,M;;;;;;;WAAsB,UAACuB,EAAD,EAAQ;AAC7B,MAAA,MAAI,CAACC,SAAL,GAAiBD,EAAjB;AACD,K;;;AAEH,eAAenB,yBAAf","sourcesContent":["import { observable, action, toJS } from 'mobx'\nimport { StartupApi } from '../services'\nimport getGeneralApiProblem from '../services/api-integrations/ErrorHandler'\n\nclass CustomerServicesMenuStore {\n  @observable citizenId = ''\n  @observable accountId = {}\n  @observable accountSelected = {}\n  @observable accountInfoFetching = false\n  @observable accountInfo = null\n  @observable arrayAccountInfo = []\n  @observable accountInfoError = {}\n  @observable unlockOtpError = []\n  @observable unlockOtpInfo = null\n\n  @action getData = async (citizenId) => {\n    this.citizenId = { idCard: citizenId }\n    this.accountInfoFetching = true\n    let temp = await StartupApi.getAccountInfo(this.citizenId)\n    if (temp.ok && temp.data.statusCode === 200) {\n      this.accountInfoFetching = false\n      this.accountInfo = temp.data\n    } else {\n      this.accountInfoFetching = false\n      // let problem = getGeneralApiProblem(response)\n      this.accountInfoError = JSON.parse(temp.data.body)\n    }\n  }\n  @action submitUnlockOTP = async () => {\n    // this.accountSelected\n    this.accountInfoFetching = true\n    let temp = await StartupApi.unlockOTPAccount()\n    console.log(temp)\n    if (temp.ok && temp.data.statusCode === 200) {\n      this.accountInfoFetching = false\n      this.unlockOtpInfo = temp.data\n\n    } else {\n      this.accountInfoFetching = false\n      this.unlockOtpError = JSON.parse(temp.data.body)\n    }\n  }\n  @action getDataAccountUnbind = async () => {\n\n  }\n  @action setCitizenId = (id) => {\n    this.citizenId = { idCard: id }\n  }\n  @action setAccountId = (id) => {\n    this.accountId = id\n  }\n}\nexport default CustomerServicesMenuStore\n"]},"metadata":{},"sourceType":"module"}