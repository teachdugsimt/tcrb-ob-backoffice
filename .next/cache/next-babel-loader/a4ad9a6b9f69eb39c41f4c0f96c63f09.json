{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, createRef } from 'react';\nimport { DeleteOutlined, SettingOutlined, FormOutlined } from '@ant-design/icons';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber } from 'antd';\nimport { green } from '@ant-design/colors';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../i18n';\nimport styled from 'styled-components';\nimport { toJS } from 'mobx';\nimport SimpleMenu from '../simple-menu';\nimport SimpleInput from '../simple-input';\nimport SimpleModal from '../simple-modal';\nimport { TcrbButton, TcrbPopconfirm } from '../antd-styles/styles';\nconst {\n  Option\n} = Select;\nlet txnLimit = null;\nlet dailyLimit = null;\nconst ProductLimitSetup = inject('businessParametersSetupStore')(observer(props => {\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    0: viewDetailProduct,\n    1: setViewDetailProduct\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: showLimitPartner,\n    1: setShowLimitPartner\n  } = useState(false);\n  const {\n    0: editingKey,\n    1: setEditingKey\n  } = useState('');\n  const {\n    0: titleModal,\n    1: setTitleModal\n  } = useState('');\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState('');\n  const {\n    0: selectPartnerAndProduct,\n    1: setSelectPartnerAndProduct\n  } = useState({});\n  const {\n    0: channelPartnerList,\n    1: setChannelPartnerList\n  } = useState([]);\n  const {\n    0: productList,\n    1: setProductList\n  } = useState([]);\n  const {\n    0: viewSpecificProduct,\n    1: setViewSpecificProduct\n  } = useState(false);\n  const {\n    businessParametersSetupStore,\n    t\n  } = props;\n  const {\n    0: disabledButtonAddRow,\n    1: setDisabledButtonAddRow\n  } = useState(false);\n  const [form] = Form.useForm(); // var selectPartnerAndProduct = {}\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue(_objectSpread({\n      product_type: '',\n      product_description: '',\n      transaction_limit: '',\n      daily_limit: '',\n      Specific: ''\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  const EditableCell = (_ref) => {\n    let {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children\n    } = _ref,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    const inputNode = inputType === 'number' ? __jsx(InputNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 52\n      }\n    }) : __jsx(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 70\n      }\n    });\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(Form.Item, {\n      name: dataIndex == 'product_type' ? 'product_code' : dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: inputType === 'number' ? true : false,\n        message: `Please Input ${title}!`\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, dataIndex == 'product_type' ? __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, productList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.product_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 55\n      }\n    }, item.product_type))) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, inputNode)) : children);\n  };\n\n  useEffect(() => {\n    // setDataSource(mockDataSource)\n    businessParametersSetupStore.getDataProductLimit();\n    businessParametersSetupStore.getDataChannelPartnerList();\n    businessParametersSetupStore.getDataProductList();\n  }, []);\n  useEffect(() => {\n    if (businessParametersSetupStore.productLimit.length > 0) {\n      addKeyToDataSource(businessParametersSetupStore.productLimit).then(result => {\n        businessParametersSetupStore.arrayProductLimit = result;\n        setDataSource(result);\n      });\n    }\n  }, [businessParametersSetupStore.productLimit]);\n  useEffect(() => {\n    //if(businessParametersSetupStore.productLimitDetail)\n    console.log(toJS(businessParametersSetupStore.productLimitDetail));\n\n    if (businessParametersSetupStore.productLimitDetail != null) {\n      setViewDetailProduct(true);\n    }\n  }, [businessParametersSetupStore.productLimitDetail]);\n  useEffect(() => {\n    if (businessParametersSetupStore.channelPartnerList.length > 1) {\n      setChannelPartnerList(businessParametersSetupStore.channelPartnerList);\n    }\n  }, [businessParametersSetupStore.channelPartnerList]);\n  useEffect(() => {\n    if (businessParametersSetupStore.productList.length > 1) {\n      setProductList(businessParametersSetupStore.productList);\n    }\n  }, [businessParametersSetupStore.productList]);\n  useEffect(() => {\n    txnLimit, dailyLimit = '';\n  }, [showLimitPartner]);\n\n  const handleDelete = key => {\n    // const dataSource = [...this.state.dataSource];\n    // setDataSource(dataSource.filter(item => item.key !== key))\n    console.log(key);\n  };\n\n  const addKeyToDataSource = arrayDataSource => {\n    let newDataSource = arrayDataSource;\n\n    for (let index = 0; index < newDataSource.length; index++) {\n      newDataSource[index].key = index + 1;\n    }\n\n    return new Promise(resolve => {\n      resolve(newDataSource);\n    });\n  };\n\n  const convertToArrayOptionSelect = arrayObject => {\n    let result = arrayObject.map(partnerList => [partnerList.partner_code, partnerList.partner_code + '/' + partnerList.partner_abbreviation]);\n    return new Promise(resolve => resolve(result));\n  };\n\n  const prepareAllLimitToSubmitAndUpdate = () => {\n    if (viewSpecificProduct) {\n      // submitAddSpecificLimit()\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      }, \" Add Partner \", selectPartnerAndProduct.type, \" \")));\n    } else {\n      // submitChangeProductLimitSelect()\n      setModalString( //waiting for confirm task\n      __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }, \" Change Product Code \", selectPartnerAndProduct.partner_code, \" Limit \"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      }, \"for \", selectPartnerAndProduct.partner_code, \"/\", selectPartnerAndProduct.partner_abbreviation, \" Channel/Partner !!!\")));\n    }\n\n    setVisble(true);\n    setTitleModal('Confirm');\n    setModalType(\"confirm\");\n  };\n\n  const submitChangeLimit = () => {// txnLimit, dailyLimit\n    // call api\n  };\n\n  const submitAddSpecificLimit = () => {\n    businessParametersSetupStore.addSpecificLimit();\n    let data = {\n      newData: {\n        partner_code: selectPartnerAndProduct.partner_code,\n        product_code: selectPartnerAndProduct.product_code,\n        transaction_code: '6931',\n        transaction_limit: txnLimit,\n        daily_limit: dailyLimit\n      }\n    };\n  };\n\n  const submitChangeProductLimitSelect = () => {\n    //call api\n    console.log(toJS(selectPartnerAndProduct));\n    let request = {\n      partner_code: selectPartnerAndProduct.partner_code,\n      product_code: businessParametersSetupStore.productLimitDetail.product_code,\n      transaction_code: '6931',\n      transaction_limit: txnLimit,\n      daily_limit: dailyLimit\n    };\n    console.log(request); //businessParametersSetupStore.changeProductLimit(request)\n  };\n\n  const selectPartnerChanel = value => {\n    let productSelectObject = channelPartnerList.filter(item => item.partner_code == value);\n    setSelectPartnerAndProduct(productSelectObject[0]); //partner_code, product_code\n\n    setShowLimitPartner(true);\n  };\n\n  const selectProductToViewDetail = rowSelected => {\n    //call api to get Detail Product\n    businessParametersSetupStore.getDataDetailProductLimit(rowSelected.product_code); // businessParametersSetupStore.getDataChannelPartnerList()\n  };\n\n  const selectProductToSpecificLimit = record => {\n    businessParametersSetupStore.productSelect = record;\n    setViewSpecificProduct(true);\n  };\n\n  const addRowProductList = () => {\n    let newProduct = {\n      key: dataSource.length + 1,\n      product_code: '',\n      product_description: '',\n      transaction_limit: '',\n      daily_limit: '',\n      Specific: ''\n    };\n    setDataSource([...dataSource, newProduct]);\n    edit(newProduct);\n    setDisabledButtonAddRow(true);\n    businessParametersSetupStore.arrayProductLimit = dataSource;\n  };\n\n  const goBackProductList = () => {\n    if (viewSpecificProduct) {\n      setViewSpecificProduct(false);\n    } else {\n      setViewDetailProduct(false);\n      businessParametersSetupStore.productLimitDetail = null;\n    }\n\n    setShowLimitPartner(false);\n  };\n\n  const submitAddnewProduct = async key => {\n    // Call api to update record status\n    const row = await form.validateFields();\n    row.status = '2';\n    row.transaction_code = \"6931\";\n    let indexProduct = productList.findIndex(item => row.product_code === item.product_code);\n    row.product_type = productList[indexProduct].product_type;\n    const newData = [...dataSource];\n    const index = newData.findIndex(item => key === item.key);\n\n    if (index > -1) {\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n      setDataSource(newData);\n      setEditingKey('');\n    } else {\n      newData.push(row);\n      setDataSource(newData);\n      setEditingKey('');\n    }\n\n    setDisabledButtonAddRow(false);\n    businessParametersSetupStore.addNewProductLimit(row);\n  };\n\n  const cancelAddNewProduct = async key => {\n    setDisabledButtonAddRow(false);\n    let indexProduct = dataSource.findIndex(item => key === item.key);\n    const newData = [...dataSource];\n    newData.splice(indexProduct, 1);\n    setDataSource(newData);\n    setEditingKey('');\n  };\n\n  const submitDeleteProduct = record => {\n    //call api to update record status\n    console.log(toJS(record));\n    let indexRecordDelete = dataSource.findIndex(item => record.key === item.key);\n    const newData = [...dataSource];\n    newData[indexRecordDelete].status = '2';\n    businessParametersSetupStore.deleteProductLimit(record);\n    setDataSource(newData); //waiting useEffect to check api success\n  };\n\n  const renderOnclickHandler = (text, record) => {\n    let stringToNumber = new Number(text);\n\n    if (isNaN(stringToNumber)) {\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 18\n        }\n      }, text);\n    } else {\n      let customText = stringToNumber.toLocaleString();\n      return __jsx(\"p\", {\n        style: {\n          textAlign: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 18\n        }\n      }, customText);\n    } //return <p onClick={() => selectProductToViewDetail(record)}>{customText}</p>\n\n  };\n\n  const renderActionAddDeleteHandler = (record, index) => {\n    if (record.status === '1') {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Delete?\",\n        onConfirm: e => {\n          submitDeleteProduct(record);\n        },\n        disabled: editingKey !== '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }\n      }, __jsx(DeleteOutlined, {\n        style: {\n          fontSize: '18px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 20\n        }\n      }))), __jsx(\"a\", {\n        onClick: () => selectProductToViewDetail(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }\n      }, __jsx(SettingOutlined, {\n        style: {\n          fontSize: '18px',\n          color: '#FBA928'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 68\n        }\n      })), __jsx(\"a\", {\n        onClick: () => selectProductToSpecificLimit(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }\n      }, __jsx(FormOutlined, {\n        style: {\n          fontSize: '18px',\n          color: '#FBA928'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 71\n        }\n      })));\n    } else if (record.status === '2') {\n      return null;\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 19\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Confirm to Add !!!\",\n        onConfirm: () => {\n          submitAddnewProduct(record.key);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }\n      }, \"Confirm\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 30\n        }\n      }), __jsx(TcrbPopconfirm, {\n        title: \"Confirm to Cancel !!!\",\n        onConfirm: () => {\n          cancelAddNewProduct(record.key);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }\n      }, \"Cancel\")));\n    }\n  };\n\n  const renderStatus = record => {\n    if (record.status === '1') {\n      return __jsx(\"p\", {\n        style: {\n          color: green[6]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 18\n        }\n      }, \"Active\");\n    } else if (record.status === '2') {\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 18\n        }\n      }, \"Pending\");\n    } else {\n      return null;\n    }\n  };\n\n  const renderActionSpecificHandler = record => {\n    return __jsx(\"p\", {\n      onClick: () => selectProductToSpecificLimit(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 16\n      }\n    }, \".....\");\n  };\n\n  const columns = [{\n    dataIndex: 'operation',\n    render: (text, record, index) => renderStatus(record, index)\n  }, {\n    title: 'Product_Code',\n    dataIndex: 'product_type',\n    width: '5%',\n    editable: true,\n    render: (text, record) => renderOnclickHandler(text, record)\n  }, {\n    title: 'Product_Description',\n    dataIndex: 'product_description',\n    editable: true,\n    render: (text, record) => renderOnclickHandler(text, record)\n  }, {\n    title: 'All-Channel Txn Limit',\n    dataIndex: 'transaction_limit',\n    editable: true,\n    render: (text, record) => renderOnclickHandler(text, record)\n  }, {\n    title: 'All-Channel Daily Limit',\n    dataIndex: 'daily_limit',\n    editable: true,\n    render: (text, record) => renderOnclickHandler(text, record)\n  }, {\n    title: 'Specific Channel Limit',\n    dataIndex: 'Specific',\n    // editable: true,\n    render: (text, record) => renderActionSpecificHandler(text, record)\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    render: (text, record, index) => renderActionAddDeleteHandler(record, index)\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    });\n  });\n\n  const detailProduct = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }\n    }, __jsx(Card, {\n      style: {\n        padding: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }\n    }, __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 15\n      }\n    }, __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, \"Product_Code\"), __jsx(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.product_type)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 15\n      }\n    }, __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }\n    }, \"Product_Description\"), __jsx(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.product_description))), __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }\n    }, __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 15\n      }\n    }, __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }\n    }, \"All-Channel Txn Limit\"), __jsx(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.transaction_limit)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 15\n      }\n    }, __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }\n    }, \"All-Channel Daily Limit\"), __jsx(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.daily_limit))), __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 13\n      }\n    }, addAndChangeLimitPartner()));\n  };\n\n  const productLimitList = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 13\n      }\n    }, __jsx(TcrbButton, {\n      onClick: () => addRowProductList(),\n      style: {\n        marginBottom: 16\n      },\n      disabled: disabledButtonAddRow,\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 15\n      }\n    }, \"Add a row\")), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      flex: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 15\n      }\n    }, __jsx(Form, {\n      form: form,\n      component: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }\n    }, __jsx(Table, {\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: dataSource,\n      columns: mergedColumns,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 19\n      }\n    })))));\n  };\n\n  const addAndChangeLimitPartner = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 15\n      }\n    }, \"Channel/Partner\"), __jsx(Col, {\n      span: 12,\n      flex: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      onChange: value => selectPartnerChanel(value),\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 17\n      }\n    }, channelPartnerList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.partner_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 60\n      }\n    }, item.partner_code, \"/\", item.partner_abbreviation))))), showLimitPartner ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 15\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }\n    }, __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 19\n      }\n    }, __jsx(SimpleInput, {\n      readOnly: false,\n      defaultValue: null,\n      prefix: 'Txn Limit',\n      onChange: e => {\n        txnLimit = e;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 21\n      }\n    })), __jsx(Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      style: {\n        paddingTop: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 21\n      }\n    }, \"THB\"))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }\n    }, __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 19\n      }\n    }, __jsx(SimpleInput, {\n      readOnly: false,\n      defaultValue: null,\n      prefix: 'Daily Limit',\n      onChange: e => {\n        dailyLimit = e;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 21\n      }\n    })), __jsx(Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      style: {\n        paddingTop: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 21\n      }\n    }, \"THB\")))) : '', __jsx(Row, {\n      justify: \"center\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 15\n      }\n    }, __jsx(TcrbButton, {\n      className: \"default\",\n      onClick: () => goBackProductList(),\n      shape: \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }\n    }, \"Back\")), __jsx(Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 15\n      }\n    }, __jsx(TcrbButton, {\n      shape: \"round\",\n      className: \"primary\",\n      onClick: () => {\n        prepareAllLimitToSubmitAndUpdate();\n      },\n      disabled: showLimitPartner == false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }\n    }, \"Submit\"))), __jsx(SimpleModal, {\n      title: titleModal,\n      type: modalType,\n      onOk: () => {\n        viewSpecificProduct ? submitAddSpecificLimit() : submitChangeProductLimitSelect();\n      },\n      onCancel: () => setVisble(false),\n      textOk: t(\"confirm\"),\n      textCancel: t(\"cancel\"),\n      modalString: modalString,\n      visible: visible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  return viewDetailProduct ? detailProduct() : viewSpecificProduct ? addAndChangeLimitPartner() : productLimitList();\n}));\nexport default withTranslation('common')(ProductLimitSetup);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup.js"],"names":["React","useState","useEffect","createRef","DeleteOutlined","SettingOutlined","FormOutlined","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","green","inject","observer","withTranslation","styled","toJS","SimpleMenu","SimpleInput","SimpleModal","TcrbButton","TcrbPopconfirm","Option","txnLimit","dailyLimit","ProductLimitSetup","props","dataSource","setDataSource","viewDetailProduct","setViewDetailProduct","visible","setVisble","modalString","setModalString","showLimitPartner","setShowLimitPartner","editingKey","setEditingKey","titleModal","setTitleModal","modalType","setModalType","selectPartnerAndProduct","setSelectPartnerAndProduct","channelPartnerList","setChannelPartnerList","productList","setProductList","viewSpecificProduct","setViewSpecificProduct","businessParametersSetupStore","t","disabledButtonAddRow","setDisabledButtonAddRow","form","useForm","isEditing","record","key","edit","setFieldsValue","product_type","product_description","transaction_limit","daily_limit","Specific","EditableCell","editing","dataIndex","title","inputType","index","children","restProps","inputNode","margin","required","message","width","map","item","product_code","getDataProductLimit","getDataChannelPartnerList","getDataProductList","productLimit","length","addKeyToDataSource","then","result","arrayProductLimit","console","log","productLimitDetail","handleDelete","arrayDataSource","newDataSource","Promise","resolve","convertToArrayOptionSelect","arrayObject","partnerList","partner_code","partner_abbreviation","prepareAllLimitToSubmitAndUpdate","textAlign","type","submitChangeLimit","submitAddSpecificLimit","addSpecificLimit","data","newData","transaction_code","submitChangeProductLimitSelect","request","selectPartnerChanel","value","productSelectObject","filter","selectProductToViewDetail","rowSelected","getDataDetailProductLimit","selectProductToSpecificLimit","productSelect","addRowProductList","newProduct","goBackProductList","submitAddnewProduct","row","validateFields","status","indexProduct","findIndex","splice","push","addNewProductLimit","cancelAddNewProduct","submitDeleteProduct","indexRecordDelete","deleteProductLimit","renderOnclickHandler","text","stringToNumber","Number","isNaN","customText","toLocaleString","renderActionAddDeleteHandler","e","fontSize","color","renderStatus","renderActionSpecificHandler","columns","render","editable","mergedColumns","col","onCell","detailProduct","padding","addAndChangeLimitPartner","productLimitList","marginBottom","body","cell","paddingTop","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from 'react'\nimport { DeleteOutlined, SettingOutlined, FormOutlined } from '@ant-design/icons';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber } from 'antd'\nimport { green } from '@ant-design/colors';\n\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../i18n'\nimport styled from 'styled-components'\nimport { toJS } from 'mobx'\nimport SimpleMenu from '../simple-menu'\nimport SimpleInput from '../simple-input'\nimport SimpleModal from '../simple-modal'\nimport { TcrbButton, TcrbPopconfirm } from '../antd-styles/styles'\n\nconst { Option } = Select;\nlet txnLimit = null\nlet dailyLimit = null\n\nconst ProductLimitSetup =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const [dataSource, setDataSource] = useState([])\n      const [viewDetailProduct, setViewDetailProduct] = useState(false)\n      const [visible, setVisble] = useState(false)\n      const [modalString, setModalString] = useState('')\n      const [showLimitPartner, setShowLimitPartner] = useState(false)\n      const [editingKey, setEditingKey] = useState('')\n      const [titleModal, setTitleModal] = useState('')\n      const [modalType, setModalType] = useState('')\n      const [selectPartnerAndProduct, setSelectPartnerAndProduct] = useState({})\n      const [channelPartnerList, setChannelPartnerList] = useState([])\n      const [productList, setProductList] = useState([])\n      const [viewSpecificProduct, setViewSpecificProduct] = useState(false)\n      const { businessParametersSetupStore, t } = props\n      const [disabledButtonAddRow, setDisabledButtonAddRow] = useState(false)\n      const [form] = Form.useForm();\n      // var selectPartnerAndProduct = {}\n\n\n      const isEditing = record => record.key === editingKey;\n      const edit = record => {\n        form.setFieldsValue({\n          product_type: '',\n          product_description: '',\n          transaction_limit: '',\n          daily_limit: '',\n          Specific: '',\n          ...record,\n        });\n        setEditingKey(record.key);\n      };\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n        return (\n          <td {...restProps}>\n            {editing ? (\n\n              <Form.Item\n                name={dataIndex == 'product_type' ? 'product_code' : dataIndex}\n                style={{\n                  margin: 0,\n                }}\n                rules={[\n                  {\n                    required: (inputType === 'number') ? true : false,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                {/* {inputNode} */}\n                {dataIndex == 'product_type' ? (\n                  <Select\n                    style={{ width: '100%' }}\n                  >\n                    {productList.map((item, index) => <Option key={index} value={item.product_code}>{item.product_type}</Option>)}\n                  </Select>) : (\n                    <div>\n                      {inputNode}\n                    </div>\n                  )}\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        );\n      };\n\n      useEffect(() => {\n        // setDataSource(mockDataSource)\n        businessParametersSetupStore.getDataProductLimit()\n        businessParametersSetupStore.getDataChannelPartnerList()\n        businessParametersSetupStore.getDataProductList()\n      }, []);\n\n      useEffect(() => {\n        if (businessParametersSetupStore.productLimit.length > 0) {\n          addKeyToDataSource(businessParametersSetupStore.productLimit).then((result) => {\n            businessParametersSetupStore.arrayProductLimit = result\n            setDataSource(result)\n          })\n        }\n      }, [businessParametersSetupStore.productLimit])\n\n      useEffect(() => {\n        //if(businessParametersSetupStore.productLimitDetail)\n        console.log(toJS(businessParametersSetupStore.productLimitDetail))\n        if (businessParametersSetupStore.productLimitDetail != null) {\n          setViewDetailProduct(true)\n        }\n      }, [businessParametersSetupStore.productLimitDetail])\n\n      useEffect(() => {\n        if (businessParametersSetupStore.channelPartnerList.length > 1) {\n          setChannelPartnerList(businessParametersSetupStore.channelPartnerList)\n        }\n      }, [businessParametersSetupStore.channelPartnerList])\n\n      useEffect(() => {\n        if (businessParametersSetupStore.productList.length > 1) {\n          setProductList(businessParametersSetupStore.productList)\n        }\n      }, [businessParametersSetupStore.productList])\n\n      useEffect(() => {\n        txnLimit, dailyLimit = ''\n      }, [showLimitPartner])\n\n      const handleDelete = key => {\n        // const dataSource = [...this.state.dataSource];\n        // setDataSource(dataSource.filter(item => item.key !== key))\n        console.log(key)\n\n      };\n\n      const addKeyToDataSource = (arrayDataSource) => {\n        let newDataSource = arrayDataSource\n        for (let index = 0; index < newDataSource.length; index++) {\n          newDataSource[index].key = index + 1;\n        }\n        return new Promise((resolve) => {\n          resolve(newDataSource)\n        })\n      }\n\n      const convertToArrayOptionSelect = (arrayObject) => {\n        let result = arrayObject.map(partnerList => [partnerList.partner_code, partnerList.partner_code + '/' + partnerList.partner_abbreviation]);\n        return new Promise((resolve) => resolve(result))\n      }\n\n      const prepareAllLimitToSubmitAndUpdate = () => {\n        if (viewSpecificProduct) {\n          // submitAddSpecificLimit()\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p> Add Partner {selectPartnerAndProduct.type} </p>\n              {/* <p>for {selectPartnerAndProduct.partner_code}/{selectPartnerAndProduct.partner_abbreviation} Channel/Partner !!!</p> */}\n            </div>\n          )\n        } else {\n          // submitChangeProductLimitSelect()\n\n          setModalString(\n            //waiting for confirm task\n            <div style={{ textAlign: \"center\" }}>\n              <p> Change Product Code {selectPartnerAndProduct.partner_code} Limit </p>\n              <p>for {selectPartnerAndProduct.partner_code}/{selectPartnerAndProduct.partner_abbreviation} Channel/Partner !!!</p>\n            </div>\n          )\n        }\n        setVisble(true)\n        setTitleModal('Confirm')\n        setModalType(\"confirm\")\n      }\n      const submitChangeLimit = () => {\n        // txnLimit, dailyLimit\n        // call api\n      }\n\n      const submitAddSpecificLimit = () => {\n        businessParametersSetupStore.addSpecificLimit()\n        let data = {\n          newData: {\n            partner_code: selectPartnerAndProduct.partner_code,\n            product_code: selectPartnerAndProduct.product_code,\n            transaction_code: '6931',\n            transaction_limit: txnLimit,\n            daily_limit: dailyLimit\n          }\n        }\n      }\n\n      const submitChangeProductLimitSelect = () => {\n        //call api\n        console.log(toJS(selectPartnerAndProduct))\n        let request = {\n          partner_code: selectPartnerAndProduct.partner_code,\n          product_code: businessParametersSetupStore.productLimitDetail.product_code,\n          transaction_code: '6931',\n          transaction_limit: txnLimit,\n          daily_limit: dailyLimit\n        }\n        console.log(request)\n        //businessParametersSetupStore.changeProductLimit(request)\n\n      }\n\n      const selectPartnerChanel = (value) => {\n        let productSelectObject = channelPartnerList.filter(item => item.partner_code == value)\n        setSelectPartnerAndProduct(productSelectObject[0])\n        //partner_code, product_code\n        setShowLimitPartner(true)\n      }\n\n      const selectProductToViewDetail = (rowSelected) => {\n        //call api to get Detail Product\n        businessParametersSetupStore.getDataDetailProductLimit(rowSelected.product_code)\n        // businessParametersSetupStore.getDataChannelPartnerList()\n      }\n\n      const selectProductToSpecificLimit = (record) => {\n        businessParametersSetupStore.productSelect = record\n        setViewSpecificProduct(true)\n      }\n\n      const addRowProductList = () => {\n        let newProduct = {\n          key: dataSource.length + 1,\n          product_code: '',\n          product_description: '',\n          transaction_limit: '',\n          daily_limit: '',\n          Specific: '',\n        }\n        setDataSource([...dataSource, newProduct])\n        edit(newProduct)\n        setDisabledButtonAddRow(true)\n        businessParametersSetupStore.arrayProductLimit = dataSource\n      }\n      const goBackProductList = () => {\n        if (viewSpecificProduct) {\n          setViewSpecificProduct(false)\n        } else {\n          setViewDetailProduct(false)\n          businessParametersSetupStore.productLimitDetail = null\n        }\n        setShowLimitPartner(false)\n\n      }\n      const submitAddnewProduct = async (key) => {\n        // Call api to update record status\n        const row = await form.validateFields();\n        row.status = '2'\n        row.transaction_code = \"6931\"\n        let indexProduct = productList.findIndex(item => row.product_code === item.product_code)\n        row.product_type = productList[indexProduct].product_type\n        const newData = [...dataSource];\n        const index = newData.findIndex(item => key === item.key);\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, { ...item, ...row });\n          setDataSource(newData);\n          setEditingKey('');\n        } else {\n          newData.push(row);\n          setDataSource(newData);\n          setEditingKey('');\n        }\n        setDisabledButtonAddRow(false)\n        businessParametersSetupStore.addNewProductLimit(row)\n      }\n\n      const cancelAddNewProduct = async (key) => {\n        setDisabledButtonAddRow(false)\n        let indexProduct = dataSource.findIndex(item => key === item.key)\n        const newData = [...dataSource]\n        newData.splice(indexProduct, 1)\n        setDataSource(newData);\n        setEditingKey('');\n      }\n\n      const submitDeleteProduct = (record) => {\n        //call api to update record status\n        console.log(toJS(record))\n        let indexRecordDelete = dataSource.findIndex(item => record.key === item.key)\n        const newData = [...dataSource];\n        newData[indexRecordDelete].status = '2'\n        businessParametersSetupStore.deleteProductLimit(record)\n        setDataSource(newData) //waiting useEffect to check api success\n      }\n      const renderOnclickHandler = (text, record) => {\n        let stringToNumber = new Number(text)\n        if (isNaN(stringToNumber)) {\n          return <p>{text}</p>\n        } else {\n          let customText = stringToNumber.toLocaleString()\n          return <p style={{ textAlign: \"right\" }}>{customText}</p>\n        }\n        //return <p onClick={() => selectProductToViewDetail(record)}>{customText}</p>\n      }\n      const renderActionAddDeleteHandler = (record, index) => {\n        if (record.status === '1') {\n          return (\n            <div>\n              <TcrbPopconfirm title=\"Sure to Delete?\" onConfirm={(e) => { submitDeleteProduct(record) }} disabled={editingKey !== ''}>\n                <a><DeleteOutlined style={{ fontSize: '18px' }} /></a>\n              </TcrbPopconfirm>\n              <a onClick={() => selectProductToViewDetail(record)}><SettingOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n              <a onClick={() => selectProductToSpecificLimit(record)}><FormOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n            </div>)\n        } else if (record.status === '2') {\n          return null\n        } else {\n          return (<div>\n            <TcrbPopconfirm title={\"Confirm to Add !!!\"} onConfirm={() => { submitAddnewProduct(record.key) }} >\n              <a>Confirm</a>\n            </TcrbPopconfirm><br />\n            <TcrbPopconfirm title={\"Confirm to Cancel !!!\"} onConfirm={() => { cancelAddNewProduct(record.key) }} >\n              <a>Cancel</a>\n            </TcrbPopconfirm>\n          </div>)\n        }\n      }\n      const renderStatus = (record) => {\n        if (record.status === '1') {\n          return <p style={{ color: green[6] }}>Active</p>\n        } else if (record.status === '2') {\n          return <p>Pending</p>\n        } else {\n          return null\n        }\n      }\n      const renderActionSpecificHandler = (record) => {\n        return <p onClick={() => selectProductToSpecificLimit(record)} >.....</p>\n      }\n      const columns = [\n        {\n          dataIndex: 'operation',\n          render: (text, record, index) =>\n            renderStatus(record, index)\n        },\n        {\n          title: 'Product_Code',\n          dataIndex: 'product_type',\n          width: '5%',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'Product_Description',\n          dataIndex: 'product_description',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'All-Channel Txn Limit',\n          dataIndex: 'transaction_limit',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'All-Channel Daily Limit',\n          dataIndex: 'daily_limit',\n          editable: true,\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'Specific Channel Limit',\n          dataIndex: 'Specific',\n          // editable: true,\n          render: (text, record) => renderActionSpecificHandler(text, record)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          render: (text, record, index) =>\n            renderActionAddDeleteHandler(record, index)\n        },\n      ];\n\n      const mergedColumns = columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n\n\n      const detailProduct = () => {\n        return (\n          <div>\n            <Card style={{ padding: 8 }}>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>Product_Code</Col>\n                <Col span={12}>{businessParametersSetupStore.productLimitDetail.product_type}</Col>\n              </Row>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>Product_Description</Col>\n                <Col span={12}>{businessParametersSetupStore.productLimitDetail.product_description}</Col>\n              </Row>\n            </Card>\n            <Card>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>All-Channel Txn Limit</Col>\n                <Col span={12}>{businessParametersSetupStore.productLimitDetail.transaction_limit}</Col>\n              </Row>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>All-Channel Daily Limit</Col>\n                <Col span={12}>{businessParametersSetupStore.productLimitDetail.daily_limit}</Col>\n              </Row>\n            </Card>\n            <Card>\n              {/* <AddAndChangeLimitPartner /> */}\n              {addAndChangeLimitPartner()}\n            </Card>\n          </div>\n        )\n      }\n\n      const productLimitList = () => {\n        return (\n          <div>\n            <Row>\n              <TcrbButton\n                onClick={() => addRowProductList()}\n                style={{\n                  marginBottom: 16,\n                }}\n                disabled={disabledButtonAddRow}\n                className=\"primary\">Add a row</TcrbButton>\n            </Row>\n            <Row>\n              <Col flex={100}>\n                <Form form={form} component={false}>\n\n                  <Table\n                    components={{\n                      body: {\n                        cell: EditableCell,\n                      },\n                    }}\n                    bordered\n                    dataSource={dataSource}\n                    columns={mergedColumns}\n                    size=\"small\"\n                  />\n                </Form>\n              </Col>\n\n            </Row>\n          </div>\n        )\n      }\n\n      const addAndChangeLimitPartner = () => {\n        return (\n          <div>\n            <Row gutter={[4, 24]}>\n              <Col span={6}>Channel/Partner</Col>\n              <Col span={12} flex={100}>\n                {/* <SimpleMenu options={optionList} onChange={(e) => { selectPartnerChanel(e) }} /> */}\n                <Select\n                  onChange={(value) => selectPartnerChanel(value)}\n                  style={{ width: '100%' }}\n                >\n                  {channelPartnerList.map((item, index) => <Option key={index} value={item.partner_code}>{item.partner_code}/{item.partner_abbreviation}</Option>)}\n                </Select>\n              </Col>\n            </Row>\n            {(showLimitPartner) ? (\n              <div>\n                <Row>\n                  <Col span={6}>\n                    <SimpleInput readOnly={false} defaultValue={null} prefix={'Txn Limit'} onChange={(e) => { txnLimit = e }} />\n                  </Col>\n                  <Col span={2}>\n                    <p style={{ paddingTop: 4 }}>THB</p>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col span={6}>\n                    <SimpleInput readOnly={false} defaultValue={null} prefix={'Daily Limit'} onChange={(e) => { dailyLimit = e }} />\n                  </Col>\n                  <Col span={2}>\n                    <p style={{ paddingTop: 4 }}>THB</p>\n                  </Col>\n                </Row>\n\n              </div>\n            ) : ('')}\n            <Row justify=\"center\" style={{ marginTop: 8 }}>\n              <Col span={2}>\n                <TcrbButton className=\"default\" onClick={() => goBackProductList()} shape=\"round\">Back</TcrbButton>\n              </Col>\n              <Col span={2}>\n                <TcrbButton shape=\"round\" className=\"primary\" onClick={() => { prepareAllLimitToSubmitAndUpdate() }} disabled={showLimitPartner == false}>Submit</TcrbButton>\n              </Col>\n            </Row>\n            <SimpleModal\n              title={titleModal}\n              type={modalType}\n              onOk={() => { viewSpecificProduct ? submitAddSpecificLimit() : submitChangeProductLimitSelect() }}\n              onCancel={() => setVisble(false)}\n              textOk={t(\"confirm\")}\n              textCancel={t(\"cancel\")}\n              modalString={modalString}\n              visible={visible}\n            />\n          </div>\n        )\n      }\n      return (viewDetailProduct) ? detailProduct() : (viewSpecificProduct ? addAndChangeLimitPartner() : productLimitList())\n    }))\nexport default withTranslation('common')(ProductLimitSetup)\n"]},"metadata":{},"sourceType":"module"}