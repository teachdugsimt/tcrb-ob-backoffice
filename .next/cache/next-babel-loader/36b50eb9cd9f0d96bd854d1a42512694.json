{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/manage-user.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space, DatePicker } from 'antd';\nimport { DeleteOutlined, EditOutlined, FormOutlined } from '@ant-design/icons';\nimport { inject, observer } from 'mobx-react';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport SimpleInput from '../../simple-input';\nimport SimpleModal from '../../simple-modal';\nimport { addKeyToDataSource } from '../../data-utility';\nimport userAccessManagement from '..';\nimport moment from 'moment';\nimport { toJS } from 'mobx';\nconst {\n  Option\n} = Select;\nlet groupSelect = null;\nconst ManageUser = inject('userAccessManagementStore')(observer(props => {\n  const {\n    0: viewEditUserDetail,\n    1: setViewEditUserDetail\n  } = useState(false);\n  const {\n    0: modalTitle,\n    1: setModalTitle\n  } = useState('');\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState('');\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: optionGroupList,\n    1: setOptionGroupList\n  } = useState([]);\n  const {\n    0: supervisorList,\n    1: setSupervisorList\n  } = useState([]);\n  const {\n    0: sectionList,\n    1: setSectionList\n  } = useState([]);\n  const dateFormat = 'YYYY-MM-DD';\n  const {\n    userAccessManagementStore\n  } = props;\n  const [form] = Form.useForm();\n  useEffect(() => {\n    userAccessManagementStore.getDataGroupOptionList();\n    console.log(toJS(userAccessManagementStore.userSelected));\n  }, []);\n  useEffect(() => {\n    if (userAccessManagementStore.optionGroupList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.optionGroupList).then(result => {\n        setSectionList(result);\n      });\n    }\n  }, [userAccessManagementStore.optionGroupList]);\n  useEffect(() => {\n    if (userAccessManagementStore.supervisorList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.supervisorList).then(result => {\n        setSupervisorList(result);\n      });\n    }\n  }, [userAccessManagementStore.optionSectionList]);\n\n  const goBackToUserList = () => {\n    userAccessManagementStore.nextPageIsManageUser = false;\n  };\n\n  const getSupervisorList = sectionId => {\n    userAccessManagementStore.getDataSupervisor(sectionId);\n  };\n\n  const columnGroup = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: (text, record) => checkDefaultStatus(text)\n  }, {\n    title: 'Group name',\n    dataIndex: 'group_name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Role Name',\n    dataIndex: 'role_name' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: (text, record) => renderActionGroupUser(record)\n  }];\n\n  const FormEditUser = () => {\n    return __jsx(Form, {\n      form: form,\n      layout: \"vertical\",\n      name: \"form_in_modal\",\n      initialValues: {\n        'employee_code': userAccessManagementStore.userSelected.employee_code,\n        'section_id': userAccessManagementStore.userSelected.section_id,\n        'name': userAccessManagementStore.userSelected.name,\n        'surname': userAccessManagementStore.userSelected.surname,\n        'username': userAccessManagementStore.userSelected.name,\n        'email': userAccessManagementStore.userSelected.name,\n        'join_date': moment(userAccessManagementStore.userSelected.join_date),\n        'last_Working_date': moment(userAccessManagementStore.userSelected.last_Working_date)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \"Employee ID\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"employee_code\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.employee_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"Section\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"section_id\",\n      rules: [{\n        required: true,\n        message: 'Please input Section!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => getSupervisorList(value),\n      defaultValue: userAccessManagementStore.userSelected.section_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, sectionList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 53\n      }\n    }, item.name)))))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"Name\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, \"Surname\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"surname\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.surname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, \"Username\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, \"Email\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      defaultValue: userAccessManagementStore.userSelected.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, \"Join Date\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"join_date\",\n      rules: [{\n        required: false,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      format: dateFormat,\n      defaultValue: moment(userAccessManagementStore.userSelected.join_date, dateFormat),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    }, \"Last working date\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"last_Working_date\",\n      rules: [{\n        required: false,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      format: dateFormat,\n      defaultValue: moment(userAccessManagementStore.userSelected.last_Working_date, dateFormat),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, \"Status\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"user_status\",\n      rules: [{\n        // required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, \"Supervisor\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"supervisor_id\",\n      rules: [{\n        // required: true,\n        message: 'Please input Supervisor!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, supervisorList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 56\n      }\n    }, item.name)))))), __jsx(Row, {\n      justify: \"end\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    }, __jsx(Space, {\n      size: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, __jsx(TcrbButton, {\n      className: \"default\",\n      onClick: () => {\n        setViewEditUserDetail(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 19\n      }\n    }, \"Cancel\"), __jsx(TcrbButton, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 19\n      }\n    }, \"Submit\"))))));\n  };\n\n  const FormShowUser = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }\n    }, \"Employee ID\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.employee_id), __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, \"Supervisor\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.supervisor)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }\n    }, \"Name\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.name), __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }, \"Surname\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.surname)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }\n    }, \"Username\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.username), __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, \"E-mail\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.email)), __jsx(Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    }, \"Status\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.status), __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }\n    }, \"Section\"), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }\n    }, \" \", userAccessManagementStore.userSelected.section)), __jsx(Row, {\n      justify: \"end\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }\n    }, __jsx(TcrbButton, {\n      className: \"primary\",\n      onClick: () => {\n        setViewEditUserDetail(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }\n    }, \"Edit\"))));\n  };\n\n  const FormAddGroup = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 15\n      }\n    }, \"Group\")), __jsx(Col, {\n      span: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => group = value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 15\n      }\n    }, optionGroupList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 55\n      }\n    }, item.name))))));\n  };\n\n  const addGroupToUser = () => {\n    groupSelect = null;\n    setModalTitle('Add Group to User');\n    setModalType('confirm');\n    setModalString(__jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => groupSelect = value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }\n    }, optionGroupList.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 49\n      }\n    }, item.name))));\n    setVisible(true);\n  };\n\n  const addGroup = () => {\n    console.log(groupSelect);\n    let request = {\n      user_id: userAccessManagementStore.userSelected.id,\n      group_id: groupSelect\n    };\n    userAccessManagementStore.submitAddGroupToUser(request);\n    setVisible(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: () => goBackToUserList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }, \"Back\"))), viewEditUserDetail ? __jsx(FormEditUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 31\n    }\n  }) : __jsx(FormShowUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 50\n    }\n  }), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: () => addGroupToUser(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }, \"Add Group To User\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: [],\n    columns: columnGroup,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleModal, {\n    title: modalTitle,\n    type: modalType,\n    onOk: () => addGroup(),\n    onCancel: () => setVisible(false),\n    textCancel: 'Cancel',\n    textOk: 'Submit',\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }\n  }));\n}));\nexport default ManageUser;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/manage-user.js"],"names":["React","useEffect","useState","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","Space","DatePicker","DeleteOutlined","EditOutlined","FormOutlined","inject","observer","TcrbButton","TcrbPopconfirm","SimpleInput","SimpleModal","addKeyToDataSource","userAccessManagement","moment","toJS","Option","groupSelect","ManageUser","props","viewEditUserDetail","setViewEditUserDetail","modalTitle","setModalTitle","modalType","setModalType","visible","setVisible","modalString","setModalString","optionGroupList","setOptionGroupList","supervisorList","setSupervisorList","sectionList","setSectionList","dateFormat","userAccessManagementStore","form","useForm","getDataGroupOptionList","console","log","userSelected","length","then","result","optionSectionList","goBackToUserList","nextPageIsManageUser","getSupervisorList","sectionId","getDataSupervisor","columnGroup","title","dataIndex","width","render","text","record","checkDefaultStatus","renderActionGroupUser","FormEditUser","employee_code","section_id","name","surname","join_date","last_Working_date","padding","required","message","paddingLeft","value","map","item","index","id","username","email","marginTop","FormShowUser","employee_id","supervisor","status","section","FormAddGroup","group","addGroupToUser","addGroup","request","user_id","group_id","submitAddGroupToUser"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space, DatePicker } from 'antd'\nimport { DeleteOutlined, EditOutlined, FormOutlined } from '@ant-design/icons';\nimport { inject, observer } from 'mobx-react'\n\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport SimpleInput from '../../simple-input'\nimport SimpleModal from '../../simple-modal'\nimport { addKeyToDataSource } from '../../data-utility';\nimport userAccessManagement from '..';\nimport moment from 'moment';\nimport { toJS } from 'mobx';\n\nconst { Option } = Select;\nlet groupSelect = null\nconst ManageUser = inject('userAccessManagementStore')\n  (observer((props) => {\n    const [viewEditUserDetail, setViewEditUserDetail] = useState(false)\n    const [modalTitle, setModalTitle] = useState('')\n    const [modalType, setModalType] = useState('')\n    const [visible, setVisible] = useState(false)\n    const [modalString, setModalString] = useState('')\n    const [optionGroupList, setOptionGroupList] = useState([])\n    const [supervisorList, setSupervisorList] = useState([])\n    const [sectionList, setSectionList] = useState([])\n    const dateFormat = 'YYYY-MM-DD'\n\n    const { userAccessManagementStore } = props\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n      userAccessManagementStore.getDataGroupOptionList()\n      console.log(toJS(userAccessManagementStore.userSelected))\n    }, [])\n\n    useEffect(() => {\n      if (userAccessManagementStore.optionGroupList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.optionGroupList).then(result => {\n          setSectionList(result)\n        })\n      }\n    }, [userAccessManagementStore.optionGroupList])\n\n    useEffect(() => {\n      if (userAccessManagementStore.supervisorList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.supervisorList).then(result => {\n          setSupervisorList(result)\n        })\n      }\n    }, [userAccessManagementStore.optionSectionList])\n\n    const goBackToUserList = () => {\n      userAccessManagementStore.nextPageIsManageUser = false\n    }\n\n    const getSupervisorList = (sectionId) => {\n      userAccessManagementStore.getDataSupervisor(sectionId)\n    }\n    const columnGroup = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkDefaultStatus(text)\n      },\n      {\n        title: 'Group name',\n        dataIndex: 'group_name',\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Role Name',\n        dataIndex: 'role_name',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Action',\n        dataIndex: 'operation',\n        width: '10%',\n        render: (text, record) => renderActionGroupUser(record)\n      }\n    ]\n    const FormEditUser = () => {\n      return (\n        <Form\n          form={form}\n          layout=\"vertical\"\n          name=\"form_in_modal\"\n          initialValues={{\n            'employee_code': userAccessManagementStore.userSelected.employee_code,\n            'section_id': userAccessManagementStore.userSelected.section_id,\n            'name': userAccessManagementStore.userSelected.name,\n            'surname': userAccessManagementStore.userSelected.surname,\n            'username': userAccessManagementStore.userSelected.name,\n            'email': userAccessManagementStore.userSelected.name,\n            'join_date': moment(userAccessManagementStore.userSelected.join_date),\n            'last_Working_date': moment(userAccessManagementStore.userSelected.last_Working_date)\n          }}\n        >\n\n          <Row >\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Employee ID\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"employee_code\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.employee_code} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Section\n                </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"section_id\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input Section!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => getSupervisorList(value)}\n                  defaultValue={userAccessManagementStore.userSelected.section_id}\n                >\n                  {sectionList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n                  {/* {children} */}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row >\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Name\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"name\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.name} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Surname\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"surname\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.surname} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Username\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.username} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Email\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput defaultValue={userAccessManagementStore.userSelected.email} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Join Date\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"join_date\"\n                rules={[\n                  {\n                    required: false,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <DatePicker style={{ width: '100%' }} format={dateFormat} defaultValue={moment(userAccessManagementStore.userSelected.join_date, dateFormat)} />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Last working date\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"last_Working_date\"\n                rules={[\n                  {\n                    required: false,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <DatePicker style={{ width: '100%' }} format={dateFormat} defaultValue={moment(userAccessManagementStore.userSelected.last_Working_date, dateFormat)} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Status\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"user_status\"\n                rules={[\n                  {\n                    // required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => null}\n                >\n                  {/* {children} */}\n                </Select>\n\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Supervisor\n                </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"supervisor_id\"\n                rules={[\n                  {\n                    // required: true,\n                    message: 'Please input Supervisor!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => null}\n                >\n                  {supervisorList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row justify=\"end\" style={{ marginTop: 8 }}>\n\n            <Col span={4}>\n              <Form.Item>\n                <Space size={8}>\n\n                  <TcrbButton className=\"default\" onClick={() => { setViewEditUserDetail(false) }} >Cancel</TcrbButton>\n                  <TcrbButton type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </TcrbButton>\n                </Space>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      )\n    }\n    const FormShowUser = () => {\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Employee ID</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.employee_id}</Col>\n            <Col span={4}>Supervisor</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.supervisor}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Name</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.name}</Col>\n            <Col span={4}>Surname</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.surname}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Username</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.username}</Col>\n            <Col span={4}>E-mail</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.email}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={4}>Status</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.status}</Col>\n            <Col span={4}>Section</Col>\n            <Col span={6}> {userAccessManagementStore.userSelected.section}</Col>\n          </Row>\n          <Row justify=\"end\" style={{ marginTop: 8 }}>\n            <Col span={4}>\n              <TcrbButton className=\"primary\" onClick={() => { setViewEditUserDetail(true) }} >Edit</TcrbButton>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n    const FormAddGroup = () => {\n      return (\n        <div>\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Group</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => group = value}\n              >\n                {optionGroupList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n    const addGroupToUser = () => {\n      groupSelect = null\n      setModalTitle('Add Group to User')\n      setModalType('confirm')\n      setModalString(\n        <Select\n          style={{ width: '100%' }}\n          placeholder=\"Please select\"\n          onChange={(value) => groupSelect = value}\n        >\n          {optionGroupList.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)}\n        </Select>\n      )\n      setVisible(true)\n    }\n\n    const addGroup = () => {\n      console.log(groupSelect)\n      let request = {\n        user_id: userAccessManagementStore.userSelected.id,\n        group_id: groupSelect\n      }\n      userAccessManagementStore.submitAddGroupToUser(request)\n      setVisible(false)\n    }\n\n    return (\n      <div>\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"default\" onClick={() => goBackToUserList()} >Back</TcrbButton>\n          </Col>\n        </Row>\n        {viewEditUserDetail ? <FormEditUser /> : <FormShowUser />}\n        <Divider />\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"primary\" onClick={() => addGroupToUser()} >Add Group To User</TcrbButton>\n          </Col>\n        </Row>\n        <Table\n          bordered\n          dataSource={[]}\n          columns={columnGroup}\n          size=\"small\"\n        />\n        <SimpleModal\n          title={modalTitle}\n          type={modalType}\n          onOk={() => addGroup()}\n          onCancel={() => setVisible(false)}\n          textCancel={'Cancel'}\n          textOk={'Submit'}\n          width={600}\n          modalString={modalString}\n          visible={visible}\n        />\n\n      </div>\n    )\n  }))\n\nexport default ManageUser\n"]},"metadata":{},"sourceType":"module"}