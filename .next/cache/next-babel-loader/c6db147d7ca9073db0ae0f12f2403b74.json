{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport SimpleSearch from '../simple-search';\nimport styled from 'styled-components';\nimport { Row, Switch, Col, Button, Input } from 'antd';\nimport { useStores } from '../../hooks/use-stores';\nimport SimpleModal from '../simple-modal';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport { withTranslation } from '../../i18n';\nconst StyledA = styled.a.withConfig({\n  displayName: \"account-unbinding__StyledA\",\n  componentId: \"sc-1wve73-0\"\n})([\"display:initial;padding-right:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledP = styled.p.withConfig({\n  displayName: \"account-unbinding__StyledP\",\n  componentId: \"sc-1wve73-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"account-unbinding__StyledSpan\",\n  componentId: \"sc-1wve73-2\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledInput = styled(Input).withConfig({\n  displayName: \"account-unbinding__StyledInput\",\n  componentId: \"sc-1wve73-3\"\n})([\"\", \"\"], ({\n  readOnly\n}) => readOnly && `\n          border-style: solid !important;\n          border-width: 0px 0px 1px 0px !important;\n          border-color: black !important;\n          box-shadow: none !important;\n          border-right-style: unset !important;\n          border-right-width: 0px !important\n      `);\nconst AccountUnbinding = inject('customerServicesMenuStore')(observer(props => {\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: viewDetail,\n    1: setViewDetail\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: accountId,\n    1: setAccountId\n  } = useState(''); // const stringSwitch = [{ accountName: i18n.t(\"bindingTCRBMobilBanking\"), accountBindingStatus: true, accountType: '1' }, { accountName: i18n.t(\"bindingMicroPay\"), accountBindingStatus: true, accountType: '2' }, { accountName: i18n.t(\"bindingTrueMoneyWallet\"), accountBindingStatus: true, accountType: '3' }]\n  // const stringAccount = [{ accountNumber: '2233344514', accountName: i18n.t(\"normalSaving\"), accountType: '1' }, { accountNumber: '123456789032', accountName: i18n.t(\"revolvingLoanNonTCG\"), accountType: '2' }]\n\n  const stringSwitch = [{\n    accountName: 'Binding to TCRB Mobile Banking',\n    accountBindingStatus: true,\n    accountType: '1'\n  }, {\n    accountName: 'Binding to Micro Pay',\n    accountBindingStatus: true,\n    accountType: '2'\n  }, {\n    accountName: 'Binding to True Money Wallet',\n    accountBindingStatus: true,\n    accountType: '3'\n  }];\n  const {\n    0: stringAccount,\n    1: setStringAccount\n  } = useState([]);\n  const {\n    customerServicesMenuStore,\n    t\n  } = props;\n  useEffect(() => {\n    if (isSearch) {\n      setStringAccount(customerServicesMenuStore.accountInfo); // convertArrayObjectToArray(customerServicesMenuStore.accountInfo.data).then(result => {\n      //   customerServicesMenuStore.arrayAccountInfo = result\n      //   setStringSwitch(result)\n      // })\n    }\n  }, [customerServicesMenuStore.accountInfo]);\n\n  const searchIdCardNumber = async value => {\n    // console.log('eiei search:' + value)\n    // setIdCard(value)\n    setIsSearch(true); // customerServicesMenuStore.setCitizenId(value)\n\n    await customerServicesMenuStore.getDataAccountUnbind(value);\n  };\n\n  const convertArrayObjectToArray = arrayObject => {\n    return new Promise((resolve, reject) => {\n      let result = arrayObject.map(a => [a.otp_is_locked, a.main_account_no, a.product_name_english]);\n      resolve(result);\n    });\n  };\n\n  const selectedMenu = selectedAccount => {\n    console.log(selectedAccount);\n    customerServicesMenuStore.setAccountId(selectedAccount.main_account_no);\n    setViewDetail(true); // switch (selectedAccount.accountType) {\n    //   case '1':\n    //     customerServicesMenuStore.setAccountId(selectedAccount.accountNumber)\n    //     setViewDetail(true)\n    //     break;\n    //   case '2':\n    //     console.log('eiei menu2', selectedAccount)\n    //     customerServicesMenuStore.setAccountId(selectedAccount.accountNumber)\n    //     // setAccountId(accountId)\n    //     setViewDetail(true)\n    //     break;\n    //   default:\n    //     break;\n    // }\n  };\n\n  const onChange = (switchSelected, index) => {\n    // console.log(\"change:\" + value + \",indexOf :\" + index)\n    if (switchSelected.accountBindingStatus === true) {\n      setVisble(true);\n\n      switch (switchSelected.accountType) {\n        case '1':\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }\n          }, i18n.t(\"unbinding\")), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }\n          }, \" \", i18n.t(\"account\") + \" \" + customerServicesMenuStore.accountId, \" from Mobile Banking\")));\n          break;\n\n        case '2':\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }\n          }, i18n.t(\"unbinding\")), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }\n          }, \" \", i18n.t(\"account\") + \" \" + customerServicesMenuStore.accountId, \" from Micro Pay\")));\n          break;\n\n        case '3':\n          setModalString(__jsx(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }\n          }, __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }\n          }, i18n.t(\"unbinding\")), __jsx(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }\n          }, \" \", i18n.t(\"account\") + \" \" + customerServicesMenuStore.accountId, \" from True Money Wallet\")));\n          break;\n\n        default:\n          break;\n      }\n    } else {// setIsChecked(false)\n    }\n  };\n\n  const unBindingAccount = () => {};\n\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) => __jsx(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, __jsx(Switch, {\n      defaultChecked: string.accountBindingStatus,\n      onChange: checked => onChange(string),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }), __jsx(StyledP, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 109\n      }\n    }, string.accountName))));\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, listItems);\n  };\n\n  const AccountList = () => {\n    const listItems = stringAccount.map((string, index) => __jsx(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, __jsx(StyledA, {\n      onClick: () => {\n        selectedMenu(string);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, string.main_account_no), __jsx(StyledSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 99\n      }\n    }, \" \", string.product_name_english))));\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, listItems);\n  };\n\n  const newSearch = __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: i18n.t(\"idCard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  })), isSearch ? __jsx(AccountList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }) : '');\n\n  const accountDetail = __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    align: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    readOnly: true,\n    prefix: i18n.t('accountNumber'),\n    defaultValue: customerServicesMenuStore.accountId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }))), __jsx(Row, {\n    gutter: [4, 24],\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, __jsx(SwitchList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), __jsx(SimpleModal, {\n    onOk: () => setVisble(false),\n    onCancel: () => setVisble(false),\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    gutter: [4, 24],\n    align: \"bottom\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    shape: \"round\",\n    onClick: () => setViewDetail(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Back\"))));\n\n  return viewDetail ? accountDetail : newSearch;\n}));\nexport default withTranslation('common')(AccountUnbinding);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/account-unbinding.js"],"names":["React","useState","useEffect","SimpleSearch","styled","Row","Switch","Col","Button","Input","useStores","SimpleModal","inject","observer","toJS","withTranslation","StyledA","a","theme","spacing","medium","StyledP","p","StyledSpan","span","StyledInput","readOnly","AccountUnbinding","props","isSearch","setIsSearch","viewDetail","setViewDetail","visible","setVisble","modalString","setModalString","accountId","setAccountId","stringSwitch","accountName","accountBindingStatus","accountType","stringAccount","setStringAccount","customerServicesMenuStore","t","accountInfo","searchIdCardNumber","value","getDataAccountUnbind","convertArrayObjectToArray","arrayObject","Promise","resolve","reject","result","map","otp_is_locked","main_account_no","product_name_english","selectedMenu","selectedAccount","console","log","onChange","switchSelected","index","textAlign","i18n","unBindingAccount","SwitchList","listItems","string","checked","AccountList","newSearch","marginTop","accountDetail","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SimpleSearch from '../simple-search'\nimport styled from 'styled-components'\nimport { Row, Switch, Col, Button, Input } from 'antd';\nimport { useStores } from '../../hooks/use-stores'\nimport SimpleModal from '../simple-modal'\nimport { inject, observer } from 'mobx-react'\nimport { toJS } from 'mobx';\nimport { withTranslation } from '../../i18n'\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-right: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledP = styled.p`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledInput = styled(Input)`\n      ${({ readOnly }) => readOnly && `\n          border-style: solid !important;\n          border-width: 0px 0px 1px 0px !important;\n          border-color: black !important;\n          box-shadow: none !important;\n          border-right-style: unset !important;\n          border-right-width: 0px !important\n      `}\n`\nconst AccountUnbinding =\n  inject('customerServicesMenuStore')\n    (observer((props) => {\n      const [isSearch, setIsSearch] = useState(false);\n      const [viewDetail, setViewDetail] = useState(false);\n      const [visible, setVisble] = useState(false)\n      const [modalString, setModalString] = useState('')\n      const [accountId, setAccountId] = useState('')\n      // const stringSwitch = [{ accountName: i18n.t(\"bindingTCRBMobilBanking\"), accountBindingStatus: true, accountType: '1' }, { accountName: i18n.t(\"bindingMicroPay\"), accountBindingStatus: true, accountType: '2' }, { accountName: i18n.t(\"bindingTrueMoneyWallet\"), accountBindingStatus: true, accountType: '3' }]\n      // const stringAccount = [{ accountNumber: '2233344514', accountName: i18n.t(\"normalSaving\"), accountType: '1' }, { accountNumber: '123456789032', accountName: i18n.t(\"revolvingLoanNonTCG\"), accountType: '2' }]\n      const stringSwitch = [{ accountName: 'Binding to TCRB Mobile Banking', accountBindingStatus: true, accountType: '1' }, { accountName: 'Binding to Micro Pay', accountBindingStatus: true, accountType: '2' }, { accountName: 'Binding to True Money Wallet', accountBindingStatus: true, accountType: '3' }]\n      const [stringAccount, setStringAccount] = useState([])\n      const { customerServicesMenuStore, t } = props\n\n      useEffect(() => {\n        if (isSearch) {\n          setStringAccount(customerServicesMenuStore.accountInfo)\n          // convertArrayObjectToArray(customerServicesMenuStore.accountInfo.data).then(result => {\n          //   customerServicesMenuStore.arrayAccountInfo = result\n          //   setStringSwitch(result)\n          // })\n        }\n      }, [customerServicesMenuStore.accountInfo])\n\n      const searchIdCardNumber = async (value) => {\n        // console.log('eiei search:' + value)\n        // setIdCard(value)\n        setIsSearch(true)\n        // customerServicesMenuStore.setCitizenId(value)\n        await customerServicesMenuStore.getDataAccountUnbind(value)\n      }\n\n      const convertArrayObjectToArray = (arrayObject) => {\n        return new Promise((resolve, reject) => {\n          let result = arrayObject.map(a => [a.otp_is_locked, a.main_account_no, a.product_name_english]);\n          resolve(result)\n        })\n      }\n      const selectedMenu = (selectedAccount) => {\n        console.log(selectedAccount)\n        customerServicesMenuStore.setAccountId(selectedAccount.main_account_no)\n        setViewDetail(true)\n        // switch (selectedAccount.accountType) {\n        //   case '1':\n        //     customerServicesMenuStore.setAccountId(selectedAccount.accountNumber)\n        //     setViewDetail(true)\n        //     break;\n        //   case '2':\n        //     console.log('eiei menu2', selectedAccount)\n        //     customerServicesMenuStore.setAccountId(selectedAccount.accountNumber)\n        //     // setAccountId(accountId)\n        //     setViewDetail(true)\n        //     break;\n        //   default:\n        //     break;\n        // }\n      }\n      const onChange = (switchSelected, index) => {\n        // console.log(\"change:\" + value + \",indexOf :\" + index)\n\n        if (switchSelected.accountBindingStatus === true) {\n          setVisble(true)\n          switch (switchSelected.accountType) {\n            case '1':\n              setModalString(\n                <div style={{ textAlign: \"center\" }}>\n                  <p>{i18n.t(\"unbinding\")}</p>\n                  <p> {i18n.t(\"account\") + \" \" + customerServicesMenuStore.accountId} from Mobile Banking</p>\n                </div>\n              )\n              break;\n            case '2':\n              setModalString(\n                <div style={{ textAlign: \"center\" }}>\n                  <p>{i18n.t(\"unbinding\")}</p>\n                  <p> {i18n.t(\"account\") + \" \" + customerServicesMenuStore.accountId} from Micro Pay</p>\n                </div>\n              )\n              break;\n            case '3':\n              setModalString(\n                <div style={{ textAlign: \"center\" }}>\n                  <p>{i18n.t(\"unbinding\")}</p>\n                  <p> {i18n.t(\"account\") + \" \" + customerServicesMenuStore.accountId} from True Money Wallet</p>\n                </div>\n              )\n              break;\n            default:\n              break;\n          }\n        } else {\n          // setIsChecked(false)\n        }\n      }\n\n      const unBindingAccount = () => {\n\n      }\n\n      const SwitchList = () => {\n        const listItems = stringSwitch.map((string, index) =>\n          <Row key={index}>\n            <Col span={24}>\n              <Switch defaultChecked={string.accountBindingStatus} onChange={checked => onChange(string)} /><StyledP>{string.accountName}</StyledP>\n            </Col>\n          </Row>\n        );\n        return (\n          <ul>{listItems}</ul>\n        );\n      }\n      const AccountList = () => {\n        const listItems = stringAccount.map((string, index) =>\n          <Row key={index}>\n            <Col span={24}>\n              <StyledA onClick={() => { selectedMenu(string) }}>{string.main_account_no}</StyledA><StyledSpan> {string.product_name_english}</StyledSpan>\n\n            </Col>\n          </Row>\n        );\n        return (\n          <ul>{listItems}</ul>\n        );\n      }\n      const newSearch = (\n        <div style={{ marginTop: 20 }}>\n          <Row gutter={[4, 24]}>\n            <SimpleSearch search={searchIdCardNumber} prefixWording={i18n.t(\"idCard\")} />\n          </Row>\n          {(isSearch) ? (\n            <AccountList />\n          ) : ('')}\n        </div>)\n\n      const accountDetail = (\n        <div style={{ margin: 20 }}>\n          {/* <Row gutter={[4, 24]}>\n        <Button onClick={() => setViewDetail(false)}>{i18n.t(\"back\")}</Button>\n      </Row> */}\n          <Row gutter={[4, 24]} align=\"top\">\n            <Col span={6}>\n              <StyledInput readOnly={true} prefix={i18n.t('accountNumber')} defaultValue={customerServicesMenuStore.accountId} />\n\n            </Col>\n          </Row>\n          <Row gutter={[4, 24]} align=\"middle\">\n            <SwitchList />\n            <SimpleModal\n              onOk={() => setVisble(false)}\n              onCancel={() => setVisble(false)}\n              okText=\"Confirm\"\n              cancelText=\"Cancel\"\n              modalString={modalString}\n              visible={visible}\n            />\n          </Row>\n          {/* <div style={{ marginTop: 20 }} >\n        <SwitchList />\n        <SimpleModal\n          onOk={() => setVisble(false)}\n          onCancel={() => setVisble(false)}\n          okText=\"Confirm\"\n          cancelText=\"Cancel\"\n          modalString={modalString}\n          visible={visible}\n        />\n      </div> */}\n          <Row gutter={[4, 24]} align=\"bottom\" justify=\"center\">\n            <Col span={6}>\n              <Button shape=\"round\" onClick={() => setViewDetail(false)}>Back</Button>\n\n            </Col>\n          </Row>\n        </div>\n      )\n      return (viewDetail) ? accountDetail : newSearch\n\n\n\n    }))\nexport default withTranslation('common')(AccountUnbinding)\n"]},"metadata":{},"sourceType":"module"}