{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport UserList from './user-list';\nimport ManageUser from './manage-user';\nconst User = inject('userAccessManagementStore')(observer(props => {\n  const {\n    userAccessManagementStore\n  } = props;\n  const {\n    0: isViewManageUser,\n    1: setIsViewManageUser\n  } = useState(false);\n  useEffect(() => {\n    if (userAccessManagementStore.nextPageIsManageUser) {\n      setIsViewManageUser(true);\n    } else {\n      setIsViewManageUser(false);\n    }\n  }, [userAccessManagementStore.nextPageIsManageUser]);\n  return isViewManageUser ? __jsx(ManageUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 26\n    }\n  }) : __jsx(UserList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 43\n    }\n  });\n}));\nexport default User;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/index.js"],"names":["React","useState","useEffect","UserList","ManageUser","User","inject","observer","props","userAccessManagementStore","isViewManageUser","setIsViewManageUser","nextPageIsManageUser"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,MAAMC,IAAI,GAAGC,MAAM,CAAC,2BAAD,CAAN,CACVC,QAAQ,CAAEC,KAAD,IAAW;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAgCD,KAAtC;AACA,QAAM;AAAA,OAACE,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CV,QAAQ,CAAC,KAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,yBAAyB,CAACG,oBAA9B,EAAoD;AAClDD,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,KAFD,MAEO;AACLA,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AACF,GANQ,EAMN,CAACF,yBAAyB,CAACG,oBAA3B,CANM,CAAT;AAQA,SACEF,gBAAgB,GAAG,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAoB,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC;AAGD,CAfQ,CADE,CAAb;AAkBA,eAAeL,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport UserList from './user-list'\nimport ManageUser from './manage-user'\nconst User = inject('userAccessManagementStore')\n  (observer((props) => {\n    const { userAccessManagementStore } = props\n    const [isViewManageUser, setIsViewManageUser] = useState(false)\n\n    useEffect(() => {\n      if (userAccessManagementStore.nextPageIsManageUser) {\n        setIsViewManageUser(true)\n      } else {\n        setIsViewManageUser(false)\n      }\n    }, [userAccessManagementStore.nextPageIsManageUser])\n\n    return (\n      isViewManageUser ? <ManageUser /> : <UserList />\n    )\n  }))\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}