{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../i18n';\nimport SimpleModal from '../simple-modal';\nimport { BusinessParameterSetupApi } from '../../services';\nconst StyledInput = styled(_Input).withConfig({\n  displayName: \"otp-setup__StyledInput\",\n  componentId: \"y1xkpv-0\"\n})([\"background-color:unset !important;border:unset !important;border-bottom:1px solid black !important;box-shadow:none !important;.ant-input{text-align:center !important;background-color:unset !important;\", \"}\"], ''\n/* cursor:not-allowed !important; */\n);\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null);\n\n  const setFocus = () => {\n    htmlElRef.current && htmlElRef.current.focus();\n  };\n\n  return [htmlElRef, setFocus];\n};\n\nconst OtpSetup = inject('businessParametersSetupStore')(observer(props => {\n  const {\n    t,\n    businessParametersSetupStore\n  } = props;\n  const {\n    0: expireOtp,\n    1: setExpire\n  } = useState(null);\n  const {\n    0: visibleExpireEdit,\n    1: setvisibleExpireEdit\n  } = useState(true);\n  const {\n    0: visibleExpireSubmit,\n    1: setvisibleExpireSubmit\n  } = useState(false);\n  const {\n    0: disExpire,\n    1: setdisExpire\n  } = useState(false);\n  const {\n    0: disExpireSubmit,\n    1: setdisExpireSubmit\n  } = useState(false);\n  const {\n    0: maximumOtp,\n    1: setMaximum\n  } = useState(null);\n  const {\n    0: visibleEditMaximum,\n    1: setvisibleEditMaximum\n  } = useState(true);\n  const {\n    0: visibleSubmitMaximum,\n    1: setvisibleSubmitMaximum\n  } = useState(false);\n  const {\n    0: disMaximum,\n    1: setdisMaximum\n  } = useState(false);\n  const {\n    0: disMaximumSubmit,\n    1: setdisMaximumSubmit\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModal\n  } = useState(\"\");\n  const {\n    0: inputExpiration,\n    1: setInputExpiration\n  } = useState(true);\n  const {\n    0: inputMax,\n    1: setInputMax\n  } = useState(true);\n  const {\n    0: editExpiration,\n    1: setEditExpiration\n  } = useState(false);\n  const {\n    0: editMaximum,\n    1: setEditMaximum\n  } = useState(false); // const [inputRef, setInputFocus] = useFocus()\n\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState(\"\");\n  const {\n    0: textCancel,\n    1: setTextCancel\n  } = useState(\"\");\n  const {\n    0: textOk,\n    1: setTextOk\n  } = useState(\"\");\n  useEffect(() => {\n    // BusinessParameterSetupApi.getOtpValueAxios({ otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\" })\n    if (!businessParametersSetupStore.responseGetOtpValue || businessParametersSetupStore.fetchingGetOtp == null) {\n      let data = {\n        otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\"\n      };\n      businessParametersSetupStore.getOTPdata(data);\n    }\n  }, []);\n  useEffect(() => {\n    let newProps = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue));\n    console.log(\"Will Receive props : \", newProps);\n\n    if (newProps && newProps != undefined) {\n      if (!expireOtp || !maximumOtp) {\n        let tmpExpire = newProps.find(e => e.Name == \"OTP_EXPIRE_TIME\");\n        let tmpMaximum = newProps.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\");\n        setExpire(tmpExpire.Value);\n        setMaximum(tmpMaximum.Value);\n      }\n    }\n  }, [businessParametersSetupStore.responseGetOtpValue]);\n\n  const _onClickExpiration = () => {\n    console.log(\"==edit Expiration==\");\n    setInputExpiration(false);\n    let expire = document.getElementById(\"otp-expiration-period\");\n    console.log(\"Expiration >>>\", expire);\n    expire.style.color = \"orange\";\n    expire.focus();\n    setvisibleExpireEdit(false);\n    setvisibleExpireSubmit(true);\n    setEditMaximum(true);\n  };\n\n  const _onClickMaximumRetry = () => {\n    console.log(\"==edit Maximum==\");\n    setInputMax(false);\n    let maximum = document.getElementById(\"otp-maximum-retrying\");\n    console.log(\"Maximum >>>\", maximum);\n    maximum.style.color = \"orange\";\n    maximum.focus();\n    setvisibleEditMaximum(false);\n    setvisibleSubmitMaximum(true);\n    setEditExpiration(true);\n  };\n\n  const _openPopup = text => {\n    setVisible(true);\n\n    if (text == \"maximum\") {\n      let a = getValueFromStore(\"maximum\");\n      console.log(a);\n      console.log(maximumOtp);\n\n      if (maximumOtp == a) {\n        setModal(\"Error: OTP Maximum is not change value \" + maximumOtp);\n        setTitle(\"Error\");\n        setModalType(\"error\");\n        setTextCancel(\"cancel\");\n      } else if (!maximumOtp) {\n        setModal(\"Error: OTP Maximum is not empty \");\n        setTitle(\"Error\");\n        setModalType(\"error\");\n        setTextCancel(\"cancel\");\n      } else {\n        setModal(__jsx(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 22\n          }\n        }, \"Confirm update OTP\", \" \", text, \" \", \"Retrying !!!\", __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 105\n          }\n        }), a, \" \", \"to\", \" \", maximumOtp));\n        setTitle(\"Confirm\");\n        setModalType(\"confirm\");\n        setTextCancel(\"cancel\");\n        setTextOk(\"confirm\");\n      }\n    } else {\n      let a = getValueFromStore(\"expire\");\n\n      if (expireOtp == a) {\n        setModal(\"Error: OTP Expire is not change value \" + expireOtp);\n        setTitle(\"Error\");\n        setModalType(\"error\");\n        setTextCancel(\"cancel\");\n      } else if (!expireOtp) {\n        setModal(\"Error: OTP Expire is not empty \");\n        setTitle(\"Error\");\n        setModalType(\"error\");\n        setTextCancel(\"cancel\");\n      } else {\n        setModal(__jsx(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 22\n          }\n        }, \"Confirm update OTP\", \" \", text, \" \", \"Period !!!\", __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 103\n          }\n        }), a, \" \", \"to\", \" \", expireOtp));\n        setTitle(\"Confirm\");\n        setModalType(\"confirm\");\n        setTextCancel(\"cancel\");\n        setTextOk(\"confirm\");\n      }\n    }\n  };\n\n  const _setUnfocus = type => {\n    if (type == \"expire\") {\n      let expire = document.getElementById(\"otp-expiration-period\");\n      expire.style.color = \"rgba(0, 0, 0, 0.65)\";\n      expire.blur();\n    } else {\n      let maximum = document.getElementById(\"otp-maximum-retrying\");\n      maximum.style.color = \"rgba(0, 0, 0, 0.65)\";\n      maximum.focus();\n    }\n  };\n\n  const _onConfirm = async () => {\n    let a = getValueFromStore(\"maximum\");\n    let b = getValueFromStore(\"expire\");\n\n    if (a != maximumOtp) {\n      console.log(\"update >>>\", maximumOtp);\n      await businessParametersSetupStore.updateOTPdata({\n        currentData: {\n          OTP_MAXIMUN_ENTERED: a\n        },\n        maker_id: 12345699,\n        OTP_MAXIMUN_ENTERED: maximumOtp\n      });\n      setVisible(false);\n      setInputMax(true);\n      setvisibleEditMaximum(true);\n      setvisibleSubmitMaximum(false);\n      setdisMaximum(false);\n      setEditExpiration(false);\n\n      _setUnfocus(\"maximum\");\n\n      setMaximum(a); // setTimeout(() => {\n      //   console.log(\"Success\")\n      //   setVisible(true)\n      //   setModalType(\"close\")\n      //   setTextCancel(\"close\")\n      //   setModal(<div style={{ textAlign: 'center' }}>Success update OTP{\" \"}{a}{\" \"}Retrying !!!<br />{a}{\" \"}to{\" \"}{maximumOtp}</div>)\n      // }, 3000);\n    }\n\n    if (b != expireOtp) {\n      console.log(\"update >>>\", expireOtp); // await businessParametersSetupStore.updateOTPdata({\n      //currentData: {OTP_EXPIRE_TIME:b}\n      //maker_id: 12345699\n      //   OTP_EXPIRE_TIME: expireOtp\n      // })\n\n      setVisible(false);\n      setInputExpiration(true);\n      setvisibleExpireEdit(true);\n      setvisibleExpireSubmit(false);\n      setEditMaximum(false);\n      setdisExpire(false);\n\n      _setUnfocus(\"expire\");\n\n      setExpire(b);\n      setTimeout(() => {\n        console.log(\"Success\");\n        setVisible(true);\n        setModalType(\"close\");\n        setTextCancel(\"close\");\n        setModal(__jsx(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 22\n          }\n        }, \"Success update OTP\", \" \", b, \" \", \"Period !!!\", __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 100\n          }\n        }), b, \" \", \"to\", \" \", expireOtp));\n      }, 3000);\n    }\n  };\n\n  const getValueFromStore = type => {\n    let old_data = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue));\n    console.log(old_data);\n\n    if (type == \"expire\") {\n      let tmpExpire = old_data.find(e => e.Name == \"OTP_EXPIRE_TIME\");\n      return tmpExpire.Value;\n    } else {\n      let tmpMaximum = old_data.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\");\n      return tmpMaximum.Value;\n    }\n  };\n\n  const _onCancel = () => {\n    setVisible(false);\n    let a = getValueFromStore(\"maximum\");\n    let b = getValueFromStore(\"expire\");\n    setMaximum(a);\n    setInputMax(true);\n    setvisibleEditMaximum(true);\n    setvisibleSubmitMaximum(false);\n    setdisMaximum(false);\n    setEditExpiration(false); // _setUnfocus(\"maximum\")\n\n    setExpire(b);\n    setInputExpiration(true);\n    setvisibleExpireEdit(true);\n    setvisibleExpireSubmit(false);\n    setEditMaximum(false);\n    setdisExpire(false); // _setUnfocus(\"expire\")\n\n    let expire = document.getElementById(\"otp-expiration-period\");\n    let maximum = document.getElementById(\"otp-maximum-retrying\");\n    expire.style.color = \"rgba(0, 0, 0, 0.65)\";\n    expire.blur();\n    maximum.style.color = \"rgba(0, 0, 0, 0.65)\";\n    maximum.blur();\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, __jsx(_Row, {\n    gutter: [8, 8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, __jsx(_Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    readOnly: inputMax,\n    id: \"otp-maximum-retrying\",\n    value: maximumOtp,\n    onChange: e => setMaximum(e.target.value),\n    prefix: t(\"otpMaximumRetrying\"),\n    suffix: t(\"otpTime\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  })), __jsx(_Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, visibleEditMaximum && __jsx(_Button, {\n    disabled: editMaximum,\n    onClick: () => _onClickMaximumRetry(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 38\n    }\n  }, t(\"edit\")), visibleSubmitMaximum && __jsx(_Button, {\n    disabled: disMaximumSubmit,\n    onClick: () => _openPopup(\"maximum\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 40\n    }\n  }, t(\"submit\")))), __jsx(_Row, {\n    gutter: [8, 8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, __jsx(_Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    readOnly: inputExpiration\n    /*ref={inputRef}*/\n    ,\n    id: \"otp-expiration-period\",\n    value: expireOtp,\n    onChange: e => setExpire(e.target.value),\n    prefix: t(\"otpExpirationPeriod\"),\n    suffix: t(\"otpSecond\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  })), __jsx(_Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, visibleExpireEdit && __jsx(_Button, {\n    disabled: editExpiration,\n    onClick: () => _onClickExpiration(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 37\n    }\n  }, t(\"edit\")), visibleExpireSubmit && __jsx(_Button, {\n    disabled: disExpireSubmit\n    /*onClick={setInputFocus}*/\n    ,\n    onClick: () => _openPopup(\"expire\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 39\n    }\n  }, t(\"submit\")))), __jsx(SimpleModal, {\n    title: title,\n    type: modalType,\n    onOk: () => _onConfirm(),\n    onCancel: () => _onCancel(),\n    textCancel: textCancel,\n    textOk: textOk,\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }));\n}));\nexport default withTranslation('common')(OtpSetup);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js"],"names":["React","useEffect","useRef","useState","styled","inject","observer","withTranslation","SimpleModal","BusinessParameterSetupApi","StyledInput","useFocus","htmlElRef","setFocus","current","focus","OtpSetup","props","t","businessParametersSetupStore","expireOtp","setExpire","visibleExpireEdit","setvisibleExpireEdit","visibleExpireSubmit","setvisibleExpireSubmit","disExpire","setdisExpire","disExpireSubmit","setdisExpireSubmit","maximumOtp","setMaximum","visibleEditMaximum","setvisibleEditMaximum","visibleSubmitMaximum","setvisibleSubmitMaximum","disMaximum","setdisMaximum","disMaximumSubmit","setdisMaximumSubmit","visible","setVisible","modalString","setModal","inputExpiration","setInputExpiration","inputMax","setInputMax","editExpiration","setEditExpiration","editMaximum","setEditMaximum","title","setTitle","modalType","setModalType","textCancel","setTextCancel","textOk","setTextOk","responseGetOtpValue","fetchingGetOtp","data","otpParamsField","getOTPdata","newProps","JSON","parse","stringify","console","log","undefined","tmpExpire","find","e","Name","tmpMaximum","Value","_onClickExpiration","expire","document","getElementById","style","color","_onClickMaximumRetry","maximum","_openPopup","text","a","getValueFromStore","textAlign","_setUnfocus","type","blur","_onConfirm","b","updateOTPdata","currentData","OTP_MAXIMUN_ENTERED","maker_id","setTimeout","old_data","_onCancel","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { Input, Row, Col, Button, Alert } from 'antd'\nimport styled from 'styled-components'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../i18n'\nimport SimpleModal from '../simple-modal'\nimport { BusinessParameterSetupApi } from '../../services'\nconst StyledInput = styled(Input)`\n  background-color: unset !important;\n  border: unset !important;\n  border-bottom: 1px solid black !important;\n  box-shadow: none !important;\n  .ant-input{\n    text-align: center !important;\n    background-color: unset !important;\n    ${'' /* cursor:not-allowed !important; */}\n  }\n`\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null)\n  const setFocus = () => { htmlElRef.current && htmlElRef.current.focus() }\n  return [htmlElRef, setFocus]\n}\n\nconst OtpSetup =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const { t, businessParametersSetupStore } = props\n      const [expireOtp, setExpire] = useState(null)\n      const [visibleExpireEdit, setvisibleExpireEdit] = useState(true)\n      const [visibleExpireSubmit, setvisibleExpireSubmit] = useState(false)\n      const [disExpire, setdisExpire] = useState(false)\n      const [disExpireSubmit, setdisExpireSubmit] = useState(false)\n\n      const [maximumOtp, setMaximum] = useState(null)\n      const [visibleEditMaximum, setvisibleEditMaximum] = useState(true)\n      const [visibleSubmitMaximum, setvisibleSubmitMaximum] = useState(false)\n      const [disMaximum, setdisMaximum] = useState(false)\n      const [disMaximumSubmit, setdisMaximumSubmit] = useState(false)\n\n      const [visible, setVisible] = useState(false)\n      const [modalString, setModal] = useState(\"\")\n      const [inputExpiration, setInputExpiration] = useState(true)\n      const [inputMax, setInputMax] = useState(true)\n      const [editExpiration, setEditExpiration] = useState(false)\n      const [editMaximum, setEditMaximum] = useState(false)\n      // const [inputRef, setInputFocus] = useFocus()\n      const [title, setTitle] = useState(\"\")\n      const [modalType, setModalType] = useState(\"\")\n      const [textCancel, setTextCancel] = useState(\"\")\n      const [textOk, setTextOk] = useState(\"\")\n\n      useEffect(() => {\n        // BusinessParameterSetupApi.getOtpValueAxios({ otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\" })\n\n        if (!businessParametersSetupStore.responseGetOtpValue || businessParametersSetupStore.fetchingGetOtp == null) {\n          let data = { otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\" }\n          businessParametersSetupStore.getOTPdata(data)\n        }\n      }, [])\n\n      useEffect(() => {\n\n        let newProps = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue))\n        console.log(\"Will Receive props : \", newProps)\n        if (newProps && newProps != undefined) {\n          if (!expireOtp || !maximumOtp) {\n            let tmpExpire = newProps.find(e => e.Name == \"OTP_EXPIRE_TIME\")\n            let tmpMaximum = newProps.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\")\n            setExpire(tmpExpire.Value)\n            setMaximum(tmpMaximum.Value)\n          }\n        }\n      }, [businessParametersSetupStore.responseGetOtpValue])\n\n      const _onClickExpiration = () => {\n        console.log(\"==edit Expiration==\")\n        setInputExpiration(false)\n        let expire = document.getElementById(\"otp-expiration-period\")\n        console.log(\"Expiration >>>\", expire)\n        expire.style.color = \"orange\"\n        expire.focus()\n        setvisibleExpireEdit(false)\n        setvisibleExpireSubmit(true)\n        setEditMaximum(true)\n      }\n\n      const _onClickMaximumRetry = () => {\n        console.log(\"==edit Maximum==\")\n        setInputMax(false)\n        let maximum = document.getElementById(\"otp-maximum-retrying\")\n        console.log(\"Maximum >>>\", maximum)\n        maximum.style.color = \"orange\"\n        maximum.focus()\n        setvisibleEditMaximum(false)\n        setvisibleSubmitMaximum(true)\n        setEditExpiration(true)\n      }\n\n      const _openPopup = (text) => {\n        setVisible(true)\n        if (text == \"maximum\") {\n          let a = getValueFromStore(\"maximum\")\n          console.log(a)\n          console.log(maximumOtp)\n          if (maximumOtp == a) {\n            setModal(\"Error: OTP Maximum is not change value \" + maximumOtp)\n            setTitle(\"Error\")\n            setModalType(\"error\")\n            setTextCancel(\"cancel\")\n          }\n          else if (!maximumOtp) {\n            setModal(\"Error: OTP Maximum is not empty \")\n            setTitle(\"Error\")\n            setModalType(\"error\")\n            setTextCancel(\"cancel\")\n          }\n          else {\n            setModal(<div style={{ textAlign: 'center' }}>Confirm update OTP{\" \"}{text}{\" \"}Retrying !!!<br />{a}{\" \"}to{\" \"}{maximumOtp}</div>)\n            setTitle(\"Confirm\")\n            setModalType(\"confirm\")\n            setTextCancel(\"cancel\")\n            setTextOk(\"confirm\")\n          }\n        }\n        else {\n          let a = getValueFromStore(\"expire\")\n          if (expireOtp == a) {\n            setModal(\"Error: OTP Expire is not change value \" + expireOtp)\n            setTitle(\"Error\")\n            setModalType(\"error\")\n            setTextCancel(\"cancel\")\n          }\n          else if (!expireOtp) {\n            setModal(\"Error: OTP Expire is not empty \")\n            setTitle(\"Error\")\n            setModalType(\"error\")\n            setTextCancel(\"cancel\")\n          }\n          else {\n            setModal(<div style={{ textAlign: 'center' }}>Confirm update OTP{\" \"}{text}{\" \"}Period !!!<br />{a}{\" \"}to{\" \"}{expireOtp}</div>)\n            setTitle(\"Confirm\")\n            setModalType(\"confirm\")\n            setTextCancel(\"cancel\")\n            setTextOk(\"confirm\")\n          }\n        }\n\n      }\n\n      const _setUnfocus = (type) => {\n        if (type == \"expire\") {\n          let expire = document.getElementById(\"otp-expiration-period\")\n          expire.style.color = \"rgba(0, 0, 0, 0.65)\"\n          expire.blur()\n        } else {\n          let maximum = document.getElementById(\"otp-maximum-retrying\")\n          maximum.style.color = \"rgba(0, 0, 0, 0.65)\"\n          maximum.focus()\n        }\n      }\n\n      const _onConfirm = async () => {\n        let a = getValueFromStore(\"maximum\")\n        let b = getValueFromStore(\"expire\")\n        if (a != maximumOtp) {\n          console.log(\"update >>>\", maximumOtp)\n          await businessParametersSetupStore.updateOTPdata({\n            currentData: { OTP_MAXIMUN_ENTERED: a },\n            maker_id: 12345699,\n            OTP_MAXIMUN_ENTERED: maximumOtp\n          })\n          setVisible(false)\n          setInputMax(true)\n          setvisibleEditMaximum(true)\n          setvisibleSubmitMaximum(false)\n          setdisMaximum(false)\n          setEditExpiration(false)\n          _setUnfocus(\"maximum\")\n          setMaximum(a)\n          // setTimeout(() => {\n          //   console.log(\"Success\")\n          //   setVisible(true)\n          //   setModalType(\"close\")\n          //   setTextCancel(\"close\")\n\n          //   setModal(<div style={{ textAlign: 'center' }}>Success update OTP{\" \"}{a}{\" \"}Retrying !!!<br />{a}{\" \"}to{\" \"}{maximumOtp}</div>)\n          // }, 3000);\n        }\n        if (b != expireOtp) {\n          console.log(\"update >>>\", expireOtp)\n          // await businessParametersSetupStore.updateOTPdata({\n          //currentData: {OTP_EXPIRE_TIME:b}\n          //maker_id: 12345699\n          //   OTP_EXPIRE_TIME: expireOtp\n          // })\n          setVisible(false)\n          setInputExpiration(true)\n          setvisibleExpireEdit(true)\n          setvisibleExpireSubmit(false)\n          setEditMaximum(false)\n          setdisExpire(false)\n          _setUnfocus(\"expire\")\n          setExpire(b)\n          setTimeout(() => {\n            console.log(\"Success\")\n            setVisible(true)\n            setModalType(\"close\")\n            setTextCancel(\"close\")\n\n            setModal(<div style={{ textAlign: 'center' }}>Success update OTP{\" \"}{b}{\" \"}Period !!!<br />{b}{\" \"}to{\" \"}{expireOtp}</div>)\n          }, 3000);\n        }\n      }\n\n      const getValueFromStore = (type) => {\n        let old_data = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue))\n        console.log(old_data)\n        if (type == \"expire\") {\n          let tmpExpire = old_data.find(e => e.Name == \"OTP_EXPIRE_TIME\")\n          return tmpExpire.Value\n        } else {\n          let tmpMaximum = old_data.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\")\n          return tmpMaximum.Value\n        }\n      }\n\n      const _onCancel = () => {\n        setVisible(false)\n        let a = getValueFromStore(\"maximum\")\n        let b = getValueFromStore(\"expire\")\n\n        setMaximum(a)\n        setInputMax(true)\n        setvisibleEditMaximum(true)\n        setvisibleSubmitMaximum(false)\n        setdisMaximum(false)\n        setEditExpiration(false)\n        // _setUnfocus(\"maximum\")\n\n        setExpire(b)\n        setInputExpiration(true)\n        setvisibleExpireEdit(true)\n        setvisibleExpireSubmit(false)\n        setEditMaximum(false)\n        setdisExpire(false)\n        // _setUnfocus(\"expire\")\n\n        let expire = document.getElementById(\"otp-expiration-period\")\n        let maximum = document.getElementById(\"otp-maximum-retrying\")\n        expire.style.color = \"rgba(0, 0, 0, 0.65)\"\n        expire.blur()\n        maximum.style.color = \"rgba(0, 0, 0, 0.65)\"\n        maximum.blur()\n      }\n\n      return (\n        <div>\n          <Row gutter={[8, 8]}>\n            <Col span={8}>\n              <StyledInput readOnly={inputMax} id={\"otp-maximum-retrying\"} value={maximumOtp} onChange={(e) => setMaximum(e.target.value)} prefix={t(\"otpMaximumRetrying\")} suffix={t(\"otpTime\")} />\n            </Col>\n            <Col span={6}>\n              {visibleEditMaximum && <Button disabled={editMaximum} onClick={() => _onClickMaximumRetry()}>{t(\"edit\")}</Button>}\n              {visibleSubmitMaximum && <Button disabled={disMaximumSubmit} onClick={() => _openPopup(\"maximum\")}>{t(\"submit\")}</Button>}\n            </Col>\n          </Row>\n          <Row gutter={[8, 8]}>\n            <Col span={8}>\n              <StyledInput readOnly={inputExpiration} /*ref={inputRef}*/ id={\"otp-expiration-period\"} value={expireOtp} onChange={(e) => setExpire(e.target.value)} prefix={t(\"otpExpirationPeriod\")} suffix={t(\"otpSecond\")} />\n            </Col>\n            <Col span={6}>\n              {visibleExpireEdit && <Button disabled={editExpiration} onClick={() => _onClickExpiration()} >{t(\"edit\")}</Button>}\n              {visibleExpireSubmit && <Button disabled={disExpireSubmit}/*onClick={setInputFocus}*/ onClick={() => _openPopup(\"expire\")} >{t(\"submit\")}</Button>}\n            </Col>\n          </Row>\n          <SimpleModal\n            title={title}\n            type={modalType}\n            onOk={() => _onConfirm()}\n            onCancel={() => _onCancel()}\n            textCancel={textCancel}\n            textOk={textOk}\n            modalString={modalString}\n            visible={visible}\n          />\n        </div>\n      )\n    }))\n\nexport default withTranslation('common')(OtpSetup)\n"]},"metadata":{},"sourceType":"module"}