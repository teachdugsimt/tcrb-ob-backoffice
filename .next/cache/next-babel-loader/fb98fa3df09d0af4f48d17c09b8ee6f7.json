{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, createRef, useRef } from 'react';\nimport { Input, Row, Col, Button } from 'antd';\nimport styled from 'styled-components';\nimport SimpleModal from '../simple-modal';\nvar StyledInput = styled(Input).withConfig({\n  displayName: \"otp-setup__StyledInput\",\n  componentId: \"y1xkpv-0\"\n})([\"background-color:unset !important;border:unset !important;border-bottom:1px solid black !important;box-shadow:none !important;.ant-input{background-color:unset !important;\", \"}\"], ''\n/* cursor:not-allowed !important; */\n);\n_c = StyledInput;\nexport default function OtpSetup() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(true),\n      disableEditOtp = _useState[0],\n      setDisableEditOtp = _useState[1];\n\n  var _useState2 = useState(true),\n      disableEditOtpExpire = _useState2[0],\n      setDisableEditOtpExpire = _useState2[1];\n\n  var _useState3 = useState(false),\n      visible = _useState3[0],\n      setVisble = _useState3[1];\n\n  var _useState4 = useState(''),\n      modalString = _useState4[0],\n      setModalString = _useState4[1];\n\n  var textInput = createRef();\n\n  var editOtpMaximum = function editOtpMaximum() {\n    console.log(textInput.current);\n\n    if (disableEditOtp) {\n      setDisableEditOtp(false);\n    } else {\n      setVisble(true);\n      setModalString(__jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"Changing OTP Maximum Retrying!!\"), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, \"From ...\")));\n    }\n  };\n\n  var changeOtpMaximum = function changeOtpMaximum() {\n    console.log(textInput.current); //some action\n\n    setDisableEditOtp(true);\n    setVisble(false);\n  };\n\n  var changeOtpExpire = function changeOtpExpire() {};\n\n  var confirmModal = function confirmModal() {\n    if (disableEditOtp === false) {\n      changeOtpMaximum();\n    } else {\n      changeOtpExpire();\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [8, 8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    type: \"text\",\n    prefix: \"OTP Maximum Retrying\",\n    suffix: \"Times\",\n    readOnly: disableEditOtp,\n    innerRef: function innerRef(x) {\n      textInput = (_readOnlyError(\"textInput\"), x);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: editOtpMaximum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \" \", disableEditOtp ? 'Edit' : 'Submit', \" \"))), __jsx(Row, {\n    gutter: [8, 8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    prefix: \"OTP Expiration Perlod\",\n    suffix: \"Seconds\",\n    disabled: !disableEditOtp,\n    readOnly: disableEditOtpExpire,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    disabled: !disableEditOtp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \" \", disableEditOtpExpire ? 'Edit' : 'Submit', \" \"))), __jsx(SimpleModal, {\n    onOk: function onOk() {\n      return confirmModal();\n    },\n    onCancel: function onCancel() {\n      return setVisble(false);\n    },\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(OtpSetup, \"fRhOy5rF8sjttF+waSwSHGKMSXo=\");\n\n_c2 = OtpSetup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"OtpSetup\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js"],"names":["React","useState","createRef","useRef","Input","Row","Col","Button","styled","SimpleModal","StyledInput","OtpSetup","disableEditOtp","setDisableEditOtp","disableEditOtpExpire","setDisableEditOtpExpire","visible","setVisble","modalString","setModalString","textInput","editOtpMaximum","console","log","current","changeOtpMaximum","changeOtpExpire","confirmModal","x"],"mappings":"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","sourcesContent":["import React, { useState, createRef, useRef } from 'react'\nimport { Input, Row, Col, Button } from 'antd'\nimport styled from 'styled-components'\nimport SimpleModal from '../simple-modal'\nconst StyledInput = styled(Input)`\n\n      background-color: unset !important;\n      border: unset !important;\n      border-bottom: 1px solid black !important;\n      box-shadow: none !important;\n  .ant-input{\n    background-color: unset !important;\n    ${'' /* cursor:not-allowed !important; */}\n  }\n\n`\nexport default function OtpSetup() {\n  const [disableEditOtp, setDisableEditOtp] = useState(true)\n  const [disableEditOtpExpire, setDisableEditOtpExpire] = useState(true)\n  const [visible, setVisble] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const textInput = createRef();\n\n\n  const editOtpMaximum = () => {\n    console.log(textInput.current);\n\n    if (disableEditOtp) {\n      setDisableEditOtp(false)\n    } else {\n      setVisble(true)\n      setModalString(\n        <div>\n          <p>Changing OTP Maximum Retrying!!</p>\n          <p>From ...</p>\n        </div>\n      )\n    }\n  }\n  const changeOtpMaximum = () => {\n    console.log(textInput.current);\n    //some action\n    setDisableEditOtp(true)\n    setVisble(false)\n  }\n  const changeOtpExpire = () => {\n\n  }\n  const confirmModal = () => {\n    if (disableEditOtp === false) {\n      changeOtpMaximum()\n    } else {\n      changeOtpExpire()\n    }\n  }\n  return (\n    <div>\n      <Row gutter={[8, 8]}>\n        <Col span={8}>\n          <StyledInput type=\"text\" prefix=\"OTP Maximum Retrying\" suffix=\"Times\" readOnly={disableEditOtp} innerRef={x => {\n            textInput = x\n          }} />\n          {/* <Input ref={textInput}/> */}\n        </Col>\n        <Col span={6}>\n          <Button onClick={editOtpMaximum}> {disableEditOtp ? 'Edit' : 'Submit'} </Button>\n        </Col>\n      </Row>\n      <Row gutter={[8, 8]}>\n        <Col span={8}>\n          <StyledInput prefix=\"OTP Expiration Perlod\" suffix=\"Seconds\" disabled={!disableEditOtp} readOnly={disableEditOtpExpire} />\n        </Col>\n        <Col span={6}>\n          <Button disabled={!disableEditOtp}> {disableEditOtpExpire ? 'Edit' : 'Submit'} </Button>\n        </Col>\n      </Row>\n\n      <SimpleModal\n        onOk={() => confirmModal()}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={modalString}\n        visible={visible}\n      />\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}