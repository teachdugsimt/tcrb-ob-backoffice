{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/layouts/EmptyLayout.js\";\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport MainLayout from './MainLayout'; // import { useStores } from '../hooks/use-stores'\n\nimport { inject, observer } from 'mobx-react';\nimport Login from '../pages/login';\nvar EmptyLayout = inject('authenStore')(observer(function (props) {\n  // const { authenStore } = useStores()\n  var authenStore = props.authenStore;\n\n  if (authenStore.password && authenStore.id) {\n    return __jsx(MainLayout, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, props.children);\n  } else if (props.router && props.router.route == \"/_error\") {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, props.children);\n  } else {\n    return __jsx(Login, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n}));\nexport default _c = withRouter(EmptyLayout);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/layouts/EmptyLayout.js"],"names":["React","useContext","Router","withRouter","MainLayout","inject","observer","Login","EmptyLayout","props","authenStore","password","id","children","router","route"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,IAAMC,WAAW,GAAGH,MAAM,CAAC,aAAD,CAAN,CAAsBC,QAAQ,CAAC,UAACG,KAAD,EAAW;AAC5D;AAD4D,MAEpDC,WAFoD,GAEpCD,KAFoC,CAEpDC,WAFoD;;AAG5D,MAAIA,WAAW,CAACC,QAAZ,IAAwBD,WAAW,CAACE,EAAxC,EAA4C;AAC1C,WACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACI,QADT,CADF;AAKD,GAND,MAOK,IAAIJ,KAAK,CAACK,MAAN,IAAgBL,KAAK,CAACK,MAAN,CAAaC,KAAb,IAAsB,SAA1C,EAAqD;AACxD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMN,KAAK,CAACI,QAAZ,CAAP;AACD,GAFI,MAGA;AACH,WAAO,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAhBiD,CAA9B,CAApB;AAiBA,oBAAeV,UAAU,CAACK,WAAD,CAAzB","sourcesContent":["import React, { useContext } from 'react'\nimport Router, { withRouter } from 'next/router'\nimport MainLayout from './MainLayout'\n// import { useStores } from '../hooks/use-stores'\nimport { inject, observer } from 'mobx-react'\nimport Login from '../pages/login'\n\nconst EmptyLayout = inject('authenStore')(observer((props) => {\n  // const { authenStore } = useStores()\n  const { authenStore } = props\n  if (authenStore.password && authenStore.id) {\n    return (\n      <MainLayout>\n        {props.children}\n      </MainLayout>\n    )\n  }\n  else if (props.router && props.router.route == \"/_error\") {\n    return <div>{props.children}</div>\n  }\n  else {\n    return <Login />\n  }\n}))\nexport default withRouter(EmptyLayout)\n"]},"metadata":{},"sourceType":"module"}