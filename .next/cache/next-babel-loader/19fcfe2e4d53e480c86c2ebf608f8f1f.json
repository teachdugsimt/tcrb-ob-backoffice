{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/filter-box.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Table, Input, Button, Space } from 'antd';\nexport const getColumnSearchProps = (dataIndex, handleSearch, handleReset) => ({\n  filterDropdown: ({\n    setSelectedKeys,\n    selectedKeys,\n    confirm,\n    clearFilters\n  }) => __jsx(\"div\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(Input // ref={node => {\n  //   this.searchInput = node;\n  // }}\n  , {\n    placeholder: `Search ${dataIndex}`,\n    value: selectedKeys[0],\n    onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n    onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n    style: {\n      width: 188,\n      marginBottom: 8,\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), __jsx(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: () => {\n      console.log(selectedKeys);\n      handleSearch(selectedKeys, confirm, dataIndex);\n    },\n    icon: __jsx(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }),\n    size: \"small\",\n    style: {\n      width: 90\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Search\"), __jsx(Button, {\n    onClick: () => handleReset(clearFilters),\n    size: \"small\",\n    style: {\n      width: 90\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Reset\"))),\n  filterIcon: filtered => __jsx(SearchOutlined, {\n    style: {\n      color: filtered ? '#1890ff' : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 27\n    }\n  }),\n  onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n  onFilterDropdownVisibleChange: visible => {\n    if (visible) {// setTimeout(() => this.searchInput.select());\n    }\n  },\n  render: text => text // this.state.searchedColumn === dataIndex ?\n  // (\n  // <Highlighter\n  //   highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n  //   searchWords={[this.state.searchText]}\n  //   autoEscape\n  //   textToHighlight={text.toString()}\n  // />\n  // ) : (\n  // text\n  // ),\n\n});","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/filter-box.js"],"names":["React","Highlighter","SearchOutlined","Table","Input","Button","Space","getColumnSearchProps","dataIndex","handleSearch","handleReset","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","e","target","value","width","marginBottom","display","console","log","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","render","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Table, Input, Button, Space } from 'antd';\n\nexport const getColumnSearchProps = (dataIndex, handleSearch, handleReset) => ({\n  filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n    <div style={{ padding: 8 }}>\n      <Input\n        // ref={node => {\n        //   this.searchInput = node;\n        // }}\n        placeholder={`Search ${dataIndex}`}\n        value={selectedKeys[0]}\n        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n        onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n        style={{ width: 188, marginBottom: 8, display: 'block' }}\n      />\n      <Space>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            console.log(selectedKeys)\n            handleSearch(selectedKeys, confirm, dataIndex)\n          }}\n          icon={<SearchOutlined />}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </Space>\n    </div>\n  ),\n  filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n  onFilter: (value, record) =>\n    record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n  onFilterDropdownVisibleChange: visible => {\n    if (visible) {\n      // setTimeout(() => this.searchInput.select());\n    }\n  },\n  render: text => text\n  // this.state.searchedColumn === dataIndex ?\n  // (\n  // <Highlighter\n  //   highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n  //   searchWords={[this.state.searchText]}\n  //   autoEscape\n  //   textToHighlight={text.toString()}\n  // />\n  // ) : (\n  // text\n  // ),\n});\n"]},"metadata":{},"sourceType":"module"}