{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport SimpleSwitch from '../simple-switch';\nimport { useStores } from '../../hooks/use-stores';\nimport { StartupApi } from '../../services';\nimport { toJS } from 'mobx';\nvar StyledA = styled.a.withConfig({\n  displayName: \"otp-unlocking__StyledA\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.spacing.medium;\n});\nvar StyledSpan = styled.span.withConfig({\n  displayName: \"otp-unlocking__StyledSpan\",\n  componentId: \"r234ff-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.spacing.medium;\n});\nvar StyledSwitch = styled(Switch).withConfig({\n  displayName: \"otp-unlocking__StyledSwitch\",\n  componentId: \"r234ff-2\"\n})([\"\", \"\"], function (_ref3) {\n  var defaultChecked = _ref3.defaultChecked;\n  return defaultChecked && \"\\n      background-color: #F88008 !important;\\n  \";\n});\nexport default function OtpUnlocking() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(''),\n      idCard = _useState[0],\n      setIdCard = _useState[1];\n\n  var _useState2 = useState(false),\n      isSearch = _useState2[0],\n      setIsSearch = _useState2[1];\n\n  var _useState3 = useState(false),\n      visible = _useState3[0],\n      setVisble = _useState3[1];\n\n  var _useState4 = useState(false),\n      isChecked = _useState4[0],\n      setIsChecked = _useState4[1];\n\n  var _useState5 = useState(''),\n      modalString = _useState5[0],\n      setModalString = _useState5[1];\n\n  var _useState6 = useState([]),\n      stringSwitch = _useState6[0],\n      setStringSwitch = _useState6[1];\n\n  var mockData = [{\n    accountNumber: '123123123123',\n    accountType: 'Binding to TCRB Mobile Banking',\n    accountStatus: true\n  }, {\n    accountNumber: '00993445123123',\n    accountType: 'Binding to Micro Pay',\n    accountStatus: false\n  }]; // const [stringSwitch, setStringSwitch] = useState([\n  //   [true, '123123123123', 'Binding to TCRB Mobile Banking'],\n  //   [false, '00993445123123', 'Binding to Micro Pay'],\n  // ])\n\n  var _useStores = useStores(),\n      customerServicesMenuStore = _useStores.customerServicesMenuStore;\n\n  useEffect(function () {\n    console.log(customerServicesMenuStore.getAccountInfo);\n    convertArrayObjectToArray(customerServicesMenuStore.getAccountInfo).then(function (result) {\n      customerServicesMenuStore.arrayAccountInfo = result;\n      setStringSwitch(result);\n    });\n  }, [customerServicesMenuStore.getAccountInfo]); // useEffect(() => {\n  //   // setStringSwitch(toJS(customerServicesMenuStore.arrayAccountInfo))\n  // }, [visible])\n\n  var searchIdCardNumber = function searchIdCardNumber(value) {\n    console.log('eiei search:' + value);\n    setIdCard(value);\n    setIsSearch(true); //call api\n    // customerServicesMenuStore.getAccountInfo = mockData\n\n    customerServicesMenuStore.getData(); // convertArrayObjectToArray(mockData).then(result => {\n    //   console.log(result)\n    //   customerServicesMenuStore.arrayAccountInfo = result\n    //   setStringSwitch(result)\n    // })\n    // console.log(stringSwitch)\n  };\n\n  var convertArrayObjectToArray = function convertArrayObjectToArray(arrayObject) {\n    return new Promise(function (resolve, reject) {\n      var result = arrayObject.map(function (a) {\n        return [a.otp_is_locked, a.main_account_no, a.product_name_english];\n      });\n      resolve(result);\n    });\n  };\n\n  var replaceNewDataForSetString = function replaceNewDataForSetString() {\n    var arrayAccountInfo = toJS(customerServicesMenuStore.getAccountInfo);\n    var accountSelected = toJS(customerServicesMenuStore.accountSelected); // let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber))\n\n    var newArray = arrayAccountInfo.filter(function (accountInfo) {\n      return accountInfo.accountNumber !== accountSelected.accountNumber;\n    });\n    console.log(newArray, arrayAccountInfo);\n    convertArrayObjectToArray([].concat(_toConsumableArray(newArray), [accountSelected])).then(function (result) {\n      console.log(result);\n      setStringSwitch(result);\n    });\n  };\n\n  var closeModal = function closeModal() {\n    setVisble(false);\n    setStringSwitch(toJS(customerServicesMenuStore.arrayAccountInfo));\n  };\n\n  var _onChange = function onChange(switchSelected, index) {\n    console.log(switchSelected, index);\n\n    if (switchSelected === true) {\n      customerServicesMenuStore.accountSelected = toJS(customerServicesMenuStore.getAccountInfo)[index];\n      setVisble(true);\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, \"Unlocking OTP!!\"), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, \"Account Number \", customerServicesMenuStore.accountSelected.accountNumber)));\n    } else {// setIsChecked(false)\n    }\n  };\n\n  var unlockOTP = function unlockOTP() {\n    setVisble(false); //some action\n\n    customerServicesMenuStore.accountSelected.accountStatus = false;\n    replaceNewDataForSetString();\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: \"ID Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(SimpleSwitch, {\n    data: stringSwitch,\n    onChange: function onChange(switchSelected, index) {\n      return _onChange(switchSelected, index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }) : '', __jsx(SimpleModal, {\n    onOk: function onOk() {\n      return unlockOTP();\n    },\n    onCancel: function onCancel() {\n      return closeModal();\n    },\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(OtpUnlocking, \"QtL28RUQuVbgDP/UDI5WRLQ3v0k=\", false, function () {\n  return [useStores];\n});\n\n_c = OtpUnlocking;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtpUnlocking\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","SimpleSwitch","useStores","StartupApi","toJS","StyledA","a","theme","spacing","medium","StyledSpan","span","StyledSwitch","defaultChecked","OtpUnlocking","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","stringSwitch","setStringSwitch","mockData","accountNumber","accountType","accountStatus","customerServicesMenuStore","console","log","getAccountInfo","convertArrayObjectToArray","then","result","arrayAccountInfo","searchIdCardNumber","value","getData","arrayObject","Promise","resolve","reject","map","otp_is_locked","main_account_no","product_name_english","replaceNewDataForSetString","accountSelected","newArray","filter","accountInfo","closeModal","onChange","switchSelected","index","textAlign","unlockOTP","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport SimpleSwitch from '../simple-switch'\nimport { useStores } from '../../hooks/use-stores'\nimport { StartupApi } from '../../services'\nimport { toJS } from 'mobx';\n\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n\n      ${({ defaultChecked }) => defaultChecked && `\n      background-color: #F88008 !important;\n  `}\n`\n\nexport default function OtpUnlocking\n  () {\n  const [idCard, setIdCard] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const [stringSwitch, setStringSwitch] = useState([])\n  const mockData = [\n    { accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true },\n    { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }\n  ]\n  // const [stringSwitch, setStringSwitch] = useState([\n  //   [true, '123123123123', 'Binding to TCRB Mobile Banking'],\n  //   [false, '00993445123123', 'Binding to Micro Pay'],\n  // ])\n\n  const { customerServicesMenuStore } = useStores()\n\n  useEffect(() => {\n    console.log(customerServicesMenuStore.getAccountInfo)\n    convertArrayObjectToArray(customerServicesMenuStore.getAccountInfo).then(result => {\n      customerServicesMenuStore.arrayAccountInfo = result\n      setStringSwitch(result)\n    })\n  }, [customerServicesMenuStore.getAccountInfo])\n\n  // useEffect(() => {\n  //   // setStringSwitch(toJS(customerServicesMenuStore.arrayAccountInfo))\n  // }, [visible])\n\n  const searchIdCardNumber = (value) => {\n    console.log('eiei search:' + value)\n    setIdCard(value)\n    setIsSearch(true)\n    //call api\n    // customerServicesMenuStore.getAccountInfo = mockData\n    customerServicesMenuStore.getData()\n    // convertArrayObjectToArray(mockData).then(result => {\n    //   console.log(result)\n    //   customerServicesMenuStore.arrayAccountInfo = result\n    //   setStringSwitch(result)\n    // })\n    // console.log(stringSwitch)\n  }\n  const convertArrayObjectToArray = (arrayObject) => {\n    return new Promise((resolve, reject) => {\n      let result = arrayObject.map(a => [a.otp_is_locked, a.main_account_no, a.product_name_english]);\n      resolve(result)\n    })\n  }\n  const replaceNewDataForSetString = () => {\n    let arrayAccountInfo = toJS(customerServicesMenuStore.getAccountInfo)\n    let accountSelected = toJS(customerServicesMenuStore.accountSelected)\n    // let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber))\n    let newArray = arrayAccountInfo.filter(accountInfo => accountInfo.accountNumber !== accountSelected.accountNumber)\n\n    console.log(newArray, arrayAccountInfo)\n    convertArrayObjectToArray([...newArray, accountSelected]).then(result => {\n      console.log(result)\n      setStringSwitch(result)\n    })\n  }\n\n  const closeModal = () => {\n    setVisble(false)\n    setStringSwitch(toJS(customerServicesMenuStore.arrayAccountInfo))\n  };\n  const onChange = (switchSelected, index) => {\n    console.log(switchSelected, index)\n    if (switchSelected === true) {\n      customerServicesMenuStore.accountSelected = toJS(customerServicesMenuStore.getAccountInfo)[index]\n      setVisble(true)\n      setModalString(\n        <div style={{ textAlign: \"center\" }}>\n          <p>Unlocking OTP!!</p>\n          <p>Account Number {customerServicesMenuStore.accountSelected.accountNumber}</p>\n        </div>\n      )\n    } else {\n      // setIsChecked(false)\n    }\n  }\n\n  const unlockOTP = () => {\n    setVisble(false)\n\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false\n    replaceNewDataForSetString()\n  }\n\n\n  return (\n    <div style={{ margin: 20 }}>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (\n        <SimpleSwitch\n          data={stringSwitch}\n          onChange={(switchSelected, index) => onChange(switchSelected, index)} />\n      ) : ('')}\n      <SimpleModal\n        onOk={() => unlockOTP()}\n        onCancel={() => closeModal()}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}