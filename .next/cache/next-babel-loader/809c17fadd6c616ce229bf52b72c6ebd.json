{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _temp;\n\nimport { observable, action, toJS } from 'mobx';\nimport { UserAccessManagementApi } from '../services';\nvar UserAccessManagement = (_class = (_temp = function UserAccessManagement() {\n  _classCallCheck(this, UserAccessManagement);\n\n  _initializerDefineProperty(this, \"apiFetching\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"responseApiError\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"responseGetDepartmentList\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"nextPageIsManageDepartment\", _descriptor4, this);\n\n  _initializerDefineProperty(this, \"nextPageIsManageGroup\", _descriptor5, this);\n\n  _initializerDefineProperty(this, \"nextPageIsManageUser\", _descriptor6, this);\n\n  _initializerDefineProperty(this, \"nextPageIsManageMenuAndFunction\", _descriptor7, this);\n\n  _initializerDefineProperty(this, \"nextPageIsManageRole\", _descriptor8, this);\n\n  _initializerDefineProperty(this, \"departmentSelected\", _descriptor9, this);\n\n  _initializerDefineProperty(this, \"groupSelected\", _descriptor10, this);\n\n  _initializerDefineProperty(this, \"getDataDepartment\", _descriptor11, this);\n\n  _initializerDefineProperty(this, \"getDataDepartmentDetail\", _descriptor12, this);\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"apiFetching\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"responseApiError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"responseGetDepartmentList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"nextPageIsManageDepartment\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"nextPageIsManageGroup\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"nextPageIsManageUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"nextPageIsManageMenuAndFunction\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"nextPageIsManageRole\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"departmentSelected\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"groupSelected\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"getDataDepartment\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tmp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //some action\n              _this.apiFetching = true;\n              _context.next = 3;\n              return UserAccessManagementApi.getDepartment(params);\n\n            case 3:\n              tmp = _context.sent;\n\n              if (tmp.ok & tmp.status === 200) {\n                //when success\n                _this.apiFetching = false;\n              } else {\n                //when error\n                _this.apiFetching = false;\n                _this.responseApiError = true;\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"getDataDepartmentDetail\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //some action\n              _this2.apiFetching = true; //when success\n\n              _this2.apiFetching = false; //when error\n\n              _this2.apiFetching = false;\n              _this2.responseApiError = true;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  }\n})), _class);\nexport { UserAccessManagement as default };","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/user-access-management-store.js"],"names":["observable","action","toJS","UserAccessManagementApi","UserAccessManagement","apiFetching","getDepartment","params","tmp","ok","status","responseApiError"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,SAASC,uBAAT,QAAwC,aAAxC;IAEqBC,oB;;;;;;;;;;;;;;;;;;;;;;;;;;sFAClBJ,U;;;;;WAAyB,K;;oFACzBA,U;;;;;WAA8B,K;;6FAC9BA,U;;;;;WAAuC,E;;8FAEvCA,U;;;;;WAAwC,I;;yFACxCA,U;;;;;WAAmC,I;;wFACnCA,U;;;;;WAAkC,I;;mGAClCA,U;;;;;WAA6C,I;;wFAC7CA,U;;;;;WAAkC,I;;sFAGlCA,U;;;;;WAAgC,I;;kFAChCA,U;;;;;WAA2B,I;;sFAE3BC,M;;;;;;;iFAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1B;AACA,cAAA,KAAI,CAACI,WAAL,GAAmB,IAAnB;AAF0B;AAAA,qBAGVF,uBAAuB,CAACG,aAAxB,CAAsCC,MAAtC,CAHU;;AAAA;AAGtBC,cAAAA,GAHsB;;AAK1B,kBAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,MAAJ,KAAe,GAA5B,EAAiC;AAC/B;AACA,gBAAA,KAAI,CAACL,WAAL,GAAmB,KAAnB;AACD,eAHD,MAGO;AACL;AACA,gBAAA,KAAI,CAACA,WAAL,GAAmB,KAAnB;AACA,gBAAA,KAAI,CAACM,gBAAL,GAAwB,IAAxB;AACD;;AAZyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;4FAmB3BV,M;;;;;;;iFAAiC;AAAA;AAAA;AAAA;AAAA;AAChC;AACA,cAAA,MAAI,CAACI,WAAL,GAAmB,IAAnB,CAFgC,CAIhC;;AACA,cAAA,MAAI,CAACA,WAAL,GAAmB,KAAnB,CALgC,CAOhC;;AACA,cAAA,MAAI,CAACA,WAAL,GAAmB,KAAnB;AACA,cAAA,MAAI,CAACM,gBAAL,GAAwB,IAAxB;;AATgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;SAlCfP,oB","sourcesContent":["import { observable, action, toJS } from 'mobx'\nimport { UserAccessManagementApi } from '../services'\n\nexport default class UserAccessManagement {\n  @observable apiFetching = false\n  @observable responseApiError = false\n  @observable responseGetDepartmentList = []\n\n  @observable nextPageIsManageDepartment = null\n  @observable nextPageIsManageGroup = null\n  @observable nextPageIsManageUser = null\n  @observable nextPageIsManageMenuAndFunction = null\n  @observable nextPageIsManageRole = null\n\n\n  @observable departmentSelected = null\n  @observable groupSelected = null\n\n  @action getDataDepartment = async () => {\n    //some action\n    this.apiFetching = true\n    let tmp = await UserAccessManagementApi.getDepartment(params)\n\n    if (tmp.ok & tmp.status === 200) {\n      //when success\n      this.apiFetching = false\n    } else {\n      //when error\n      this.apiFetching = false\n      this.responseApiError = true\n    }\n\n\n\n\n  }\n\n  @action getDataDepartmentDetail = async () => {\n    //some action\n    this.apiFetching = true\n\n    //when success\n    this.apiFetching = false\n\n    //when error\n    this.apiFetching = false\n    this.responseApiError = true\n  }\n}\n"]},"metadata":{},"sourceType":"module"}