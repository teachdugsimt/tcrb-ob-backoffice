{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport ExcuteApi from './api-integrations/excute-api';\n\nvar PendingApprovalApi = function PendingApprovalApi() {\n  _classCallCheck(this, PendingApprovalApi);\n\n  this.getPendingApproveList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ExcuteApi('api/backoffice/v1/changerequest', params, \"get\");\n\n            case 2:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.getPendingList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return ExcuteApi('api/backoffice/v1/changerequest', params, \"get\");\n\n            case 2:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.processPendingList = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return ExcuteApi(\"api/backoffice/v1/changerequest/\".concat(params.id, \"/confirm\"), params, \"post\");\n\n            case 2:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n\nexport default new PendingApprovalApi();","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/services/pending-approvals-api.js"],"names":["ExcuteApi","PendingApprovalApi","getPendingApproveList","params","response","getPendingList","processPendingList","id"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,+BAAtB;;IAEMC,kB;;;OACJC,qB;wEAAwB,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCH,SAAS,CAAC,iCAAD,EAAoCG,MAApC,EAA4C,KAA5C,CADV;;AAAA;AAChBC,cAAAA,QADgB;AAAA,+CAEfA,QAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKxBC,c;yEAAiB,kBAAOF,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQH,SAAS,CAAC,iCAAD,EAAoCG,MAApC,EAA4C,KAA5C,CADjB;;AAAA;AACTC,cAAAA,QADS;AAAA,gDAERA,QAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;OAKjBE,kB;yEAAqB,kBAAOH,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIH,SAAS,2CAAoCG,MAAM,CAACI,EAA3C,eAAyDJ,MAAzD,EAAiE,MAAjE,CADb;;AAAA;AACbC,cAAAA,QADa;AAAA,gDAEZA,QAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;AAMvB,eAAe,IAAIH,kBAAJ,EAAf","sourcesContent":["import ExcuteApi from './api-integrations/excute-api'\n\nclass PendingApprovalApi {\n  getPendingApproveList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest', params, \"get\")\n    return response\n  }\n\n  getPendingList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest', params, \"get\")\n    return response\n  }\n\n  processPendingList = async (params) => {\n    const response = await ExcuteApi(`api/backoffice/v1/changerequest/${params.id}/confirm`, params, \"post\")\n    return response\n  }\n\n}\nexport default new PendingApprovalApi()\n\n"]},"metadata":{},"sourceType":"module"}