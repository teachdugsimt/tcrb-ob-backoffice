{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/role-based-matrix/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'antd';\n\nvar RoleBasedMatrix = function RoleBasedMatrix() {\n  _s();\n\n  var _useState = useState([]),\n      mockDataSourceDynamic = _useState[0],\n      setMockDataSourceDynamic = _useState[1];\n\n  var _useState2 = useState(null),\n      column = _useState2[0],\n      setColumn = _useState2[1];\n\n  var roleList = 6;\n  var functionList = 4;\n  var roleMatrix = {\n    role_1: [],\n    role_2: [],\n    role_3: [],\n    role_4: [],\n    role_5: [],\n    role_6: []\n  };\n  var dataSource = [];\n  var testColumn = [];\n  useEffect(function () {\n    addRoleToColumn();\n    addFunctionToDataSource();\n  }, []);\n  /* const column = [\n    {\n      title: 'Function',\n      dataIndex: 'menu_name',\n      // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n    },\n    {\n      title: 'Functions',\n      dataIndex: 'functions',\n      // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n    }\n  ] */\n\n  var addRoleToColumn = function addRoleToColumn() {\n    for (var index = 0; index <= roleList; index++) {\n      if (index == 0) {\n        testColumn.push({\n          title: 'Functions',\n          dataIndex: 'function'\n        });\n      } else {\n        testColumn.push({\n          title: 'Role' + index,\n          dataIndex: 'role_' + index,\n          render: function render(text, record) {\n            return __jsx(\"p\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }\n            }, \"123\");\n          }\n        });\n      }\n    }\n\n    setColumn(testColumn);\n  };\n\n  var addFunctionToDataSource = function addFunctionToDataSource() {\n    for (var index = 0; index <= functionList; index++) {\n      dataSource.push(_objectSpread({\n        \"function\": 'function_' + index,\n        key: index\n      }, roleMatrix));\n    }\n\n    console.log(dataSource);\n    setMockDataSourceDynamic(dataSource);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, __jsx(Table, {\n    columns: column,\n    dataSource: mockDataSourceDynamic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(RoleBasedMatrix, \"xPAddZcCR2cjG3NF2WaxXLaEnPg=\");\n\n_c = RoleBasedMatrix;\nexport default RoleBasedMatrix;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleBasedMatrix\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/role-based-matrix/index.js"],"names":["React","useEffect","useState","Table","RoleBasedMatrix","mockDataSourceDynamic","setMockDataSourceDynamic","column","setColumn","roleList","functionList","roleMatrix","role_1","role_2","role_3","role_4","role_5","role_6","dataSource","testColumn","addRoleToColumn","addFunctionToDataSource","index","push","title","dataIndex","render","text","record","key","console","log"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,kBAC8BF,QAAQ,CAAC,EAAD,CADtC;AAAA,MACrBG,qBADqB;AAAA,MACEC,wBADF;;AAAA,mBAEAJ,QAAQ,CAAC,IAAD,CAFR;AAAA,MAErBK,MAFqB;AAAA,MAEbC,SAFa;;AAG5B,MAAMC,QAAQ,GAAG,CAAjB;AACA,MAAMC,YAAY,GAAG,CAArB;AACA,MAAMC,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAE,EADS;AAEjBC,IAAAA,MAAM,EAAE,EAFS;AAGjBC,IAAAA,MAAM,EAAE,EAHS;AAIjBC,IAAAA,MAAM,EAAE,EAJS;AAKjBC,IAAAA,MAAM,EAAE,EALS;AAMjBC,IAAAA,MAAM,EAAE;AANS,GAAnB;AAQA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,UAAU,GAAG,EAAjB;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACdmB,IAAAA,eAAe;AACfC,IAAAA,uBAAuB;AACxB,GAHQ,EAGN,EAHM,CAAT;AAIA;;;;;;;;;;;;;AAaA,MAAMD,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,SAAK,IAAIE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIb,QAA7B,EAAuCa,KAAK,EAA5C,EAAgD;AAC9C,UAAIA,KAAK,IAAI,CAAb,EAAgB;AACdH,QAAAA,UAAU,CAACI,IAAX,CACE;AACEC,UAAAA,KAAK,EAAE,WADT;AAEEC,UAAAA,SAAS,EAAE;AAFb,SADF;AAMD,OAPD,MAOO;AACLN,QAAAA,UAAU,CAACI,IAAX,CACE;AACEC,UAAAA,KAAK,EAAE,SAASF,KADlB;AAEEG,UAAAA,SAAS,EAAE,UAAUH,KAFvB;AAGEI,UAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,MAAP,EAAkB;AACxB,mBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAR;AACD;AALH,SADF;AASD;AACF;;AACDpB,IAAAA,SAAS,CAACW,UAAD,CAAT;AACD,GAtBD;;AAuBA,MAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpC,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIZ,YAA7B,EAA2CY,KAAK,EAAhD,EAAoD;AAClDJ,MAAAA,UAAU,CAACK,IAAX;AAEI,oBAAU,cAAcD,KAF5B;AAGIO,QAAAA,GAAG,EAAEP;AAHT,SAIOX,UAJP;AAOD;;AACDmB,IAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ;AACAZ,IAAAA,wBAAwB,CAACY,UAAD,CAAxB;AACD,GAZD;;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,OAAO,EAAEX,MADX;AAEE,IAAA,UAAU,EAAEF,qBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAQD,CA9ED;;GAAMD,e;;KAAAA,e;AAgFN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Table } from 'antd'\n\nconst RoleBasedMatrix = () => {\n  const [mockDataSourceDynamic, setMockDataSourceDynamic] = useState([])\n  const [column, setColumn] = useState(null)\n  const roleList = 6\n  const functionList = 4\n  const roleMatrix = {\n    role_1: [],\n    role_2: [],\n    role_3: [],\n    role_4: [],\n    role_5: [],\n    role_6: [],\n  }\n  let dataSource = []\n  let testColumn = []\n\n  useEffect(() => {\n    addRoleToColumn()\n    addFunctionToDataSource()\n  }, [])\n  /* const column = [\n    {\n      title: 'Function',\n      dataIndex: 'menu_name',\n      // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n    },\n    {\n      title: 'Functions',\n      dataIndex: 'functions',\n      // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n    }\n  ] */\n\n  const addRoleToColumn = () => {\n    for (let index = 0; index <= roleList; index++) {\n      if (index == 0) {\n        testColumn.push(\n          {\n            title: 'Functions',\n            dataIndex: 'function'\n          }\n        )\n      } else {\n        testColumn.push(\n          {\n            title: 'Role' + index,\n            dataIndex: 'role_' + index,\n            render: (text, record) => {\n              return (<p>123</p>)\n            }\n          }\n        )\n      }\n    }\n    setColumn(testColumn)\n  }\n  const addFunctionToDataSource = () => {\n    for (let index = 0; index <= functionList; index++) {\n      dataSource.push(\n        {\n          function: 'function_' + index,\n          key: index,\n          ...roleMatrix\n        }\n      )\n    }\n    console.log(dataSource)\n    setMockDataSourceDynamic(dataSource)\n  }\n\n  return (\n    <div>\n      <Table\n        columns={column}\n        dataSource={mockDataSourceDynamic}\n      />\n    </div>\n  )\n}\n\nexport default RoleBasedMatrix\n"]},"metadata":{},"sourceType":"module"}