{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/layouts/EmptyLayout.js\";\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport MainLayout from './MainLayout';\nimport { inject, observer } from 'mobx-react';\nimport Login from '../pages/login';\nimport { withTranslation } from '../i18n';\nimport Custom404 from '../pages/404';\nvar EmptyLayout = inject('authenStore')(observer(function (props) {\n  // const { authenStore } = useStores()\n  var authenStore = props.authenStore; // console.log(\"________________ EMPTY LAYOUT PROPS __________________\")\n  // console.log(props)\n  // if (authenStore.password && authenStore.id) {\n\n  return __jsx(MainLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, props.children); // }\n  // else if (props.router && props.router.route == \"/_error\") {\n  //   return <div>{props.children}</div>\n  // }\n  // else if (props.router.pathname.includes(\"/404\") || props.router.route.includes(\"/404\")) {\n  //   return <Custom404 />\n  // }\n  // else {\n  //   return <Login />\n  // }\n}));\nEmptyLayout.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: []\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default withRouter(withTranslation('common')(EmptyLayout)); // export default withRouter(withTranslation()(EmptyLayout))\n// import withError from './withError'\n// class Example extends React.Component {\n//     static async getInitialProps(ctx) {\n//         if (error) { // define your app error logic here\n//           ctx.res.statusCode = 404;\n//         }\n//         return { /* ... */ }\n//     }\n//     render() {\n//         /* ... */\n//     }\n// }\n// export default withError(Example);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/layouts/EmptyLayout.js"],"names":["React","useContext","Router","withRouter","MainLayout","inject","observer","Login","withTranslation","Custom404","EmptyLayout","props","authenStore","children","getInitialProps","namespacesRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,IAAMC,WAAW,GAAGL,MAAM,CAAC,aAAD,CAAN,CAAsBC,QAAQ,CAAC,UAACK,KAAD,EAAW;AAC5D;AAD4D,MAEpDC,WAFoD,GAEpCD,KAFoC,CAEpDC,WAFoD,EAG5D;AACA;AAEA;;AACA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,QADT,CADF,CAP4D,CAY5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAtBiD,CAA9B,CAApB;AAwBAH,WAAW,CAACI,eAAZ,yEAA8B;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAa;AACzCC,YAAAA,kBAAkB,EAAE;AADqB,WAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;AAIA,eAAeZ,UAAU,CACvBK,eAAe,CAAC,QAAD,CAAf,CACGE,WADH,CADuB,CAAzB,C,CAIA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useContext } from 'react'\nimport Router, { withRouter } from 'next/router'\nimport MainLayout from './MainLayout'\nimport { inject, observer } from 'mobx-react'\nimport Login from '../pages/login'\nimport { withTranslation } from '../i18n'\nimport Custom404 from '../pages/404'\n\nconst EmptyLayout = inject('authenStore')(observer((props) => {\n  // const { authenStore } = useStores()\n  const { authenStore } = props\n  // console.log(\"________________ EMPTY LAYOUT PROPS __________________\")\n  // console.log(props)\n\n  // if (authenStore.password && authenStore.id) {\n  return (\n    <MainLayout>\n      {props.children}\n    </MainLayout>\n  )\n  // }\n  // else if (props.router && props.router.route == \"/_error\") {\n  //   return <div>{props.children}</div>\n  // }\n  // else if (props.router.pathname.includes(\"/404\") || props.router.route.includes(\"/404\")) {\n  //   return <Custom404 />\n  // }\n  // else {\n  //   return <Login />\n  // }\n}\n))\nEmptyLayout.getInitialProps = async () => ({\n  namespacesRequired: [],\n})\n\nexport default withRouter(\n  withTranslation('common')\n    (EmptyLayout)\n)\n// export default withRouter(withTranslation()(EmptyLayout))\n\n\n\n// import withError from './withError'\n\n// class Example extends React.Component {\n//     static async getInitialProps(ctx) {\n//         if (error) { // define your app error logic here\n//           ctx.res.statusCode = 404;\n//         }\n\n//         return { /* ... */ }\n//     }\n\n//     render() {\n//         /* ... */\n//     }\n// }\n\n// export default withError(Example);\n"]},"metadata":{},"sourceType":"module"}