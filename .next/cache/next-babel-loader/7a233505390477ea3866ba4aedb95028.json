{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$(),\n    _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Input, Row, Col, Button } from 'antd';\nimport styled from 'styled-components';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../i18n';\nimport SimpleModal from '../simple-modal';\nvar StyledInput = styled(Input).withConfig({\n  displayName: \"otp-setup__StyledInput\",\n  componentId: \"y1xkpv-0\"\n})([\"background-color:unset !important;border:unset !important;border-bottom:1px solid black !important;box-shadow:none !important;.ant-input{text-align:center !important;background-color:unset !important;\", \"}\"], ''\n/* cursor:not-allowed !important; */\n);\n_c = StyledInput;\n\nvar useFocus = function useFocus() {\n  _s();\n\n  var htmlElRef = useRef(null);\n\n  var setFocus = function setFocus() {\n    htmlElRef.current && htmlElRef.current.focus();\n  };\n\n  return [htmlElRef, setFocus];\n};\n\n_s(useFocus, \"sPMElNktqlbGoO1DmdgDOOzWQjQ=\");\n\nvar OtpSetup = inject('businessParametersSetupStore')(observer(_s2(function (props) {\n  _s2();\n\n  var t = props.t,\n      businessParametersSetupStore = props.businessParametersSetupStore;\n\n  var _useState = useState(null),\n      expireOtp = _useState[0],\n      setExpire = _useState[1];\n\n  var _useState2 = useState(true),\n      visibleExpireEdit = _useState2[0],\n      setvisibleExpireEdit = _useState2[1];\n\n  var _useState3 = useState(false),\n      visibleExpireSubmit = _useState3[0],\n      setvisibleExpireSubmit = _useState3[1];\n\n  var _useState4 = useState(false),\n      disExpire = _useState4[0],\n      setdisExpire = _useState4[1];\n\n  var _useState5 = useState(false),\n      disExpireSubmit = _useState5[0],\n      setdisExpireSubmit = _useState5[1];\n\n  var _useState6 = useState(null),\n      maximumOtp = _useState6[0],\n      setMaximum = _useState6[1];\n\n  var _useState7 = useState(true),\n      visibleEditMaximum = _useState7[0],\n      setvisibleEditMaximum = _useState7[1];\n\n  var _useState8 = useState(false),\n      visibleSubmitMaximum = _useState8[0],\n      setvisibleSubmitMaximum = _useState8[1];\n\n  var _useState9 = useState(false),\n      disMaximum = _useState9[0],\n      setdisMaximum = _useState9[1];\n\n  var _useState10 = useState(false),\n      disMaximumSubmit = _useState10[0],\n      setdisMaximumSubmit = _useState10[1];\n\n  var _useState11 = useState(false),\n      visible = _useState11[0],\n      setVisible = _useState11[1];\n\n  var _useState12 = useState(\"\"),\n      modalString = _useState12[0],\n      setModal = _useState12[1]; // const [inputRef, setInputFocus] = useFocus()\n\n\n  useEffect(function () {\n    if (!businessParametersSetupStore.responseGetOtpValue || businessParametersSetupStore.fetchingGetOtp == null) {\n      var data = {\n        otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\"\n      };\n      businessParametersSetupStore.getOTPdata(data);\n    }\n  }, []);\n  useEffect(function () {\n    var newProps = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue));\n    console.log(\"Will Receive props : \", newProps);\n\n    if (newProps && newProps != undefined) {\n      if (!expireOtp || !maximumOtp) {\n        var tmpExpire = newProps.find(function (e) {\n          return e.Name == \"OTP_EXPIRE_TIME\";\n        });\n        var tmpMaximum = newProps.find(function (e) {\n          return e.Name == \"OTP_MAXIMUM_ENTERED\";\n        });\n        setExpire(tmpExpire.Value);\n        setMaximum(tmpMaximum.Value);\n      }\n    }\n  }, [businessParametersSetupStore.responseGetOtpValue]);\n\n  var _onClickExpiration = function _onClickExpiration() {\n    var expire = document.getElementById(\"otp-expiration-period\");\n    expire.style.color = \"orange\";\n    expire.focus();\n    setvisibleExpireEdit(false);\n    setvisibleExpireSubmit(true);\n  };\n\n  var _onClickMaximumRetry = function _onClickMaximumRetry() {\n    var maximum = document.getElementById(\"otp-maximum-retrying\");\n    maximum.style.color = \"orange\";\n    maximum.focus();\n    setvisibleEditMaximum(false);\n    setvisibleSubmitMaximum(true);\n  };\n\n  var _openPopup = function _openPopup(text) {\n    setVisible(true);\n    setModal(\"Confirm update otp \" + text);\n  };\n\n  var _setUnfocus = function _setUnfocus(type) {\n    if (type == \"expire\") {\n      var expire = document.getElementById(\"otp-expiration-period\");\n      expire.style.color = \"rgba(0, 0, 0, 0.65)\";\n      expire.blur();\n    } else {\n      var maximum = document.getElementById(\"otp-maximum-retrying\");\n      maximum.style.color = \"rgba(0, 0, 0, 0.65)\";\n      maximum.focus();\n    }\n  };\n\n  var _onConfirm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (modalString.includes(\"expire\")) {\n                if (getValueFromStore(\"expire\") != expireOtp) {\n                  // await businessParametersSetupStore.updateOTPdata({\n                  //   OTP_EXPIRE_TIME: expireOtp\n                  // })\n                  businessParametersSetupStore.selectProductToDelete({\n                    product_type: \"OTP\",\n                    product_description: \"update expire OTP\",\n                    request_id: \"01\",\n                    request_date: new Date().getTime,\n                    action: \"update\"\n                  });\n                  businessParametersSetupStore.closeExpire(true);\n                  setdisExpireSubmit(true);\n\n                  _setUnfocus(\"expire\");\n\n                  setdisExpire(false);\n                  setVisible(false);\n                } else {// alert(\"don't have any change\")\n                }\n              } else {\n                if (getValueFromStore(\"maximum\") != maximumOtp) {\n                  // await businessParametersSetupStore.updateOTPdata({\n                  //   OTP_MAXIMUN_ENTERED: maximumOtp\n                  // })\n                  businessParametersSetupStore.selectProductToDelete({\n                    product_type: \"OTP\",\n                    product_description: \"update OTP entry maximum\",\n                    request_id: \"02\",\n                    request_date: new Date().getTime,\n                    action: \"update\"\n                  });\n                  businessParametersSetupStore.closeMaximum(true);\n                  setdisMaximumSubmit(true);\n\n                  _setUnfocus(\"maximum\");\n\n                  setdisMaximum(false);\n                  setVisible(false);\n                } else {// alert(\"don't have any change\")\n                }\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function _onConfirm() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getValueFromStore = function getValueFromStore(type) {\n    var old_data = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue));\n\n    if (type == \"expire\") {\n      var tmpExpire = old_data.find(function (e) {\n        return e.Name == \"OTP_EXPIRE_TIME\";\n      });\n      return tmpExpire.Value;\n    } else {\n      var tmpMaximum = old_data.find(function (e) {\n        return e.Name == \"OTP_MAXIMUM_ENTERED\";\n      });\n      return tmpMaximum.Value;\n    }\n  };\n\n  var _onCancel = function _onCancel() {\n    setVisible(false);\n\n    if (modalString.includes(\"expire\")) {\n      setModal(\"\");\n      setvisibleExpireEdit(true);\n      setvisibleExpireSubmit(false);\n      setExpire(getValueFromStore(\"expire\"));\n    } else {\n      setModal(\"\");\n      setvisibleEditMaximum(true);\n      setvisibleSubmitMaximum(false);\n      setMaximum(getValueFromStore(\"maximum\"));\n    }\n\n    var expire = document.getElementById(\"otp-expiration-period\");\n    var maximum = document.getElementById(\"otp-maximum-retrying\");\n    expire.style.color = \"rgba(0, 0, 0, 0.65)\";\n    expire.blur();\n    maximum.style.color = \"rgba(0, 0, 0, 0.65)\";\n    maximum.blur();\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [8, 8],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    disabled: businessParametersSetupStore.editOtpMaximumRetry != null ? businessParametersSetupStore.editOtpMaximumRetry : disMaximum,\n    id: \"otp-maximum-retrying\",\n    value: maximumOtp,\n    onChange: function onChange(e) {\n      return setMaximum(e.target.value);\n    },\n    prefix: t(\"otpMaximumRetrying\"),\n    suffix: t(\"otpTime\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, visibleEditMaximum && __jsx(Button, {\n    onClick: function onClick() {\n      return _onClickMaximumRetry();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 38\n    }\n  }, t(\"edit\")), visibleSubmitMaximum && __jsx(Button, {\n    disabled: disMaximumSubmit,\n    onClick: function onClick() {\n      return _openPopup(\"maximum\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 40\n    }\n  }, t(\"submit\")))), __jsx(Row, {\n    gutter: [8, 8],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    disabled: businessParametersSetupStore.editOtpExpirationPeriod != null ? businessParametersSetupStore.editOtpExpirationPeriod : disExpire\n    /*ref={inputRef}*/\n    ,\n    id: \"otp-expiration-period\",\n    value: expireOtp,\n    onChange: function onChange(e) {\n      return setExpire(e.target.value);\n    },\n    prefix: t(\"otpExpirationPeriod\"),\n    suffix: t(\"otpSecond\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, visibleExpireEdit && __jsx(Button\n  /*onClick={setInputFocus}*/\n  , {\n    onClick: function onClick() {\n      return _onClickExpiration();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, t(\"edit\")), visibleExpireSubmit && __jsx(Button, {\n    disabled: disExpireSubmit\n    /*onClick={setInputFocus}*/\n    ,\n    onClick: function onClick() {\n      return _openPopup(\"expire\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 39\n    }\n  }, t(\"submit\")))), __jsx(SimpleModal, {\n    onOk: function onOk() {\n      return _onConfirm();\n    },\n    onCancel: function onCancel() {\n      return _onCancel();\n    },\n    okText: t(\"confirm\"),\n    cancelText: t(\"cancel\"),\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }));\n}, \"f2frwk+u+DyTt3/FfYn0+nw6cM0=\")));\nexport default withTranslation('common')(OtpSetup);\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledInput\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js"],"names":["React","useEffect","useRef","useState","Input","Row","Col","Button","styled","inject","observer","withTranslation","SimpleModal","StyledInput","useFocus","htmlElRef","setFocus","current","focus","OtpSetup","props","t","businessParametersSetupStore","expireOtp","setExpire","visibleExpireEdit","setvisibleExpireEdit","visibleExpireSubmit","setvisibleExpireSubmit","disExpire","setdisExpire","disExpireSubmit","setdisExpireSubmit","maximumOtp","setMaximum","visibleEditMaximum","setvisibleEditMaximum","visibleSubmitMaximum","setvisibleSubmitMaximum","disMaximum","setdisMaximum","disMaximumSubmit","setdisMaximumSubmit","visible","setVisible","modalString","setModal","responseGetOtpValue","fetchingGetOtp","data","otpParamsField","getOTPdata","newProps","JSON","parse","stringify","console","log","undefined","tmpExpire","find","e","Name","tmpMaximum","Value","_onClickExpiration","expire","document","getElementById","style","color","_onClickMaximumRetry","maximum","_openPopup","text","_setUnfocus","type","blur","_onConfirm","includes","getValueFromStore","selectProductToDelete","product_type","product_description","request_id","request_date","Date","getTime","action","closeExpire","closeMaximum","old_data","_onCancel","editOtpMaximumRetry","target","value","editOtpExpirationPeriod"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { Input, Row, Col, Button } from 'antd'\nimport styled from 'styled-components'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../i18n'\nimport SimpleModal from '../simple-modal'\n\nconst StyledInput = styled(Input)`\n  background-color: unset !important;\n  border: unset !important;\n  border-bottom: 1px solid black !important;\n  box-shadow: none !important;\n  .ant-input{\n    text-align: center !important;\n    background-color: unset !important;\n    ${'' /* cursor:not-allowed !important; */}\n  }\n`\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null)\n  const setFocus = () => { htmlElRef.current && htmlElRef.current.focus() }\n  return [htmlElRef, setFocus]\n}\n\nconst OtpSetup =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const { t, businessParametersSetupStore } = props\n      const [expireOtp, setExpire] = useState(null)\n      const [visibleExpireEdit, setvisibleExpireEdit] = useState(true)\n      const [visibleExpireSubmit, setvisibleExpireSubmit] = useState(false)\n      const [disExpire, setdisExpire] = useState(false)\n      const [disExpireSubmit, setdisExpireSubmit] = useState(false)\n\n      const [maximumOtp, setMaximum] = useState(null)\n      const [visibleEditMaximum, setvisibleEditMaximum] = useState(true)\n      const [visibleSubmitMaximum, setvisibleSubmitMaximum] = useState(false)\n      const [disMaximum, setdisMaximum] = useState(false)\n      const [disMaximumSubmit, setdisMaximumSubmit] = useState(false)\n\n      const [visible, setVisible] = useState(false)\n      const [modalString, setModal] = useState(\"\")\n      // const [inputRef, setInputFocus] = useFocus()\n\n      useEffect(() => {\n        if (!businessParametersSetupStore.responseGetOtpValue || businessParametersSetupStore.fetchingGetOtp == null) {\n          let data = { otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\" }\n          businessParametersSetupStore.getOTPdata(data)\n        }\n      }, [])\n\n      useEffect(() => {\n        let newProps = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue))\n        console.log(\"Will Receive props : \", newProps)\n        if (newProps && newProps != undefined) {\n          if (!expireOtp || !maximumOtp) {\n            let tmpExpire = newProps.find(e => e.Name == \"OTP_EXPIRE_TIME\")\n            let tmpMaximum = newProps.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\")\n            setExpire(tmpExpire.Value)\n            setMaximum(tmpMaximum.Value)\n          }\n        }\n      }, [businessParametersSetupStore.responseGetOtpValue])\n\n      const _onClickExpiration = () => {\n        let expire = document.getElementById(\"otp-expiration-period\")\n        expire.style.color = \"orange\"\n        expire.focus()\n        setvisibleExpireEdit(false)\n        setvisibleExpireSubmit(true)\n      }\n\n      const _onClickMaximumRetry = () => {\n        let maximum = document.getElementById(\"otp-maximum-retrying\")\n        maximum.style.color = \"orange\"\n        maximum.focus()\n        setvisibleEditMaximum(false)\n        setvisibleSubmitMaximum(true)\n      }\n\n      const _openPopup = (text) => {\n        setVisible(true)\n        setModal(\"Confirm update otp \" + text)\n      }\n\n      const _setUnfocus = (type) => {\n        if (type == \"expire\") {\n          let expire = document.getElementById(\"otp-expiration-period\")\n          expire.style.color = \"rgba(0, 0, 0, 0.65)\"\n          expire.blur()\n        } else {\n          let maximum = document.getElementById(\"otp-maximum-retrying\")\n          maximum.style.color = \"rgba(0, 0, 0, 0.65)\"\n          maximum.focus()\n        }\n      }\n\n      const _onConfirm = async () => {\n        if (modalString.includes(\"expire\")) {\n          if (getValueFromStore(\"expire\") != expireOtp) {\n            // await businessParametersSetupStore.updateOTPdata({\n            //   OTP_EXPIRE_TIME: expireOtp\n            // })\n            businessParametersSetupStore.selectProductToDelete({\n              product_type: \"OTP\",\n              product_description: \"update expire OTP\",\n              request_id: \"01\",\n              request_date: new Date().getTime,\n              action: \"update\",\n            })\n            businessParametersSetupStore.closeExpire(true)\n            setdisExpireSubmit(true)\n            _setUnfocus(\"expire\")\n            setdisExpire(false)\n            setVisible(false)\n          } else {\n            // alert(\"don't have any change\")\n          }\n        } else {\n          if (getValueFromStore(\"maximum\") != maximumOtp) {\n            // await businessParametersSetupStore.updateOTPdata({\n            //   OTP_MAXIMUN_ENTERED: maximumOtp\n            // })\n            businessParametersSetupStore.selectProductToDelete({\n              product_type: \"OTP\",\n              product_description: \"update OTP entry maximum\",\n              request_id: \"02\",\n              request_date: new Date().getTime,\n              action: \"update\",\n            })\n            businessParametersSetupStore.closeMaximum(true)\n            setdisMaximumSubmit(true)\n            _setUnfocus(\"maximum\")\n            setdisMaximum(false)\n            setVisible(false)\n          } else {\n            // alert(\"don't have any change\")\n          }\n        }\n      }\n\n      const getValueFromStore = (type) => {\n        let old_data = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue))\n        if (type == \"expire\") {\n          let tmpExpire = old_data.find(e => e.Name == \"OTP_EXPIRE_TIME\")\n          return tmpExpire.Value\n        } else {\n          let tmpMaximum = old_data.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\")\n          return tmpMaximum.Value\n        }\n      }\n\n      const _onCancel = () => {\n        setVisible(false)\n        if (modalString.includes(\"expire\")) {\n          setModal(\"\")\n          setvisibleExpireEdit(true)\n          setvisibleExpireSubmit(false)\n          setExpire(getValueFromStore(\"expire\"))\n        } else {\n          setModal(\"\")\n          setvisibleEditMaximum(true)\n          setvisibleSubmitMaximum(false)\n          setMaximum(getValueFromStore(\"maximum\"))\n        }\n        let expire = document.getElementById(\"otp-expiration-period\")\n        let maximum = document.getElementById(\"otp-maximum-retrying\")\n        expire.style.color = \"rgba(0, 0, 0, 0.65)\"\n        expire.blur()\n        maximum.style.color = \"rgba(0, 0, 0, 0.65)\"\n        maximum.blur()\n      }\n\n      return (\n        <div>\n          <Row gutter={[8, 8]}>\n            <Col span={8}>\n              <StyledInput disabled={businessParametersSetupStore.editOtpMaximumRetry != null ? businessParametersSetupStore.editOtpMaximumRetry : disMaximum} id={\"otp-maximum-retrying\"} value={maximumOtp} onChange={(e) => setMaximum(e.target.value)} prefix={t(\"otpMaximumRetrying\")} suffix={t(\"otpTime\")} />\n            </Col>\n            <Col span={6}>\n              {visibleEditMaximum && <Button onClick={() => _onClickMaximumRetry()}>{t(\"edit\")}</Button>}\n              {visibleSubmitMaximum && <Button disabled={disMaximumSubmit} onClick={() => _openPopup(\"maximum\")}>{t(\"submit\")}</Button>}\n            </Col>\n          </Row>\n          <Row gutter={[8, 8]}>\n            <Col span={8}>\n              <StyledInput disabled={businessParametersSetupStore.editOtpExpirationPeriod != null ? businessParametersSetupStore.editOtpExpirationPeriod : disExpire} /*ref={inputRef}*/ id={\"otp-expiration-period\"} value={expireOtp} onChange={(e) => setExpire(e.target.value)} prefix={t(\"otpExpirationPeriod\")} suffix={t(\"otpSecond\")} />\n            </Col>\n            <Col span={6}>\n              {visibleExpireEdit && <Button /*onClick={setInputFocus}*/ onClick={() => _onClickExpiration()} >{t(\"edit\")}</Button>}\n              {visibleExpireSubmit && <Button disabled={disExpireSubmit}/*onClick={setInputFocus}*/ onClick={() => _openPopup(\"expire\")} >{t(\"submit\")}</Button>}\n            </Col>\n          </Row>\n          <SimpleModal\n            onOk={() => _onConfirm()}\n            onCancel={() => _onCancel()}\n            okText={t(\"confirm\")}\n            cancelText={t(\"cancel\")}\n            modalString={modalString}\n            visible={visible}\n          />\n        </div>\n      )\n    }))\n\nexport default withTranslation('common')(OtpSetup)\n"]},"metadata":{},"sourceType":"module"}