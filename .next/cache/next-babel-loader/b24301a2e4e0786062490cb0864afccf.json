{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport { observer, inject } from 'mobx-react';\nvar Header = Layout.Header,\n    Footer = Layout.Footer,\n    Sider = Layout.Sider,\n    Content = Layout.Content;\nvar StyledP = styled.p.withConfig({\n  displayName: \"otp-unlocking__StyledP\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.spacing.medium;\n});\n_c = StyledP;\nvar OtpUnlocking = observer(_c2 = _s(function () {\n  _s();\n\n  var _useState = useState(''),\n      idCard = _useState[0],\n      setIdCard = _useState[1];\n\n  var _useState2 = useState(false),\n      isSearch = _useState2[0],\n      setIsSearch = _useState2[1];\n\n  var _useState3 = useState(false),\n      visible = _useState3[0],\n      setVisble = _useState3[1];\n\n  var _useState4 = useState(false),\n      isChecked = _useState4[0],\n      setIsChecked = _useState4[1];\n\n  var _useState5 = useState(''),\n      modalString = _useState5[0],\n      setModalString = _useState5[1];\n\n  var context = useContext(TestStore3);\n\n  var searchIdCardNumber = function searchIdCardNumber(value) {\n    console.log('eiei search:' + value);\n    setIdCard(value);\n    setIsSearch(true);\n  };\n\n  var hideModal = function hideModal() {\n    _this.setState({\n      visible: false\n    });\n  };\n\n  var _onChange = function onChange(value) {\n    console.log(\"change:\" + value);\n\n    if (value === true) {\n      setVisble(true);\n      setIsChecked(true);\n      setModalString(__jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, \"Unlocking OTP!!\"), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Customer ID Card Number \", idCard), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, \"Mobile Number \")));\n    } else {\n      setIsChecked(false);\n    }\n  };\n\n  var unlockOTP = function unlockOTP() {\n    //somaction\n    setVisble(false);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: context.setCitizenId,\n    prefixWording: \"ID Card Number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(Col, {\n    span: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }\n  }, __jsx(Switch, {\n    defaultChecked: false,\n    onChange: function onChange(checked) {\n      return _onChange(checked);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), isChecked ? __jsx(StyledP, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }, \"OTP is Locked\") : __jsx(StyledP, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 60\n    }\n  }, \"OTP is ready for using\")) : '', __jsx(SimpleModal, {\n    onOk: function onOk() {\n      return unlockOTP();\n    },\n    onCancel: function onCancel() {\n      return setVisble(false);\n    },\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}, \"x45dMG1NTiVTrocS50YzJA8Do64=\"));\n_c3 = OtpUnlocking;\nexport default OtpUnlocking;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledP\");\n$RefreshReg$(_c2, \"OtpUnlocking$observer\");\n$RefreshReg$(_c3, \"OtpUnlocking\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","observer","inject","Header","Footer","Sider","Content","StyledP","p","theme","spacing","medium","OtpUnlocking","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","context","useContext","TestStore3","searchIdCardNumber","value","console","log","hideModal","setState","onChange","unlockOTP","marginTop","setCitizenId","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport { observer, inject } from 'mobx-react';\nconst { Header, Footer, Sider, Content } = Layout;\n\n\nconst StyledP = styled.p`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\n\nconst OtpUnlocking =\n(observer(() => {\n  const [idCard, setIdCard] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const context = useContext(TestStore3)\n\n  const searchIdCardNumber = (value) => {\n    console.log('eiei search:' + value)\n    setIdCard(value)\n    setIsSearch(true)\n  }\n\n\n  const hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  const onChange = (value) => {\n    console.log(\"change:\" + value)\n\n    if (value === true) {\n      setVisble(true)\n      setIsChecked(true)\n      setModalString(\n        <div>\n          <p>Unlocking OTP!!</p>\n          <p>Customer ID Card Number {idCard}</p>\n          <p>Mobile Number </p>\n          </div>\n      )\n    } else {\n      setIsChecked(false)\n    }\n  }\n  const unlockOTP = () => {\n    //somaction\n    setVisble(false)\n  }\n  return (\n    <div style={{ marginTop: 20 }}>\n      <Row>\n        <SimpleSearch search={context.setCitizenId} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (<Col span={12}>\n        <Switch defaultChecked={false} onChange={checked => onChange(checked)} />\n        {isChecked ? (<StyledP>OTP is Locked</StyledP>) : (<StyledP>OTP is ready for using</StyledP>)}\n      </Col>) : ('')}\n      <SimpleModal\n        onOk={()=> unlockOTP()}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}))\nexport default OtpUnlocking\n"]},"metadata":{},"sourceType":"module"}