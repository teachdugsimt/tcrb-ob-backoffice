{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/table-column.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport moment from 'moment';\nimport getColumnSearchProps from './filter-box';\nimport { addCommaInData } from '../data-utility'; // import { withTranslation } from '../../i18n';\n\nexport const clmTranInfo = (handleSearch, handleReset, t) => {\n  return [{\n    title: t(\"number\"),\n    dataIndex: 'no',\n    key: 'no'\n  }, _objectSpread(_objectSpread({\n    title: t(\"tranDate\"),\n    dataIndex: 'date',\n    key: 'date'\n  }, getColumnSearchProps('date', handleSearch, handleReset, 'Tran Time')), {}, {\n    render: (text, record) => moment(text).format('ll')\n  }), _objectSpread({\n    title: t(\"entity\"),\n    key: 'parent_partner_code',\n    dataIndex: 'parent_partner_code'\n  }, getColumnSearchProps('parent_partner_code', handleSearch, handleReset, 'Entity')), _objectSpread({\n    title: t(\"channel\"),\n    key: 'channel',\n    dataIndex: 'channel'\n  }, getColumnSearchProps('channel', handleSearch, handleReset, 'Channel')), _objectSpread({\n    title: t(\"tranType\"),\n    key: 'transaction_type',\n    dataIndex: 'transaction_type'\n  }, getColumnSearchProps('transaction_type', handleSearch, handleReset, 'Tran Type')), {\n    // ** Wait Tum Confirm\n    title: t(\"tranSubType\"),\n    key: 'transaction_sub_type',\n    dataIndex: 'transaction_sub_type'\n  }, _objectSpread({\n    title: t(\"prodType\"),\n    key: 'product_type',\n    dataIndex: 'product_type'\n  }, getColumnSearchProps('product_type', handleSearch, handleReset, 'Prod Type')), _objectSpread({\n    title: t(\"accountNo\"),\n    key: 'account_no',\n    dataIndex: 'account_no'\n  }, getColumnSearchProps('account_no', handleSearch, handleReset, 'A/C No.')), {\n    title: t(\"amount\"),\n    key: 'amount',\n    dataIndex: 'amount',\n    render: (text, record) => __jsx(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, addCommaInData(text, true))\n  }, _objectSpread({\n    title: t(\"status\"),\n    key: 'status',\n    dataIndex: 'status'\n  }, getColumnSearchProps('status', handleSearch, handleReset, 'Status'))];\n};\nexport const clmPartnerInfo = (handleSearch, handleReset, t) => {\n  return [{\n    title: t(\"number\"),\n    dataIndex: 'no',\n    key: 'no',\n    render: text => __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    }, text)\n  }, _objectSpread({\n    title: t(\"partnerTranRef\"),\n    dataIndex: 'partner_transaction_reference',\n    key: 'partner_transaction_reference'\n  }, getColumnSearchProps('partner_transaction_reference', handleSearch, handleReset, 'Partner TranRef')), _objectSpread({\n    title: t(\"partnerReqID\"),\n    dataIndex: 'request_id',\n    key: 'request_id'\n  }, getColumnSearchProps('request_id', handleSearch, handleReset, 'Partner ReqID')), _objectSpread({\n    title: t(\"bankTranRef\"),\n    key: 'transaction_reference',\n    dataIndex: 'transaction_reference'\n  }, getColumnSearchProps('transaction_reference', handleSearch, handleReset, 'Bank TranRef')), _objectSpread({\n    title: t(\"mobileNumber\"),\n    key: 'mobile_no',\n    dataIndex: 'mobile_no'\n  }, getColumnSearchProps('mobile_no', handleSearch, handleReset, 'Mobile Number'))];\n};\nexport const clmAccInfo = (handleSearch, handleReset, t) => {\n  return [{\n    title: t(\"number\"),\n    dataIndex: 'no',\n    key: 'no',\n    render: text => __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }\n    }, text)\n  }, _objectSpread({\n    title: t(\"tcrbAccountRef\"),\n    dataIndex: 'tcrb_account_reference',\n    key: 'tcrb_account_reference'\n  }, getColumnSearchProps('tcrb_account_reference', handleSearch, handleReset, 'TCRB AccountRef')), _objectSpread({\n    title: t(\"subAC\"),\n    dataIndex: 'sub_account',\n    key: 'sub_account'\n  }, getColumnSearchProps('sub_account', handleSearch, handleReset, 'Sub A/C')), _objectSpread({\n    title: t(\"accountName\"),\n    key: 'account_name',\n    dataIndex: 'account_name'\n  }, getColumnSearchProps('account_name', handleSearch, handleReset, 'Account Name')), {\n    title: t(\"accRef1\"),\n    key: 'reference_1',\n    dataIndex: 'reference_1'\n  }, {\n    title: t(\"accRef2\"),\n    key: 'reference_2',\n    dataIndex: 'reference_2'\n  }, {\n    title: t(\"accRef3\"),\n    key: 'reference_3',\n    dataIndex: 'reference_3'\n  }];\n};\nexport const clmTxn = (handleSearch, handleReset, t) => {\n  return [{\n    title: t(\"number\"),\n    dataIndex: 'no',\n    key: 'no',\n    render: text => __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, text)\n  }, _objectSpread({\n    title: t(\"txnDREntry\"),\n    dataIndex: 'transaction_debit_entry',\n    key: 'transaction_debit_entry'\n  }, getColumnSearchProps('transaction_debit_entry', handleSearch, handleReset, 'Txn-DR_Entry')), _objectSpread({\n    title: t(\"txnCREntry\"),\n    dataIndex: 'transaction_credit_entry',\n    key: 'transaction_credit_entry'\n  }, getColumnSearchProps('transaction_credit_entry', handleSearch, handleReset, 'Txn-CR_Entry')), {\n    title: t(\"feeDREntry\"),\n    key: 'fee_debit_entries',\n    dataIndex: 'fee_debit_entries'\n  }, {\n    title: t(\"feeDRAMT\"),\n    key: 'fee_amount',\n    dataIndex: 'fee_amount'\n  }, {\n    title: t(\"feeCREntry\"),\n    key: 'bank_income_fee_entries',\n    dataIndex: 'bank_income_fee_entries'\n  }, {\n    title: t(\"feeCRAMT\"),\n    key: 'bank_income_fee',\n    dataIndex: 'bank_income_fee'\n  }, {\n    title: t(\"amt\"),\n    key: 'amount',\n    dataIndex: 'amount',\n    render: (text, record) => __jsx(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }, addCommaInData(text, true))\n  }];\n};","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/table-column.js"],"names":["moment","getColumnSearchProps","addCommaInData","clmTranInfo","handleSearch","handleReset","t","title","dataIndex","key","render","text","record","format","textAlign","clmPartnerInfo","clmAccInfo","clmTxn"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport getColumnSearchProps from './filter-box'\nimport { addCommaInData } from '../data-utility';\n// import { withTranslation } from '../../i18n';\n\nexport const clmTranInfo = (handleSearch, handleReset, t) => {\n  return [\n    {\n      title: t(\"number\"),\n      dataIndex: 'no',\n      key: 'no',\n    },\n    {\n      title: t(\"tranDate\"),\n      dataIndex: 'date',\n      key: 'date',\n      ...getColumnSearchProps('date', handleSearch, handleReset, 'Tran Time'),\n      render: (text, record) => moment(text).format('ll')\n    },\n    {\n      title: t(\"entity\"),\n      key: 'parent_partner_code',\n      dataIndex: 'parent_partner_code',\n      ...getColumnSearchProps('parent_partner_code', handleSearch, handleReset, 'Entity')\n    },\n    {\n      title: t(\"channel\"),\n      key: 'channel',\n      dataIndex: 'channel',\n      ...getColumnSearchProps('channel', handleSearch, handleReset, 'Channel')\n    },\n    {\n      title: t(\"tranType\"),\n      key: 'transaction_type',\n      dataIndex: 'transaction_type',\n      ...getColumnSearchProps('transaction_type', handleSearch, handleReset, 'Tran Type')\n\n    },\n    {  // ** Wait Tum Confirm\n      title: t(\"tranSubType\"),\n      key: 'transaction_sub_type',\n      dataIndex: 'transaction_sub_type',\n    },\n    {\n      title: t(\"prodType\"),\n      key: 'product_type',\n      dataIndex: 'product_type',\n      ...getColumnSearchProps('product_type', handleSearch, handleReset, 'Prod Type')\n    },\n    {\n      title: t(\"accountNo\"),\n      key: 'account_no',\n      dataIndex: 'account_no',\n      ...getColumnSearchProps('account_no', handleSearch, handleReset, 'A/C No.')\n    },\n    {\n      title: t(\"amount\"),\n      key: 'amount',\n      dataIndex: 'amount',\n      render: (text, record) => <div style={{ textAlign: 'right' }}>{addCommaInData(text, true)}</div>\n    },\n    {\n      title: t(\"status\"),\n      key: 'status',\n      dataIndex: 'status',\n      ...getColumnSearchProps('status', handleSearch, handleReset, 'Status')\n    },\n  ];\n}\n\nexport const clmPartnerInfo = (handleSearch, handleReset, t) => {\n  return [\n    {\n      title: t(\"number\"),\n      dataIndex: 'no',\n      key: 'no',\n      render: text => <div>{text}</div>,\n    },\n    {\n      title: t(\"partnerTranRef\"),\n      dataIndex: 'partner_transaction_reference',\n      key: 'partner_transaction_reference',\n      ...getColumnSearchProps('partner_transaction_reference', handleSearch, handleReset, 'Partner TranRef')\n    },\n    {\n      title: t(\"partnerReqID\"),\n      dataIndex: 'request_id',\n      key: 'request_id',\n      ...getColumnSearchProps('request_id', handleSearch, handleReset, 'Partner ReqID')\n    },\n    {\n      title: t(\"bankTranRef\"),\n      key: 'transaction_reference',\n      dataIndex: 'transaction_reference',\n      ...getColumnSearchProps('transaction_reference', handleSearch, handleReset, 'Bank TranRef')\n    },\n    {\n      title: t(\"mobileNumber\"),\n      key: 'mobile_no',\n      dataIndex: 'mobile_no',\n      ...getColumnSearchProps('mobile_no', handleSearch, handleReset, 'Mobile Number')\n    }\n  ];\n}\n\nexport const clmAccInfo = (handleSearch, handleReset, t) => {\n  return [\n    {\n      title: t(\"number\"),\n      dataIndex: 'no',\n      key: 'no',\n      render: text => <div>{text}</div>,\n    },\n    {\n      title: t(\"tcrbAccountRef\"),\n      dataIndex: 'tcrb_account_reference',\n      key: 'tcrb_account_reference',\n      ...getColumnSearchProps('tcrb_account_reference', handleSearch, handleReset, 'TCRB AccountRef')\n    },\n    {\n      title: t(\"subAC\"),\n      dataIndex: 'sub_account',\n      key: 'sub_account',\n      ...getColumnSearchProps('sub_account', handleSearch, handleReset, 'Sub A/C')\n    },\n    {\n      title: t(\"accountName\"),\n      key: 'account_name',\n      dataIndex: 'account_name',\n      ...getColumnSearchProps('account_name', handleSearch, handleReset, 'Account Name')\n    },\n    {\n      title: t(\"accRef1\"),\n      key: 'reference_1',\n      dataIndex: 'reference_1',\n    },\n    {\n      title: t(\"accRef2\"),\n      key: 'reference_2',\n      dataIndex: 'reference_2',\n    },\n    {\n      title: t(\"accRef3\"),\n      key: 'reference_3',\n      dataIndex: 'reference_3',\n    },\n  ];\n}\n\nexport const clmTxn = (handleSearch, handleReset, t) => {\n  return [\n    {\n      title: t(\"number\"),\n      dataIndex: 'no',\n      key: 'no',\n      render: text => <div>{text}</div>,\n    },\n    {\n      title: t(\"txnDREntry\"),\n      dataIndex: 'transaction_debit_entry',\n      key: 'transaction_debit_entry',\n      ...getColumnSearchProps('transaction_debit_entry', handleSearch, handleReset, 'Txn-DR_Entry')\n    },\n    {\n      title: t(\"txnCREntry\"),\n      dataIndex: 'transaction_credit_entry',\n      key: 'transaction_credit_entry',\n      ...getColumnSearchProps('transaction_credit_entry', handleSearch, handleReset, 'Txn-CR_Entry')\n    },\n    {\n      title: t(\"feeDREntry\"),\n      key: 'fee_debit_entries',\n      dataIndex: 'fee_debit_entries',\n    },\n    {\n      title: t(\"feeDRAMT\"),\n      key: 'fee_amount',\n      dataIndex: 'fee_amount',\n    },\n    {\n      title: t(\"feeCREntry\"),\n      key: 'bank_income_fee_entries',\n      dataIndex: 'bank_income_fee_entries',\n    },\n    {\n      title: t(\"feeCRAMT\"),\n      key: 'bank_income_fee',\n      dataIndex: 'bank_income_fee',\n    },\n    {\n      title: t(\"amt\"),\n      key: 'amount',\n      dataIndex: 'amount',\n      render: (text, record) => <div style={{ textAlign: 'right' }}>{addCommaInData(text, true)}</div>\n    },\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}