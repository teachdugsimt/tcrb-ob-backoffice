{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport CircleButton from '../components/button-circle/circle-button'; // import Link from 'next/link'\n\nimport { TcrbButton } from '../components/antd-styles/styles';\nimport { i18n, Link, withTranslation } from '../i18n';\nconst index = inject('counterStore', 'authenStore')(observer(props => {\n  const {\n    0: id,\n    1: setId\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    authenStore\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, authenStore.id ? \"ID :\" + authenStore.id : \"\"), __jsx(\"h1\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, authenStore.password ? \"Password : \" + authenStore.password : \"\"));\n}));\n\nindex.getInitialProps = async () => ({\n  namespacesRequired: []\n});\n\nexport default withTranslation()(index);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/pages/index.js"],"names":["React","useContext","useState","PropTypes","inject","observer","CircleButton","TcrbButton","i18n","Link","withTranslation","index","props","id","setId","password","setPassword","authenStore","color","getInitialProps","namespacesRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,2CAAzB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,eAArB,QAA4C,SAA5C;AAEA,MAAMC,KAAK,GACTP,MAAM,CAAC,cAAD,EAAiB,aAAjB,CAAN,CACGC,QAAQ,CAAEO,KAAD,IAAW;AACnB,QAAM;AAAA,OAACC,EAAD;AAAA,OAAKC;AAAL,MAAcZ,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWC;AAAX,MAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAAkBL,KAAxB;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEL;AAAI,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,WAAW,CAACJ,EAAZ,GAAiB,SAASI,WAAW,CAACJ,EAAtC,GAA2C,EAAzE,CAFK,EAGL;AAAI,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,WAAW,CAACF,QAAZ,GAAuB,gBAAgBE,WAAW,CAACF,QAAnD,GAA8D,EAA5F,CAHK,CAAP;AAcD,CApBQ,CADX,CADF;;AAwBAJ,KAAK,CAACQ,eAAN,GAAwB,aAAa;AACnCC,EAAAA,kBAAkB,EAAE;AADe,CAAb,CAAxB;;AAIA,eAAeV,eAAe,GAAGC,KAAH,CAA9B","sourcesContent":["import React, { useContext, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { inject, observer } from 'mobx-react'\nimport CircleButton from '../components/button-circle/circle-button'\n// import Link from 'next/link'\nimport { TcrbButton } from '../components/antd-styles/styles'\nimport { i18n, Link, withTranslation } from '../i18n'\n\nconst index =\n  inject('counterStore', 'authenStore')\n    (observer((props) => {\n      const [id, setId] = useState(\"\")\n      const [password, setPassword] = useState(\"\")\n\n      const { authenStore } = props\n\n      return <div>\n        {/* <h1 style={{ color: 'red' }}>DashboardV1</h1> */}\n        <h1 style={{ color: 'red' }}>{authenStore.id ? \"ID :\" + authenStore.id : \"\"}</h1>\n        <h1 style={{ color: 'red' }}>{authenStore.password ? \"Password : \" + authenStore.password : \"\"}</h1>\n        {/* <h1 style={{ color: 'red' }}>{props.authenStore.type ? \"Type :\" + props.authenStore.type : \"\"}</h1> */}\n\n        {/* <div style={{ color: 'red' }}>{props.counterStore.count}</div>\n        <button onClick={() => props.counterStore.increment()}>++</button>\n        <button onClick={() => props.counterStore.decrement()}>--</button>\n        <h1>Dashboard index</h1>\n        <TcrbButton className=\"default\" shape={\"round\"} size={\"large\"}\n          onClick={() => console.log(\"Success Click!!\", props.counterStore.count)} >{i18n.t(\"confirm\")} </TcrbButton> */}\n\n      </div>\n    }))\n\nindex.getInitialProps = async () => ({\n  namespacesRequired: [],\n})\n\nexport default withTranslation()(index)\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}