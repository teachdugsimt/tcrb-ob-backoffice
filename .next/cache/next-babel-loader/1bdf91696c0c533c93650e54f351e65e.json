{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/layouts/EmptyLayout.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport MainLayout from './MainLayout';\nimport { inject, observer } from 'mobx-react';\nimport Login from '../pages/login';\nimport { withTranslation } from '../i18n';\nimport Custom404 from '../pages/404';\nconst EmptyLayout = inject('authenStore')(observer(props => {\n  // const { authenStore } = useStores()\n  const {\n    authenStore\n  } = props; // console.log(\"________________ EMPTY LAYOUT PROPS __________________\")\n  // console.log(props)\n\n  if (authenStore.password && authenStore.id) {\n    return __jsx(MainLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, props.children);\n  } else if (props.router && props.router.route == \"/_error\") {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    }, props.children);\n  } else if (props.router.pathname.includes(\"/404\") || props.router.route.includes(\"/404\")) {\n    return __jsx(Custom404, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return __jsx(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    });\n  }\n}));\n\nEmptyLayout.getInitialProps = async () => ({\n  namespacesRequired: []\n});\n\nexport default withRouter(withTranslation('common')(EmptyLayout)); // export default withRouter(withTranslation()(EmptyLayout))\n// import withError from './withError'\n// class Example extends React.Component {\n//     static async getInitialProps(ctx) {\n//         if (error) { // define your app error logic here\n//           ctx.res.statusCode = 404;\n//         }\n//         return { /* ... */ }\n//     }\n//     render() {\n//         /* ... */\n//     }\n// }\n// export default withError(Example);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/layouts/EmptyLayout.js"],"names":["React","useContext","Router","withRouter","MainLayout","inject","observer","Login","withTranslation","Custom404","EmptyLayout","props","authenStore","password","id","children","router","route","pathname","includes","getInitialProps","namespacesRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,MAAMC,WAAW,GAAGL,MAAM,CAAC,aAAD,CAAN,CAAsBC,QAAQ,CAAEK,KAAD,IAAW;AAC5D;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB,CAF4D,CAG5D;AACA;;AAEA,MAAIC,WAAW,CAACC,QAAZ,IAAwBD,WAAW,CAACE,EAAxC,EAA4C;AAC1C,WACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACI,QADT,CADF;AAKD,GAND,MAOK,IAAIJ,KAAK,CAACK,MAAN,IAAgBL,KAAK,CAACK,MAAN,CAAaC,KAAb,IAAsB,SAA1C,EAAqD;AACxD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMN,KAAK,CAACI,QAAZ,CAAP;AACD,GAFI,MAGA,IAAIJ,KAAK,CAACK,MAAN,CAAaE,QAAb,CAAsBC,QAAtB,CAA+B,MAA/B,KAA0CR,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmBE,QAAnB,CAA4B,MAA5B,CAA9C,EAAmF;AACtF,WAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFI,MAGA;AACH,WAAO,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAtBiD,CAA9B,CAApB;;AAwBAT,WAAW,CAACU,eAAZ,GAA8B,aAAa;AACzCC,EAAAA,kBAAkB,EAAE;AADqB,CAAb,CAA9B;;AAIA,eAAelB,UAAU,CACvBK,eAAe,CAAC,QAAD,CAAf,CACGE,WADH,CADuB,CAAzB,C,CAIA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useContext } from 'react'\nimport Router, { withRouter } from 'next/router'\nimport MainLayout from './MainLayout'\nimport { inject, observer } from 'mobx-react'\nimport Login from '../pages/login'\nimport { withTranslation } from '../i18n'\nimport Custom404 from '../pages/404'\n\nconst EmptyLayout = inject('authenStore')(observer((props) => {\n  // const { authenStore } = useStores()\n  const { authenStore } = props\n  // console.log(\"________________ EMPTY LAYOUT PROPS __________________\")\n  // console.log(props)\n\n  if (authenStore.password && authenStore.id) {\n    return (\n      <MainLayout>\n        {props.children}\n      </MainLayout>\n    )\n  }\n  else if (props.router && props.router.route == \"/_error\") {\n    return <div>{props.children}</div>\n  }\n  else if (props.router.pathname.includes(\"/404\") || props.router.route.includes(\"/404\")) {\n    return <Custom404 />\n  }\n  else {\n    return <Login />\n  }\n}\n))\nEmptyLayout.getInitialProps = async () => ({\n  namespacesRequired: [],\n})\n\nexport default withRouter(\n  withTranslation('common')\n    (EmptyLayout)\n)\n// export default withRouter(withTranslation()(EmptyLayout))\n\n\n\n// import withError from './withError'\n\n// class Example extends React.Component {\n//     static async getInitialProps(ctx) {\n//         if (error) { // define your app error logic here\n//           ctx.res.statusCode = 404;\n//         }\n\n//         return { /* ... */ }\n//     }\n\n//     render() {\n//         /* ... */\n//     }\n// }\n\n// export default withError(Example);\n"]},"metadata":{},"sourceType":"module"}