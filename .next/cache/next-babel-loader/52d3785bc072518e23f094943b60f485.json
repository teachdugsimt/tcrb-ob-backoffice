{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, Radio } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport SimpleInput from '../../simple-input';\nvar Option = Select.Option;\n\nvar UserList = function UserList() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var SignupForm = function SignupForm() {\n    _s();\n\n    // Pass the useFormik() hook initial form values and a submit function that will\n    // be called when the form is submitted\n    var formik = useFormik({\n      initialValues: {\n        email: ''\n      },\n      onSubmit: function onSubmit(values) {\n        alert(JSON.stringify(values, null, 2));\n      }\n    });\n    return __jsx(\"form\", {\n      onSubmit: formik.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Email Address\"), __jsx(Input, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      value: formik.values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), __jsx(Button, {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  };\n\n  _s(SignupForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", true);\n\n  var CollectionCreateForm = function CollectionCreateForm(_ref) {\n    var visible = _ref.visible,\n        onCreate = _ref.onCreate,\n        onCancel = _ref.onCancel;\n    return __jsx(Modal, {\n      visible: visible,\n      title: \"Create a new collection\",\n      okText: \"Create\",\n      cancelText: \"Cancel\",\n      onCancel: onCancel,\n      width: 600,\n      onOk: function onOk() {\n        form.validateFields().then(function (values) {\n          form.resetFields();\n          onCreate(values);\n        })[\"catch\"](function (info) {\n          console.log('Validate Failed:', info);\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, __jsx(Form, {\n      form: form,\n      layout: \"vertical\",\n      name: \"form_in_modal\",\n      initialValues: {\n        modifier: 'public'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"Employee ID\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Supervisor\")), __jsx(Col, {\n      span: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"supervisor\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return null;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }), __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"description\",\n      label: \"Description\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"textarea\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }))))));\n  };\n\n  var onCreate = function onCreate(values) {\n    console.log('Received values of form: ', values);\n    setVisible(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      return setVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Add User\"))), __jsx(CollectionCreateForm, {\n    visible: visible,\n    onCreate: onCreate,\n    onCancel: function onCancel() {\n      setVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(UserList, \"N+WzfHICSq4VVyI/RgPXNEja3nc=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","InputNumber","Divider","Button","Modal","Drawer","Form","Radio","TcrbButton","TcrbPopconfirm","SimpleInput","Option","UserList","visible","setVisible","useForm","form","SignupForm","formik","useFormik","initialValues","email","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange","CollectionCreateForm","onCreate","onCancel","validateFields","then","resetFields","info","console","log","modifier","padding","required","message","width","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, Radio } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\n\nimport SimpleInput from '../../simple-input'\n\nconst { Option } = Select;\n\nconst UserList = () => {\n  const [visible, setVisible] = useState(false)\n  const [form] = Form.useForm();\n\n  const SignupForm = () => {\n    // Pass the useFormik() hook initial form values and a submit function that will\n    // be called when the form is submitted\n    const formik = useFormik({\n      initialValues: {\n        email: '',\n      },\n      onSubmit: values => {\n        alert(JSON.stringify(values, null, 2));\n      },\n    });\n    return (\n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"email\">Email Address</label>\n        <Input\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    );\n  };\n\n  const CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\n    return (\n      <Modal\n        visible={visible}\n        title=\"Create a new collection\"\n        okText=\"Create\"\n        cancelText=\"Cancel\"\n        onCancel={onCancel}\n        width={600}\n        onOk={() => {\n          form\n            .validateFields()\n            .then(values => {\n              form.resetFields();\n              onCreate(values);\n            })\n            .catch(info => {\n              console.log('Validate Failed:', info);\n            });\n        }}\n      >\n        <Form\n          form={form}\n          layout=\"vertical\"\n          name=\"form_in_modal\"\n          initialValues={{\n            modifier: 'public',\n          }}\n        >\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Employee ID\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"title\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Supervisor\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"supervisor\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => null}\n                >\n                  {/* {children} */}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n\n            </Col>\n            <Col>\n              <Form.Item name=\"description\" label=\"Description\">\n                <Input type=\"textarea\" />\n              </Form.Item>\n            </Col>\n          </Row>\n\n\n\n        </Form>\n      </Modal>\n    );\n  }\n\n  const onCreate = values => {\n    console.log('Received values of form: ', values);\n    setVisible(false);\n  }\n\n  return (\n    <div>\n      <Row gutter={[4, 24]}>\n        <Col span={2}>\n          <TcrbButton className=\"primary\" onClick={() => setVisible(true)} >Add User</TcrbButton>\n        </Col>\n      </Row>\n      {/* <SignupForm /> */}\n      <CollectionCreateForm\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n      {/* <Formik\n        initialValues={{ name: \"\", email: \"\" }}\n        onSubmit={async values => {\n          await new Promise(resolve => setTimeout(resolve, 500));\n          alert(JSON.stringify(values, null, 2));\n        }}\n      >\n        <Form>\n          <Field name=\"name\" type=\"text\" />\n          <Field name=\"email\" type=\"email\" />\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </Formik> */}\n    </div>\n  )\n}\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}