{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/pending-approvals.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Button, Table, Popconfirm, Row, Col } from 'antd';\nexport default function PendingApprovals() {\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  useEffect(() => {\n    setDataSource(mockDataSource);\n  }, []);\n\n  const handleDelete = key => {\n    // const dataSource = [...this.state.dataSource];\n    console.log(key); // setDataSource(dataSource.filter(item => item.key !== key))\n  };\n\n  const columns = [{\n    // title: 'Specific Channel Limit',\n    dataIndex: 'operation',\n    render: (text, record) => dataSource.length >= 1 ? __jsx(Popconfirm, {\n      title: \"Sure to delete?\",\n      onConfirm: () => handleDelete(record.key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Delete\")) : null\n  }, {\n    title: 'Ticket#',\n    dataIndex: 'ticket',\n    width: '10%' // editable: true,\n\n  }, {\n    title: 'Request Type',\n    dataIndex: 'requestType'\n  }, {\n    title: 'Request Description',\n    dataIndex: 'requestDescription'\n  }, {\n    title: 'Requester ID',\n    dataIndex: 'requesterId'\n  }, {\n    title: 'Request Date',\n    dataIndex: 'requestDate'\n  }, {\n    title: 'Action',\n    dataIndex: 'action'\n  }];\n  const mockDataSource = [{\n    key: '0',\n    ticket: 'NE',\n    requestType: 'Revolving Loan-Non TCG Nano',\n    requestDescription: '100,000.00',\n    requesterId: '100,000.00',\n    requestDate: '',\n    action: ''\n  }, {\n    key: '1',\n    ProductCode: 'NG',\n    ProductDescription: 'Revolving Loan-Non TCG Micro',\n    TxnLimit: '200,000.00',\n    DailyLimit: '200,000.00'\n  }, {\n    key: '2',\n    ProductCode: 'NH',\n    ProductDescription: 'Revolving Loan-TCG Nano',\n    TxnLimit: '100,000.00',\n    DailyLimit: '100,000.00'\n  }];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    flex: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Table // components={components}\n  , {\n    rowClassName: () => 'editable-row',\n    bordered: true,\n    dataSource: dataSource,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/pending-approvals.js"],"names":["React","useState","useEffect","Button","Table","Popconfirm","Row","Col","PendingApprovals","dataSource","setDataSource","mockDataSource","handleDelete","key","console","log","columns","dataIndex","render","text","record","length","title","width","ticket","requestType","requestDescription","requesterId","requestDate","action","ProductCode","ProductDescription","TxnLimit","DailyLimit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, Table, Popconfirm, Row, Col } from 'antd'\nexport default function PendingApprovals() {\n  const [dataSource, setDataSource] = useState([])\n  useEffect(() => {\n      setDataSource(mockDataSource)\n\n  }, []);\n  const handleDelete = key => {\n    // const dataSource = [...this.state.dataSource];\n    console.log(key)\n    // setDataSource(dataSource.filter(item => item.key !== key))\n\n  };\n  const columns = [\n    {\n      // title: 'Specific Channel Limit',\n      dataIndex: 'operation',\n      render: (text, record) =>\n        dataSource.length >= 1 ? (\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n            <a>Delete</a>\n          </Popconfirm>\n        ) : null,\n    },\n    {\n      title: 'Ticket#',\n      dataIndex: 'ticket',\n      width: '10%',\n      // editable: true,\n    },\n    {\n      title: 'Request Type',\n      dataIndex: 'requestType',\n    },\n    {\n      title: 'Request Description',\n      dataIndex: 'requestDescription',\n    },\n    {\n      title: 'Requester ID',\n      dataIndex: 'requesterId',\n    },\n    {\n      title: 'Request Date',\n      dataIndex: 'requestDate',\n    },\n    {\n      title: 'Action',\n      dataIndex: 'action',\n    }\n  ];\n  const mockDataSource = [\n    {\n      key: '0',\n      ticket: 'NE',\n      requestType: 'Revolving Loan-Non TCG Nano',\n      requestDescription: '100,000.00',\n      requesterId: '100,000.00',\n      requestDate:'',\n      action:''\n    },\n    {\n      key: '1',\n      ProductCode: 'NG',\n      ProductDescription: 'Revolving Loan-Non TCG Micro',\n      TxnLimit: '200,000.00',\n      DailyLimit: '200,000.00'\n    },\n    {\n      key: '2',\n      ProductCode: 'NH',\n      ProductDescription: 'Revolving Loan-TCG Nano',\n      TxnLimit: '100,000.00',\n      DailyLimit: '100,000.00'\n    },\n  ]\n  return (\n    <div>\n      <Row>\n        <Col flex={100}>\n        <Table\n            // components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={dataSource}\n            columns={columns}\n          />\n        </Col>\n      </Row>\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}