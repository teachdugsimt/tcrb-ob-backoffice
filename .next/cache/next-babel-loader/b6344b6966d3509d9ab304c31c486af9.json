{"ast":null,"code":"import ExcuteApi from './api-integrations/excute-api';\n\nclass BusinessParameterSetupApi {\n  constructor() {\n    this.getOtpValue = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/parameterstore', params, \"get\");\n      return response;\n    };\n\n    this.setOtpValue = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/changerequest/otp', params, \"post\");\n      return response;\n    };\n\n    this.getPendingApproveList = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/changerequest', params, \"get\");\n      return response;\n    };\n\n    this.getProductList = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/product', params, \"get\");\n      return response;\n    };\n\n    this.getProductLimit = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/partnertransactionlimit', params, \"get\");\n      return response;\n    };\n\n    this.getDetailProductLimit = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/partnertransactionlimit/' + params, null, \"get\");\n      return response;\n    };\n\n    this.getChannelPartnerList = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/partnerinformation', params, \"get\");\n      return response;\n    };\n\n    this.getOtpPendingList = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/changerequest/otp/lastpending', params, \"get\");\n      return response;\n    };\n\n    this.getPartnerUnbindList = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/product/' + params.product_code + '/unbindpartner', params.transaction_code, \"get\");\n      return response;\n    };\n\n    this.getPartnerBindingList = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/product/' + params.product_code + '/bindpartner', params.transaction_code, \"get\");\n      return response;\n    };\n\n    this.getActivePartnerBindingList = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/product/partnertransactionlimit/view', params, \"get\");\n      return response;\n    };\n\n    this.updatePartnerLimit = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\");\n      return response;\n    };\n\n    this.deleteProductLimit = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\");\n      return response;\n    };\n\n    this.addNewProductLimit = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\");\n      return response;\n    };\n\n    this.submitSpecificLimit = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\");\n      return response;\n    };\n\n    this.submitChangePartnerLimit = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\");\n      return response;\n    };\n\n    this.submitChangeProductLimit = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\");\n      return response;\n    };\n\n    this.getPendingList = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/changerequest', params, \"get\");\n      return response;\n    };\n\n    this.approveRejectOtpRequest = async params => {\n      const response = await api.put('api/backoffice/v1/changerequest/otp', params);\n      return response;\n    };\n\n    this.rejectProductRequest = async params => {\n      const response = await api.put('api/backoffice/v1/changerequest/productlimit', params);\n      return response;\n    };\n\n    this.getPartnerChannel = async params => {\n      const response = await ExcuteApi('api/backoffice/v1/partnertransactionlimit', params, \"get\");\n      return response;\n    };\n\n    this.processPendingList = async params => {\n      const response = await ExcuteApi(`api/backoffice/v1/changerequest/${params.id}/confirm`, params, \"post\");\n      return response;\n    };\n  }\n\n}\n\nexport default new BusinessParameterSetupApi(); // HTTPS=true SSL_CRT_FILE=Certificate_chain.txt SSL_KEY_FILE=private_key.txt npm run dev\n// customer service inquiry\n// bussiness parameter setup\n// customer service menu","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/services/business-parameter-setup-api.js"],"names":["ExcuteApi","BusinessParameterSetupApi","getOtpValue","params","response","setOtpValue","getPendingApproveList","getProductList","getProductLimit","getDetailProductLimit","getChannelPartnerList","getOtpPendingList","getPartnerUnbindList","product_code","transaction_code","getPartnerBindingList","getActivePartnerBindingList","updatePartnerLimit","deleteProductLimit","addNewProductLimit","submitSpecificLimit","submitChangePartnerLimit","submitChangeProductLimit","getPendingList","approveRejectOtpRequest","api","put","rejectProductRequest","getPartnerChannel","processPendingList","id"],"mappings":"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","sourcesContent":["import ExcuteApi from './api-integrations/excute-api'\n\nclass BusinessParameterSetupApi {\n\n  getOtpValue = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/parameterstore', params, \"get\")\n    return response\n  }\n\n  setOtpValue = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/otp', params, \"post\")\n    return response\n  }\n\n  getPendingApproveList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest', params, \"get\")\n    return response\n  }\n\n  getProductList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/product', params, \"get\")\n    return response\n  }\n\n  getProductLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/partnertransactionlimit', params, \"get\")\n    return response\n  }\n\n  getDetailProductLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/partnertransactionlimit/' + params, null, \"get\")\n    return response\n  }\n\n  getChannelPartnerList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/partnerinformation', params, \"get\")\n    return response\n  }\n\n  getOtpPendingList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/otp/lastpending', params, \"get\")\n    return response\n  }\n\n  getPartnerUnbindList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/product/' + params.product_code + '/unbindpartner', params.transaction_code, \"get\")\n    return response\n  }\n\n  getPartnerBindingList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/product/' + params.product_code + '/bindpartner', params.transaction_code, \"get\")\n    return response\n  }\n\n  getActivePartnerBindingList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/product/partnertransactionlimit/view', params, \"get\")\n    return response\n  }\n\n  updatePartnerLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\")\n    return response\n  }\n\n  deleteProductLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\")\n    return response\n  }\n\n  addNewProductLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\")\n    return response\n  }\n\n  submitSpecificLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\")\n    return response\n  }\n\n  submitChangePartnerLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\")\n    return response\n  }\n\n  submitChangeProductLimit = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest/productlimit', params, \"post\")\n    return response\n  }\n\n  getPendingList = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/changerequest', params, \"get\")\n    return response\n  }\n\n  approveRejectOtpRequest = async (params) => {\n    const response = await api.put('api/backoffice/v1/changerequest/otp', params)\n    return response\n  }\n\n  rejectProductRequest = async (params) => {\n    const response = await api.put('api/backoffice/v1/changerequest/productlimit', params)\n    return response\n  }\n\n\n  getPartnerChannel = async (params) => {\n    const response = await ExcuteApi('api/backoffice/v1/partnertransactionlimit', params, \"get\")\n    return response\n  }\n\n  processPendingList = async (params) => {\n    const response = await ExcuteApi(`api/backoffice/v1/changerequest/${params.id}/confirm`, params, \"post\")\n    return response\n  }\n\n}\nexport default new BusinessParameterSetupApi()\n// HTTPS=true SSL_CRT_FILE=Certificate_chain.txt SSL_KEY_FILE=private_key.txt npm run dev\n\n\n// customer service inquiry\n// bussiness parameter setup\n// customer service menu\n"]},"metadata":{},"sourceType":"module"}