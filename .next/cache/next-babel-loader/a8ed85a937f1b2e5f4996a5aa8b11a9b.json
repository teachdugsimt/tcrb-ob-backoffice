{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport SimpleSwitch from '../simple-switch';\nimport { useStores } from '../../hooks/use-stores';\nimport { toJS } from 'mobx';\nconst StyledA = styled.a.withConfig({\n  displayName: \"otp-unlocking__StyledA\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"otp-unlocking__StyledSpan\",\n  componentId: \"r234ff-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSwitch = styled(Switch).withConfig({\n  displayName: \"otp-unlocking__StyledSwitch\",\n  componentId: \"r234ff-2\"\n})([\"\", \"\"], ({\n  defaultChecked\n}) => defaultChecked && `\n      background-color: #F88008 !important;\n  `);\nexport default function OtpUnlocking() {\n  const {\n    0: idCard,\n    1: setIdCard\n  } = useState('');\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: stringSwitch,\n    1: setStringSwitch\n  } = useState([{\n    accountNumber: '123123123123',\n    accountType: 'Binding to TCRB Mobile Banking',\n    accountStatus: true\n  }, {\n    accountNumber: '00993445123123',\n    accountType: 'Binding to Micro Pay',\n    accountStatus: false\n  }]);\n  const {\n    customerServicesMenuStore\n  } = useStores();\n\n  const searchIdCardNumber = value => {\n    console.log('eiei search:' + value);\n    setIdCard(value);\n    setIsSearch(true);\n  };\n\n  const replaceNewDataForSetString = () => {\n    let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber));\n    setStringSwitch([...newArray, toJS(customerServicesMenuStore.accountSelected)]);\n  };\n\n  const hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  const onChange = (switchSelected, index) => {\n    console.log(switchSelected, index); // if (switchSelected.accountStatus === true) {\n    //   customerServicesMenuStore.accountSelected = switchSelected\n    //   setVisble(true)\n    //   setIsChecked(true)\n    //   setModalString(\n    //     <div style={{ textAlign: \"center\" }}>\n    //       <p>Unlocking OTP!!</p>\n    //       <p>Account Number {switchSelected.accountNumber}</p>\n    //     </div>\n    //   )\n    // } else {\n    //   // setIsChecked(false)\n    // }\n  };\n\n  const unlockOTP = () => {\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false;\n    setVisble(false);\n    replaceNewDataForSetString();\n  };\n\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) => __jsx(Row, {\n      key: index,\n      gutter: [4, 8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, __jsx(Col, {\n      span: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, __jsx(StyledSwitch, {\n      defaultChecked: string.accountStatus,\n      onChange: checked => onChange(checked, string, index),\n      disabled: string.accountStatus === false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), __jsx(StyledA, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, string.accountNumber)), __jsx(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, __jsx(StyledSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \" \", string.accountType)), __jsx(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, string.accountStatus ? __jsx(StyledSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 36\n      }\n    }, \"OTP is Locked\") : __jsx(StyledSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 79\n      }\n    }, \"OTP is ready for using\"))));\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: \"ID Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(SimpleSwitch, {\n    string: stringSwitch,\n    onChange: () => onChange(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }) : '', __jsx(SimpleModal, {\n    onOk: () => unlockOTP(),\n    onCancel: () => setVisble(false),\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","SimpleSwitch","useStores","toJS","StyledA","a","theme","spacing","medium","StyledSpan","span","StyledSwitch","defaultChecked","OtpUnlocking","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","stringSwitch","setStringSwitch","accountNumber","accountType","accountStatus","customerServicesMenuStore","searchIdCardNumber","value","console","log","replaceNewDataForSetString","newArray","filter","accountInfo","accountSelected","hideModal","setState","onChange","switchSelected","index","unlockOTP","SwitchList","listItems","map","string","checked","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport SimpleSwitch from '../simple-switch'\nimport { useStores } from '../../hooks/use-stores'\nimport { toJS } from 'mobx';\n\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n\n      ${({ defaultChecked }) => defaultChecked && `\n      background-color: #F88008 !important;\n  `}\n`\n\nexport default function OtpUnlocking\n  () {\n  const [idCard, setIdCard] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const [stringSwitch, setStringSwitch] = useState([{ accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true }, { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }])\n  const { customerServicesMenuStore } = useStores()\n  const searchIdCardNumber = (value) => {\n    console.log('eiei search:' + value)\n    setIdCard(value)\n    setIsSearch(true)\n  }\n\n  const replaceNewDataForSetString = () => {\n    let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber))\n    setStringSwitch([...newArray, toJS(customerServicesMenuStore.accountSelected)])\n  }\n\n  const hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  const onChange = (switchSelected, index) => {\n    console.log(switchSelected, index)\n    // if (switchSelected.accountStatus === true) {\n    //   customerServicesMenuStore.accountSelected = switchSelected\n    //   setVisble(true)\n    //   setIsChecked(true)\n    //   setModalString(\n    //     <div style={{ textAlign: \"center\" }}>\n    //       <p>Unlocking OTP!!</p>\n    //       <p>Account Number {switchSelected.accountNumber}</p>\n    //     </div>\n    //   )\n    // } else {\n    //   // setIsChecked(false)\n    // }\n  }\n  const unlockOTP = () => {\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false\n    setVisble(false)\n    replaceNewDataForSetString()\n  }\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) =>\n      <Row key={index} gutter={[4, 8]}>\n        <Col span={5}>\n          <StyledSwitch defaultChecked={string.accountStatus} onChange={checked => onChange(checked, string, index)} disabled={string.accountStatus === false} />\n          <StyledA>{string.accountNumber}</StyledA>\n        </Col>\n        <Col span={6}>\n          <StyledSpan> {string.accountType}</StyledSpan>\n        </Col>\n        <Col span={4}>\n          {string.accountStatus ? (<StyledSpan>OTP is Locked</StyledSpan>) : (<StyledSpan>OTP is ready for using</StyledSpan>)}\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  return (\n    <div style={{ margin: 20 }}>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (\n        <SimpleSwitch string={stringSwitch} onChange={() => onChange()} />\n      ) : ('')}\n      <SimpleModal\n        onOk={() => unlockOTP()}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}