{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/simple-switch.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleModal from './simple-modal';\nimport { toJS } from 'mobx';\nconst StyledA = styled.a.withConfig({\n  displayName: \"simple-switch__StyledA\",\n  componentId: \"l3rgeb-0\"\n})([\"display:initial;padding-left:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"simple-switch__StyledSpan\",\n  componentId: \"l3rgeb-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSwitch = styled(Switch).withConfig({\n  displayName: \"simple-switch__StyledSwitch\",\n  componentId: \"l3rgeb-2\"\n})([\"\", \"\"], ({\n  defaultChecked\n}) => defaultChecked && `\n      background-color: #F88008 !important;\n  `);\nexport default function SimpleSwitch(props) {\n  const SwitchList = () => {\n    const listItems = props.data.map((switchOn, index) => {\n      const textList = switchOn.splice(1);\n      console.log(textList.indexOf);\n      return __jsx(Row, {\n        key: index,\n        gutter: [4, 8],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, __jsx(Col, {\n        span: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, __jsx(StyledSwitch, {\n        defaultChecked: switchOn[0],\n        onChange: checked => props.onChange(switchOn[0], index),\n        disabled: switchOn[0] === false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      })), textList.map(textDetail, index => __jsx(Col, {\n        span: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 44\n        }\n      }, index == 0 ? __jsx(StyledA, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, textDetail) : __jsx(StyledSpan, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 59\n        }\n      }, \" \", textDetail))), __jsx(Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, switchOn ? __jsx(StyledSpan, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }\n      }, \"OTP is Locked\") : __jsx(StyledSpan, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 67\n        }\n      }, \"OTP is ready for using\")));\n    });\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  return __jsx(Col, {\n    flex: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(SwitchList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/simple-switch.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","styled","SimpleModal","toJS","StyledA","a","theme","spacing","medium","StyledSpan","span","StyledSwitch","defaultChecked","SimpleSwitch","props","SwitchList","listItems","data","map","switchOn","index","textList","splice","console","log","indexOf","checked","onChange","textDetail"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,MAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,CAAV;AAAA;AAAA;AAAA,8IAEK,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAN,CAAcC,MAFlC,CAAb;AAOA,MAAMC,UAAU,GAAGR,MAAM,CAACS,IAAV;AAAA;AAAA;AAAA,wDAGE,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAN,CAAcC,MAH/B,CAAhB;AAKA,MAAMG,YAAY,GAAGV,MAAM,CAACD,MAAD,CAAT;AAAA;AAAA;AAAA,aACV,CAAC;AAAEY,EAAAA;AAAF,CAAD,KAAwBA,cAAc,IAAK;;GADjC,CAAlB;AAOA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAMC,SAAS,GAAGF,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAEpD,YAAMC,QAAQ,GAAGF,QAAQ,CAACG,MAAT,CAAgB,CAAhB,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,OAArB;AACA,aAAQ,MAAC,GAAD;AAAK,QAAA,GAAG,EAAEL,KAAV;AAAiB,QAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,MAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,YAAD;AAAc,QAAA,cAAc,EAAED,QAAQ,CAAC,CAAD,CAAtC;AACE,QAAA,QAAQ,EAAEO,OAAO,IAAIZ,KAAK,CAACa,QAAN,CAAeR,QAAQ,CAAC,CAAD,CAAvB,EAA4BC,KAA5B,CADvB;AAEE,QAAA,QAAQ,EAAED,QAAQ,CAAC,CAAD,CAAR,KAAgB,KAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADM,EAOLE,QAAQ,CAACH,GAAT,CAAaU,UAAb,EAAyBR,KAAK,IAAI,MAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAChCA,KAAK,IAAI,CAAT,GAAa,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAUQ,UAAV,CAAb,GAA+C,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAcA,UAAd,CADf,CAAlC,CAPK,EAYN,MAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,QAAQ,GAAI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAJ,GAA+C,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAD1D,CAZM,CAAR;AAgBD,KApBiB,CAAlB;AAsBA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,SAAL,CADF;AAGD,GA1BD;;AA2BA,SACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleModal from './simple-modal'\nimport { toJS } from 'mobx';\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n      ${({ defaultChecked }) => defaultChecked && `\n      background-color: #F88008 !important;\n  `}\n`\n\n\nexport default function SimpleSwitch(props) {\n  const SwitchList = () => {\n    const listItems = props.data.map((switchOn, index) => {\n\n      const textList = switchOn.splice(1)\n      console.log(textList.indexOf)\n      return (<Row key={index} gutter={[4, 8]}>\n        <Col span={2}>\n          <StyledSwitch defaultChecked={switchOn[0]}\n            onChange={checked => props.onChange(switchOn[0], index)}\n            disabled={switchOn[0] === false} />\n          {/* <StyledA>{string.accountNumber}</StyledA> */}\n        </Col>\n        {textList.map(textDetail, index => <Col span={6}>\n          {index == 0 ? <StyledA>{textDetail}</StyledA> : <StyledSpan> {textDetail}</StyledSpan>}\n\n        </Col>)\n        }\n        <Col span={4}>\n          {switchOn ? (<StyledSpan>OTP is Locked</StyledSpan>) : (<StyledSpan>OTP is ready for using</StyledSpan>)}\n        </Col>\n      </Row>)\n    }\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  return (\n    <Col flex={100}>\n      <SwitchList />\n    </Col>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}