{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _temp;\n\nimport { observable, action, toJS } from 'mobx';\nimport { CustomerServicesMenuApi } from '../services';\nimport { get } from 'lodash';\nvar CustomerServicesMenuStore = (_class = (_temp = function CustomerServicesMenuStore() {\n  _classCallCheck(this, CustomerServicesMenuStore);\n\n  _initializerDefineProperty(this, \"citizenId\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"accountId\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"accountSelected\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"apiFetching\", _descriptor4, this);\n\n  _initializerDefineProperty(this, \"searchFetching\", _descriptor5, this);\n\n  _initializerDefineProperty(this, \"accountInfo\", _descriptor6, this);\n\n  _initializerDefineProperty(this, \"accountSuccessInfo\", _descriptor7, this);\n\n  _initializerDefineProperty(this, \"arrayAccountInfo\", _descriptor8, this);\n\n  _initializerDefineProperty(this, \"accountInfoError\", _descriptor9, this);\n\n  _initializerDefineProperty(this, \"unlockOtpError\", _descriptor10, this);\n\n  _initializerDefineProperty(this, \"unlockOtpInfo\", _descriptor11, this);\n\n  _initializerDefineProperty(this, \"unbindAccountInfo\", _descriptor12, this);\n\n  _initializerDefineProperty(this, \"unbindAccountError\", _descriptor13, this);\n\n  _initializerDefineProperty(this, \"arrayUnbindAccountInfo\", _descriptor14, this);\n\n  _initializerDefineProperty(this, \"errorMessage\", _descriptor15, this);\n\n  _initializerDefineProperty(this, \"getDataAccountOtpUnlock\", _descriptor16, this);\n\n  _initializerDefineProperty(this, \"submitUnlockOTP\", _descriptor17, this);\n\n  _initializerDefineProperty(this, \"getDataAccountUnbind\", _descriptor18, this);\n\n  _initializerDefineProperty(this, \"getDataPartnerInfo\", _descriptor19, this);\n\n  _initializerDefineProperty(this, \"submitAccountUnbiding\", _descriptor20, this);\n\n  _initializerDefineProperty(this, \"setCitizenId\", _descriptor21, this);\n\n  _initializerDefineProperty(this, \"setAccountId\", _descriptor22, this);\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"citizenId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"accountId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"accountSelected\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"apiFetching\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"searchFetching\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"accountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"accountSuccessInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"arrayAccountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"accountInfoError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"unlockOtpError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"unlockOtpInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"unbindAccountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"unbindAccountError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"arrayUnbindAccountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"errorMessage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"getDataAccountOtpUnlock\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(citizenId) {\n        var temp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.citizenId = {\n                  citizen_id: citizenId\n                };\n                _this.searchFetching = true;\n                _context.next = 4;\n                return CustomerServicesMenuApi.getAccountInfo(_this.citizenId);\n\n              case 4:\n                temp = _context.sent;\n                console.log(temp);\n\n                if (temp.ok && temp.status === 200) {\n                  _this.searchFetching = false;\n                  console.log(\"Response >> \", temp.data.responseData);\n                  _this.accountInfo = temp.data.responseData; //waiting edit api\n                  // if (temp.responseData.data.name == 'Error') {\n                  //   this.accountInfoError = temp.data\n                  // }\n                } else {\n                  if (temp.problem == 'TIMEOUT_ERROR') {\n                    _this.customerServicesMenuStore.accountInfoError.responseData.userMessage = temp.originalError.message;\n                    _this.accountInfoError = null;\n                  } else {\n                    _this.searchFetching = false; // this.accountInfoError = JSON.parse(temp.data.body)\n                    // console.log(temp.problem)\n                    // this.accountInfoError = temp.originalError.message\n\n                    _this.accountInfoError = get(temp, 'data.developerMessage', 'Unknown Error');\n                  }\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"submitUnlockOTP\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this2$accountSelecte, main_account_no, cif, temp;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // this.accountSelected\n              _this2$accountSelecte = _this2.accountSelected, main_account_no = _this2$accountSelecte.main_account_no, cif = _this2$accountSelecte.cif;\n              _this2.apiFetching = true;\n              _this2.accountSuccessInfo = null;\n              _context2.next = 5;\n              return CustomerServicesMenuApi.unlockOTPAccount({\n                main_account_no: main_account_no,\n                cif: cif\n              });\n\n            case 5:\n              temp = _context2.sent;\n              console.log(temp);\n\n              if (temp.ok && temp.status === 200) {\n                _this2.apiFetching = false;\n                _this2.unlockOtpInfo = temp.data.responseData;\n                _this2.accountSuccessInfo = _this2.accountSelected;\n                _this2.accountInfoError = null;\n              } else {\n                _this2.apiFetching = false;\n                _this2.accountInfoError = get(temp, 'data.developerMessage', 'Unknown Error'); // this.unlockOtpError = JSON.parse(temp.data.body)\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"getDataAccountUnbind\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(accountNumber) {\n        var temp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this3.citizenId = {\n                  citizen_id: accountNumber\n                };\n                _this3.searchFetching = true;\n                _context3.next = 4;\n                return CustomerServicesMenuApi.getAccountInfoUnbinding(_this3.citizenId);\n\n              case 4:\n                temp = _context3.sent;\n                console.log(temp);\n\n                if (temp.ok && temp.status === 200) {\n                  _this3.searchFetching = false;\n                  _this3.accountInfo = temp.data.responseData;\n                  _this3.accountInfoError = null;\n                } else {\n                  _this3.searchFetching = false; // let problem = getGeneralApiProblem(response)\n                  // this.accountInfoError = JSON.parse(temp.data.body)\n\n                  _this3.accountInfoError = get(temp, 'data.developerMessage', 'Unknown Error');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"getDataPartnerInfo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(accountNumber) {\n        var temp;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this4.apiFetching = true;\n                _context4.next = 3;\n                return CustomerServicesMenuApi.getPartnerInfo({\n                  main_account_no: accountNumber\n                });\n\n              case 3:\n                temp = _context4.sent;\n                console.log(temp);\n\n                if (temp.ok && temp.status === 200 && !temp.problem) {\n                  //change to status when real api\n                  _this4.apiFetching = false;\n                  _this4.unbindAccountInfo = temp.data.responseData; // this.unbindAccountInfo = temp.data.responseData // for dev\n                } else {\n                  _this4.apiFetching = false;\n                  _this4.unbindAccountInfo = temp;\n                  _this4.accountInfoError = get(temp, 'data.developerMessage', 'Unknown Error');\n                }\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"submitAccountUnbiding\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this5 = this;\n\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _this5$accountSelecte, account_reference, partner_reference, requestId, transactionRefNo, temp;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              // accountRefId: accountRefId,\n              //         partnerRefId: partnerRefId,\n              //         requestId: requestId,\n              //         transactionRefNo: transactionRefNo\n              _this5.apiFetching = true;\n              _this5$accountSelecte = _this5.accountSelected, account_reference = _this5$accountSelecte.account_reference, partner_reference = _this5$accountSelecte.partner_reference;\n              requestId = \"1234567890\";\n              transactionRefNo = \"1234567890\";\n              console.log(\"DATA >> \", {\n                account_reference: account_reference,\n                partner_reference: partner_reference,\n                requestId: requestId,\n                transactionRefNo: transactionRefNo\n              });\n              _context5.next = 7;\n              return CustomerServicesMenuApi.unbindAccount({\n                accountRefId: account_reference,\n                partnerRefId: partner_reference,\n                requestId: requestId,\n                transactionRefNo: transactionRefNo\n              });\n\n            case 7:\n              temp = _context5.sent;\n              console.log(temp);\n\n              if (temp.ok && temp.status === 200) {\n                _this5.apiFetching = false; // this.unlockOtpInfo = temp.data\n                // console.log(this.accountSelected)\n                // console.log(this.unbindAccountInfo)\n\n                _this5.unbindAccountInfo = _this5.unbindAccountInfo.filter(function (e) {\n                  return e.partner_reference != _this5.accountSelected.partner_reference;\n                });\n                _this5.accountSelected = null; // console.log(this.unbindAccountInfo)\n              } else {\n                _this5.apiFetching = false; // this.unlockOtpError = JSON.parse(temp.data.body)\n              }\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n  }\n}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, \"setCitizenId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this6 = this;\n\n    return function (id) {\n      _this6.citizenId = {\n        idCard: id\n      };\n    };\n  }\n}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, \"setAccountId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this7 = this;\n\n    return function (id) {\n      _this7.accountId = id;\n    };\n  }\n})), _class);\nexport default CustomerServicesMenuStore;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/customer-services-menu-store.js"],"names":["observable","action","toJS","CustomerServicesMenuApi","get","CustomerServicesMenuStore","citizenId","citizen_id","searchFetching","getAccountInfo","temp","console","log","ok","status","data","responseData","accountInfo","problem","customerServicesMenuStore","accountInfoError","userMessage","originalError","message","accountSelected","main_account_no","cif","apiFetching","accountSuccessInfo","unlockOTPAccount","unlockOtpInfo","accountNumber","getAccountInfoUnbinding","getPartnerInfo","unbindAccountInfo","account_reference","partner_reference","requestId","transactionRefNo","unbindAccount","accountRefId","partnerRefId","filter","e","id","idCard","accountId"],"mappings":"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","sourcesContent":["import { observable, action, toJS } from 'mobx'\nimport { CustomerServicesMenuApi } from '../services'\nimport { get } from 'lodash'\n\nclass CustomerServicesMenuStore {\n  @observable citizenId = ''\n  @observable accountId = {}\n  @observable accountSelected = {}\n  @observable apiFetching = false\n  @observable searchFetching = false\n\n  @observable accountInfo = null\n  @observable accountSuccessInfo = null\n  @observable arrayAccountInfo = []\n  @observable accountInfoError = null\n\n  @observable unlockOtpError = []\n  @observable unlockOtpInfo = null\n  @observable unbindAccountInfo = null\n  @observable unbindAccountError = []\n  @observable arrayUnbindAccountInfo = []\n\n  @observable errorMessage = null\n\n  @action getDataAccountOtpUnlock = async (citizenId) => {\n    this.citizenId = { citizen_id: citizenId }\n    this.searchFetching = true\n    let temp = await CustomerServicesMenuApi.getAccountInfo(this.citizenId)\n    console.log(temp)\n    if (temp.ok && temp.status === 200) {\n      this.searchFetching = false\n      console.log(\"Response >> \", temp.data.responseData)\n      this.accountInfo = temp.data.responseData\n      //waiting edit api\n      // if (temp.responseData.data.name == 'Error') {\n      //   this.accountInfoError = temp.data\n      // }\n    } else {\n      if (temp.problem == 'TIMEOUT_ERROR') {\n        this.customerServicesMenuStore.accountInfoError.responseData.userMessage = temp.originalError.message\n        this.accountInfoError = null\n      } else {\n        this.searchFetching = false\n        // this.accountInfoError = JSON.parse(temp.data.body)\n        // console.log(temp.problem)\n        // this.accountInfoError = temp.originalError.message\n        this.accountInfoError = get(temp, 'data.developerMessage', 'Unknown Error')\n      }\n\n    }\n  }\n\n  @action submitUnlockOTP = async () => {\n    // this.accountSelected\n    let { main_account_no, cif } = this.accountSelected\n    this.apiFetching = true\n    this.accountSuccessInfo = null\n    let temp = await CustomerServicesMenuApi.unlockOTPAccount({ main_account_no, cif })\n    console.log(temp)\n    if (temp.ok && temp.status === 200) {\n      this.apiFetching = false\n      this.unlockOtpInfo = temp.data.responseData\n      this.accountSuccessInfo = this.accountSelected\n      this.accountInfoError = null\n    } else {\n      this.apiFetching = false\n      this.accountInfoError = get(temp, 'data.developerMessage', 'Unknown Error')\n      // this.unlockOtpError = JSON.parse(temp.data.body)\n    }\n  }\n\n  @action getDataAccountUnbind = async (accountNumber) => {\n    this.citizenId = { citizen_id: accountNumber }\n    this.searchFetching = true\n    let temp = await CustomerServicesMenuApi.getAccountInfoUnbinding(this.citizenId)\n    console.log(temp)\n    if (temp.ok && temp.status === 200) {\n      this.searchFetching = false\n      this.accountInfo = temp.data.responseData\n      this.accountInfoError = null\n    } else {\n      this.searchFetching = false\n      // let problem = getGeneralApiProblem(response)\n      // this.accountInfoError = JSON.parse(temp.data.body)\n\n      this.accountInfoError = get(temp, 'data.developerMessage', 'Unknown Error')\n    }\n  }\n\n  @action getDataPartnerInfo = async (accountNumber) => {\n    this.apiFetching = true\n\n    let temp = await CustomerServicesMenuApi.getPartnerInfo({ main_account_no: accountNumber })\n    console.log(temp)\n    if (temp.ok && temp.status === 200 && !temp.problem) { //change to status when real api\n      this.apiFetching = false\n      this.unbindAccountInfo = temp.data.responseData\n      // this.unbindAccountInfo = temp.data.responseData // for dev\n    } else {\n      this.apiFetching = false\n      this.unbindAccountInfo = temp\n      this.accountInfoError = get(temp, 'data.developerMessage', 'Unknown Error')\n\n    }\n  }\n\n  @action submitAccountUnbiding = async () => {\n    // accountRefId: accountRefId,\n    //         partnerRefId: partnerRefId,\n    //         requestId: requestId,\n    //         transactionRefNo: transactionRefNo\n    this.apiFetching = true\n    let { account_reference, partner_reference } = this.accountSelected\n    let requestId = \"1234567890\"\n    let transactionRefNo = \"1234567890\"\n    console.log(\"DATA >> \", { account_reference, partner_reference, requestId, transactionRefNo })\n    let temp = await CustomerServicesMenuApi.unbindAccount({\n      accountRefId: account_reference,\n      partnerRefId: partner_reference,\n      requestId, transactionRefNo\n    })\n    console.log(temp)\n    if (temp.ok && temp.status === 200) {\n      this.apiFetching = false\n      // this.unlockOtpInfo = temp.data\n      // console.log(this.accountSelected)\n      // console.log(this.unbindAccountInfo)\n      this.unbindAccountInfo = this.unbindAccountInfo.filter(e => e.partner_reference != this.accountSelected.partner_reference)\n      this.accountSelected = null\n      // console.log(this.unbindAccountInfo)\n    } else {\n      this.apiFetching = false\n      // this.unlockOtpError = JSON.parse(temp.data.body)\n    }\n  }\n  @action setCitizenId = (id) => {\n    this.citizenId = { idCard: id }\n  }\n  @action setAccountId = (id) => {\n    this.accountId = id\n  }\n}\nexport default CustomerServicesMenuStore\n"]},"metadata":{},"sourceType":"module"}