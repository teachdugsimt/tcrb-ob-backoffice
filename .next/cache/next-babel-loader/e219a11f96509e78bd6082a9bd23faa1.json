{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department/manage-department.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport { orange, green, gold } from '@ant-design/colors';\nimport SimpleInput from '../../simple-input';\nimport SimpleModal from '../../simple-modal';\nimport { addKeyToDataSource, checkDefaultStatus } from '../../data-utility';\nimport { toJS } from 'mobx';\nvar sectionList = [];\nvar departmentName = null;\nvar selectSectionDeactivate = {};\nvar ManageDepartment = inject('userAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState(false),\n      showEditDepartment = _useState[0],\n      setShowEditDepartment = _useState[1];\n\n  var _useState2 = useState(''),\n      editingKey = _useState2[0],\n      setEditingKey = _useState2[1];\n\n  var _useState3 = useState(''),\n      dataSourceSection = _useState3[0],\n      setDataSourceSection = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(\"Submit\"),\n      textOk = _useState5[0],\n      setTextOk = _useState5[1];\n\n  var _useState6 = useState(\"Add Section\"),\n      textEdit = _useState6[0],\n      setTextEdit = _useState6[1];\n\n  var _useState7 = useState(\"Cancel\"),\n      textCancel = _useState7[0],\n      setTextCancel = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      modalString = _useState8[0],\n      setModalString = _useState8[1];\n\n  var _useState9 = useState(''),\n      modalType = _useState9[0],\n      setModalType = _useState9[1];\n\n  var _useState10 = useState(false),\n      visible = _useState10[0],\n      setVisible = _useState10[1];\n\n  var _useState11 = useState(false),\n      isDisableButtonAddSection = _useState11[0],\n      setIsDisableButtonAddSection = _useState11[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var userAccessManagementStore = props.userAccessManagementStore,\n      t = props.t;\n\n  var isEditing = function isEditing(record) {\n    return record.key === editingKey;\n  };\n\n  useEffect(function () {\n    addKeyToDataSource(userAccessManagementStore.departmentSelected.sections).then(function (result) {\n      setDataSourceSection(result);\n    });\n  }, []);\n  useEffect(function () {\n    if (userAccessManagementStore.responseDeleteSection == true) {\n      var newData = _toConsumableArray(dataSourceSection);\n\n      var sectionSelect = selectSectionDeactivate;\n      sectionSelect.request_status = \"PENDING\"; // sectionSelect.request_status = \"PENDING\"\n\n      console.log(toJS(newData));\n      console.log(toJS(sectionSelect));\n      var index = newData.findIndex(function (item) {\n        return sectionSelect.key === item.key;\n      });\n\n      if (index > -1) {\n        var item = newData[index];\n        newData.splice(index, 1, _objectSpread(_objectSpread({}, item), sectionSelect));\n        setDataSourceSection(newData);\n      } else {\n        newData.push(sectionSelect);\n        setDataSourceSection(newData);\n      }\n\n      userAccessManagementStore.responseDeleteSection = false; // setSelectSectionDeactivate({})\n    }\n  }, [userAccessManagementStore.responseDeleteSection]);\n\n  var addSectionToDepartment = function addSectionToDepartment() {\n    var newData = _toConsumableArray(dataSourceSection);\n\n    var sections = [];\n\n    for (var index = 0; index < sectionList.length; index++) {\n      sections.push({\n        name: sectionList[index],\n        request_status: 'PENDING'\n      });\n      newData.push(sections[index]);\n    } //waiting call api\n\n\n    addKeyToDataSource(newData).then(function (result) {\n      setDataSourceSection(result);\n    });\n    setVisible(false);\n  };\n\n  var edit = function edit(record) {\n    form.setFieldsValue(_objectSpread({\n      name: '',\n      status: record.status\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  var EditableCell = function EditableCell(_ref) {\n    var editing = _ref.editing,\n        dataIndex = _ref.dataIndex,\n        title = _ref.title,\n        inputType = _ref.inputType,\n        record = _ref.record,\n        index = _ref.index,\n        children = _ref.children,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: \"Please Input \".concat(title, \"!\")\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    })) : children);\n  };\n\n  var enableEditDepartment = function enableEditDepartment() {\n    setShowEditDepartment(true);\n  };\n\n  var cancelEditDepartment = function cancelEditDepartment() {\n    setShowEditDepartment(false);\n  };\n\n  var cancelAddNewSection = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n      var indexSection, newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // setDisabledButtonAddRow(false)\n              indexSection = dataSourceSection.findIndex(function (item) {\n                return key === item.key;\n              });\n              newData = _toConsumableArray(dataSourceSection);\n              newData.splice(indexSection, 1);\n              setDataSourceSection(newData);\n              setEditingKey('');\n              setIsDisableButtonAddSection(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function cancelAddNewSection(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deactivateSectionSelect = function deactivateSectionSelect(record) {\n    console.log(toJS(record));\n    userAccessManagementStore.submitDeleteSection(record);\n    /* userAccessManagementStore.responseDeleteSection = false\n    userAccessManagementStore.responseDeleteSection = true */\n\n    selectSectionDeactivate = record;\n  };\n\n  var goBackToDepartmentList = function goBackToDepartmentList() {\n    userAccessManagementStore.nextPageIsManageDepartment = false;\n  };\n\n  var SelectDepartment = function SelectDepartment() {\n    return __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, \"Section / Team\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      mode: \"tags\",\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return sectionList = value;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    })));\n  };\n\n  var openModalAddSection = function openModalAddSection() {\n    setTitle('Add Section to Department');\n    setModalType('confirm');\n    setModalString(__jsx(SelectDepartment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }));\n    setVisible(true);\n  };\n\n  var openModalSubmitEditDepartmentName = function openModalSubmitEditDepartmentName() {\n    setTitle('Confirm');\n    setModalType('confirm');\n    setModalString(__jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, \"Confirm to Change Name Department \", userAccessManagementStore.departmentSelected.name, \" to \", departmentName, \".\"), __jsx(\"p\", {\n      style: {\n        color: orange[6]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, \"Your changes will take effect after being approved.\")));\n    setVisible(true);\n  };\n\n  var submitEditSection = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(key) {\n      var row, newData, index, request, item;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return form.validateFields();\n\n            case 2:\n              row = _context2.sent;\n              row.status = 'INACTIVE';\n              row.request_status = 'PENDING'; //waiting confirm now use call new api\n\n              newData = _toConsumableArray(dataSourceSection);\n              index = newData.findIndex(function (item) {\n                return key === item.key;\n              });\n              request = {\n                newData: {\n                  name: row.name\n                },\n                currentData: newData[index]\n              };\n\n              if (index > -1) {\n                item = newData[index];\n                newData.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n                setDataSourceSection(newData);\n                setEditingKey('');\n              } else {\n                newData.push(row);\n                setDataSourceSection(newData);\n                setEditingKey('');\n              }\n\n              userAccessManagementStore.updateSection(request);\n              setIsDisableButtonAddSection(false); // setEditingKey('');\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function submitEditSection(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var addNewSection = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(key) {\n      var row, newData, index, item, request;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return form.validateFields();\n\n            case 2:\n              row = _context3.sent;\n              row.status = 'INACTIVE';\n              row.request_status = 'PENDING'; //waiting confirm now use call new api\n\n              newData = _toConsumableArray(dataSourceSection);\n              index = newData.findIndex(function (item) {\n                return key === item.key;\n              });\n\n              if (index > -1) {\n                item = newData[index];\n                newData.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n                setDataSourceSection(newData);\n                setEditingKey('');\n              } else {\n                newData.push(row);\n                setDataSourceSection(newData);\n                setEditingKey('');\n              }\n\n              request = {\n                name: row.name,\n                department_id: userAccessManagementStore.departmentSelected.id\n              }; // console.log(row)\n\n              userAccessManagementStore.submitAddNewSection(request);\n              setIsDisableButtonAddSection(false);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function addNewSection(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var cancelEditSection = function cancelEditSection() {\n    setIsDisableButtonAddSection(false);\n    setEditingKey('');\n  };\n\n  var renderActionSectionAndTeam = function renderActionSectionAndTeam(record) {\n    var editable = isEditing(record);\n\n    if (record.request_status === 'APPROVE') {\n      return editable ? __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Save?\",\n        onConfirm: function onConfirm() {\n          return submitEditSection(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      }, \"Save\")), __jsx(TcrbPopconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: function onConfirm() {\n          return cancelEditSection();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }\n      }, \"Cancel\"))) : __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        disabled: editingKey !== '',\n        onClick: function onClick() {\n          return edit(record);\n        },\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        onConfirm: function onConfirm() {\n          return deactivateSectionSelect(record);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 19\n        }\n      }, \"Deactivate\")));\n    } else if (record.request_status === 'PENDING') {\n      return null;\n    } else if (record.request_status === 'REJECT') {\n      return null;\n    } else {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 19\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Confirm to Add !!!\",\n        onConfirm: function onConfirm() {\n          addNewSection(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }\n      }, \"Confirm\")), __jsx(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 30\n        }\n      }), __jsx(TcrbPopconfirm, {\n        title: \"Confirm to Cancel !!!\",\n        onConfirm: function onConfirm() {\n          cancelAddNewSection(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }\n      }, \"Cancel\")));\n    }\n  };\n\n  var addRowProductList = function addRowProductList() {\n    var newSection = {\n      key: dataSourceSection.length + 1,\n      name: ''\n    };\n    setDataSourceSection([].concat(_toConsumableArray(dataSourceSection), [newSection]));\n    edit(newSection);\n    setIsDisableButtonAddSection(true); // setDisabledButtonAddRow(true)\n  };\n\n  var submitEditDepartmentName = function submitEditDepartmentName() {\n    console.log(departmentName);\n    setVisible(false);\n    var request = {\n      newData: {\n        name: departmentName\n      },\n      currentData: userAccessManagementStore.departmentSelected\n    };\n    userAccessManagementStore.updateDepartment(request);\n    setShowEditDepartment(false);\n  };\n\n  var columnSection = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkDefaultStatus(record.status, record.request_status);\n    }\n  }, {\n    title: 'Section Name',\n    dataIndex: 'name',\n    editable: true // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: function render(text, record) {\n      return renderActionSectionAndTeam(record);\n    }\n  }];\n  var mergedColumns = columnSection.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          inputType: 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        };\n      }\n    });\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      return goBackToDepartmentList();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }, \"Back\"))), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, \"Department\"), __jsx(Col, {\n    span: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }, \" \", showEditDepartment ? __jsx(SimpleInput, {\n    defaultValue: userAccessManagementStore.departmentSelected.name,\n    onChange: function onChange(value) {\n      return departmentName = value;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 15\n    }\n  }) : userAccessManagementStore.departmentSelected.name)), __jsx(Row, {\n    justify: \"center\",\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }, showEditDepartment ? __jsx(Space, {\n    size: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      cancelEditDepartment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      openModalSubmitEditDepartmentName();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 19\n    }\n  }, \"Submit\")) : __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      enableEditDepartment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 17\n    }\n  }, \"Edit\"))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      return addRowProductList();\n    },\n    disabled: isDisableButtonAddSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  }, \"Add Section\"))), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    flex: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, __jsx(Form, {\n    form: form,\n    component: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 15\n    }\n  }, __jsx(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: dataSourceSection,\n    columns: mergedColumns,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }\n  })))), __jsx(SimpleModal, {\n    title: title,\n    type: modalType,\n    onOk: function onOk() {\n      return submitEditDepartmentName();\n    },\n    onCancel: function onCancel() {\n      return setVisible(false);\n    },\n    textCancel: textCancel,\n    textOk: textOk,\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }));\n}, \"sS0MpMRW8JRFMtbd/faNttpft4s=\", false, function () {\n  return [Form.useForm];\n})));\nexport default ManageDepartment;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department/manage-department.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","Space","TcrbButton","TcrbPopconfirm","inject","observer","orange","green","gold","SimpleInput","SimpleModal","addKeyToDataSource","checkDefaultStatus","toJS","sectionList","departmentName","selectSectionDeactivate","ManageDepartment","props","showEditDepartment","setShowEditDepartment","editingKey","setEditingKey","dataSourceSection","setDataSourceSection","title","setTitle","textOk","setTextOk","textEdit","setTextEdit","textCancel","setTextCancel","modalString","setModalString","modalType","setModalType","visible","setVisible","isDisableButtonAddSection","setIsDisableButtonAddSection","useForm","form","userAccessManagementStore","t","isEditing","record","key","departmentSelected","sections","then","result","responseDeleteSection","newData","sectionSelect","request_status","console","log","index","findIndex","item","splice","push","addSectionToDepartment","length","name","edit","setFieldsValue","status","EditableCell","editing","dataIndex","inputType","children","restProps","margin","required","message","enableEditDepartment","cancelEditDepartment","cancelAddNewSection","indexSection","deactivateSectionSelect","submitDeleteSection","goBackToDepartmentList","nextPageIsManageDepartment","SelectDepartment","padding","width","value","openModalAddSection","openModalSubmitEditDepartmentName","textAlign","color","submitEditSection","validateFields","row","request","currentData","updateSection","addNewSection","department_id","id","submitAddNewSection","cancelEditSection","renderActionSectionAndTeam","editable","marginRight","addRowProductList","newSection","submitEditDepartmentName","updateDepartment","columnSection","render","text","mergedColumns","map","col","onCell","marginTop","body","cell"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer, Space } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\nimport { orange, green, gold } from '@ant-design/colors';\n\nimport SimpleInput from '../../simple-input'\nimport SimpleModal from '../../simple-modal'\nimport { addKeyToDataSource, checkDefaultStatus } from '../../data-utility';\nimport { toJS } from 'mobx';\n\nlet sectionList = []\nlet departmentName = null\nlet selectSectionDeactivate = {}\n\nconst ManageDepartment =\n  inject('userAccessManagementStore')\n    (observer((props) => {\n      const [showEditDepartment, setShowEditDepartment] = useState(false)\n      const [editingKey, setEditingKey] = useState('')\n      const [dataSourceSection, setDataSourceSection] = useState('')\n      const [title, setTitle] = useState(\"\")\n      const [textOk, setTextOk] = useState(\"Submit\")\n      const [textEdit, setTextEdit] = useState(\"Add Section\")\n      const [textCancel, setTextCancel] = useState(\"Cancel\")\n      const [modalString, setModalString] = useState(\"\")\n      const [modalType, setModalType] = useState('')\n      const [visible, setVisible] = useState(false)\n      const [isDisableButtonAddSection, setIsDisableButtonAddSection] = useState(false)\n      const [form] = Form.useForm();\n\n      const { userAccessManagementStore, t } = props\n      const isEditing = record => record.key === editingKey\n\n      useEffect(() => {\n        addKeyToDataSource(userAccessManagementStore.departmentSelected.sections).then(result => {\n          setDataSourceSection(result)\n        })\n      }, [])\n\n      useEffect(() => {\n        if (userAccessManagementStore.responseDeleteSection == true) {\n          const newData = [...dataSourceSection]\n          const sectionSelect = selectSectionDeactivate\n          sectionSelect.request_status = \"PENDING\"\n          // sectionSelect.request_status = \"PENDING\"\n          console.log(toJS(newData))\n          console.log(toJS(sectionSelect))\n          const index = newData.findIndex(item => sectionSelect.key === item.key);\n          if (index > -1) {\n            const item = newData[index];\n            newData.splice(index, 1, { ...item, ...sectionSelect });\n            setDataSourceSection(newData);\n          } else {\n            newData.push(sectionSelect);\n            setDataSourceSection(newData);\n          }\n          userAccessManagementStore.responseDeleteSection = false\n\n          // setSelectSectionDeactivate({})\n        }\n      }, [userAccessManagementStore.responseDeleteSection])\n\n      const addSectionToDepartment = () => {\n        const newData = [...dataSourceSection];\n\n        let sections = []\n        for (let index = 0; index < sectionList.length; index++) {\n          sections.push({\n            name: sectionList[index],\n            request_status: 'PENDING'\n\n          })\n          newData.push(sections[index]);\n\n        }\n        //waiting call api\n        addKeyToDataSource(newData).then(result => {\n          setDataSourceSection(result)\n        })\n        setVisible(false)\n      }\n\n      const edit = record => {\n        form.setFieldsValue({\n          name: '',\n          status: record.status,\n          ...record,\n        });\n        setEditingKey(record.key);\n      }\n\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        return (\n          <td {...restProps}>\n            {editing ? (\n              <Form.Item\n                name={dataIndex}\n                style={{\n                  margin: 0\n                }}\n                rules={[\n                  {\n                    required: true,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        )\n      }\n\n      const enableEditDepartment = () => {\n        setShowEditDepartment(true)\n      }\n\n      const cancelEditDepartment = () => {\n        setShowEditDepartment(false)\n      }\n\n      const cancelAddNewSection = async (key) => {\n        // setDisabledButtonAddRow(false)\n        let indexSection = dataSourceSection.findIndex(item => key === item.key)\n        const newData = [...dataSourceSection]\n        newData.splice(indexSection, 1)\n        setDataSourceSection(newData);\n        setEditingKey('');\n        setIsDisableButtonAddSection(false)\n      }\n\n      const deactivateSectionSelect = (record) => {\n        console.log(toJS(record))\n        userAccessManagementStore.submitDeleteSection(record)\n        /* userAccessManagementStore.responseDeleteSection = false\n        userAccessManagementStore.responseDeleteSection = true */\n        selectSectionDeactivate = record\n\n      }\n\n      const goBackToDepartmentList = () => {\n        userAccessManagementStore.nextPageIsManageDepartment = false\n      }\n\n      const SelectDepartment = () => {\n        return (\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Section / Team</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                mode=\"tags\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => sectionList = value}\n              >\n                {/* {children} */}\n              </Select>\n            </Col>\n          </Row>\n        )\n      }\n\n      const openModalAddSection = () => {\n        setTitle('Add Section to Department')\n        setModalType('confirm')\n        setModalString(\n          <SelectDepartment />\n        )\n        setVisible(true)\n      }\n\n      const openModalSubmitEditDepartmentName = () => {\n        setTitle('Confirm')\n        setModalType('confirm')\n        setModalString(\n          <div style={{ textAlign: \"center\" }}>\n            <p>Confirm to Change Name Department {userAccessManagementStore.departmentSelected.name} to {departmentName}.</p>\n            <p style={{ color: orange[6] }}>Your changes will take effect after being approved.</p>\n          </div>\n        )\n        setVisible(true)\n      }\n\n      const submitEditSection = async (key) => {\n        // Call api to update record status\n        const row = await form.validateFields();\n        row.status = 'INACTIVE'\n        row.request_status = 'PENDING' //waiting confirm now use call new api\n\n        const newData = [...dataSourceSection];\n        const index = newData.findIndex(item => key === item.key);\n        let request = {\n          newData: {\n            name: row.name\n          },\n          currentData: newData[index]\n        }\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, { ...item, ...row });\n          setDataSourceSection(newData);\n          setEditingKey('');\n        } else {\n          newData.push(row);\n          setDataSourceSection(newData);\n          setEditingKey('');\n        }\n\n        userAccessManagementStore.updateSection(request)\n        setIsDisableButtonAddSection(false)\n        // setEditingKey('');\n      }\n\n      const addNewSection = async (key) => {\n        const row = await form.validateFields();\n        row.status = 'INACTIVE'\n        row.request_status = 'PENDING' //waiting confirm now use call new api\n        const newData = [...dataSourceSection]\n        const index = newData.findIndex(item => key === item.key);\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, { ...item, ...row });\n          setDataSourceSection(newData);\n          setEditingKey('');\n        } else {\n          newData.push(row);\n          setDataSourceSection(newData);\n          setEditingKey('');\n        }\n        let request = {\n          name: row.name,\n          department_id: userAccessManagementStore.departmentSelected.id\n        }\n\n        // console.log(row)\n        userAccessManagementStore.submitAddNewSection(request)\n        setIsDisableButtonAddSection(false)\n      }\n\n      const cancelEditSection = () => {\n        setIsDisableButtonAddSection(false)\n        setEditingKey('')\n      }\n      const renderActionSectionAndTeam = (record) => {\n        const editable = isEditing(record);\n        if (record.request_status === 'APPROVE') {\n          return editable ? (\n            <span>\n              <TcrbPopconfirm title=\"Sure to Save?\" onConfirm={() => submitEditSection(record.key)}>\n                <a style={{ marginRight: 8, }}>\n                  Save\n                </a>\n              </TcrbPopconfirm>\n              <TcrbPopconfirm title=\"Sure to cancel?\" onConfirm={() => cancelEditSection()}>\n                <a style={{ color: '#3e3e3e' }}>Cancel</a>\n              </TcrbPopconfirm>\n            </span>\n          ) : (\n              <div style={{ textAlign: \"center\" }}>\n                <a disabled={editingKey !== ''} onClick={() => edit(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n                  Edit\n                </a>\n                <TcrbPopconfirm title=\"Sure to Deactivate?\" onConfirm={() => deactivateSectionSelect(record)}>\n                  <a style={{ color: '#FBA928' }}>Deactivate</a>\n                </TcrbPopconfirm>\n              </div>\n            );\n        } else if (record.request_status === 'PENDING') {\n          return null\n        } else if (record.request_status === 'REJECT') {\n          return null\n        }\n        else {\n          return (<div>\n            <TcrbPopconfirm title={\"Confirm to Add !!!\"} onConfirm={() => { addNewSection(record.key) }} >\n              <a>Confirm</a>\n            </TcrbPopconfirm><br />\n            <TcrbPopconfirm title={\"Confirm to Cancel !!!\"} onConfirm={() => { cancelAddNewSection(record.key) }} >\n              <a>Cancel</a>\n            </TcrbPopconfirm>\n          </div>)\n        }\n      }\n\n      const addRowProductList = () => {\n        let newSection = {\n          key: dataSourceSection.length + 1,\n          name: ''\n        }\n        setDataSourceSection([...dataSourceSection, newSection])\n        edit(newSection)\n        setIsDisableButtonAddSection(true)\n        // setDisabledButtonAddRow(true)\n      }\n\n      const submitEditDepartmentName = () => {\n        console.log(departmentName)\n        setVisible(false)\n        let request = {\n          newData: {\n            name: departmentName\n          },\n          currentData: userAccessManagementStore.departmentSelected\n        }\n        userAccessManagementStore.updateDepartment(request)\n        setShowEditDepartment(false)\n      }\n\n      const columnSection = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          render: (text, record) => checkDefaultStatus(record.status, record.request_status)\n        },\n        {\n          title: 'Section Name',\n          dataIndex: 'name',\n          editable: true,\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          width: '10%',\n          render: (text, record) => renderActionSectionAndTeam(record)\n        }\n      ]\n\n      const mergedColumns = columnSection.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: 'text',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"default\" onClick={() => goBackToDepartmentList()}>Back</TcrbButton>\n            </Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={5}>Department</Col>\n            <Col span={7}> {showEditDepartment ?\n              <SimpleInput defaultValue={userAccessManagementStore.departmentSelected.name} onChange={(value) => departmentName = value} /> : userAccessManagementStore.departmentSelected.name\n            }\n            </Col>\n          </Row>\n\n          <Row justify=\"center\" style={{ marginTop: 8 }}>\n            <Col span={4}>\n              {showEditDepartment ?\n                <Space size={8}>\n                  <TcrbButton className=\"default\" onClick={() => { cancelEditDepartment() }} >Cancel</TcrbButton>\n                  <TcrbButton className=\"primary\" onClick={() => { openModalSubmitEditDepartmentName() }} >Submit</TcrbButton>\n                </Space>\n                :\n                <TcrbButton className=\"primary\" onClick={() => { enableEditDepartment() }} >Edit</TcrbButton>}\n            </Col>\n          </Row>\n          <Divider />\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"primary\" onClick={() => addRowProductList()} disabled={isDisableButtonAddSection}>Add Section</TcrbButton>\n            </Col>\n          </Row>\n          <Row>\n            <Col flex={100}>\n              <Form form={form} component={false}>\n                <Table\n                  components={{\n                    body: {\n                      cell: EditableCell,\n                    },\n                  }}\n                  bordered\n                  dataSource={dataSourceSection}\n                  columns={mergedColumns}\n                  size=\"small\"\n                />\n              </Form>\n            </Col>\n          </Row>\n          <SimpleModal\n            title={title}\n            type={modalType}\n            onOk={() => submitEditDepartmentName()}\n            onCancel={() => setVisible(false)}\n            textCancel={textCancel}\n            textOk={textOk}\n            width={600}\n            modalString={modalString}\n            visible={visible}\n          />\n\n        </div>\n      )\n    }))\n\nexport default ManageDepartment\n"]},"metadata":{},"sourceType":"module"}