{"ast":null,"code":"var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _descriptor34, _descriptor35, _descriptor36, _descriptor37, _descriptor38, _descriptor39, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n// src/stores/counter-store.tsx\nimport { observable, action, computed, toJS } from 'mobx';\nimport { BusinessParameterSetupApi } from '../services';\nimport { create, persist } from 'mobx-persist';\nlet BusinessParameterSetup = (_class = (_temp = class BusinessParameterSetup {\n  constructor() {\n    _initializerDefineProperty(this, \"editOtpMaximumRetry\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"editOtpExpirationPeriod\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"responseGetOtpValue\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"fetchingGetOtp\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"errorGetOtp\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"responseUpdateOtp\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"fetchingUpdateOtp\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"errorUpdateOtp\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"responseGetPendingApproveList\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"requestGetPendingApproveList\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"errorGetPendingApproveList\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"responseProcessPendingList\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"requestProcessPendingList\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"errorProcessPendingList\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"pendingApprovals\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"fetchingApi\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"productLimit\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"productLimitDetail\", _descriptor18, this);\n\n    _initializerDefineProperty(this, \"arrayProductLimit\", _descriptor19, this);\n\n    _initializerDefineProperty(this, \"channelPartnerList\", _descriptor20, this);\n\n    _initializerDefineProperty(this, \"productList\", _descriptor21, this);\n\n    _initializerDefineProperty(this, \"productSelect\", _descriptor22, this);\n\n    _initializerDefineProperty(this, \"persist_value\", _descriptor23, this);\n\n    _initializerDefineProperty(this, \"processPendingListApprove\", _descriptor24, this);\n\n    _initializerDefineProperty(this, \"getPendingApprove\", _descriptor25, this);\n\n    _initializerDefineProperty(this, \"setPersistValue\", _descriptor26, this);\n\n    _initializerDefineProperty(this, \"closeExpire\", _descriptor27, this);\n\n    _initializerDefineProperty(this, \"closeMaximum\", _descriptor28, this);\n\n    _initializerDefineProperty(this, \"getOTPdata\", _descriptor29, this);\n\n    _initializerDefineProperty(this, \"updateOTPdata\", _descriptor30, this);\n\n    _initializerDefineProperty(this, \"setCitizenId\", _descriptor31, this);\n\n    _initializerDefineProperty(this, \"setAccountId\", _descriptor32, this);\n\n    _initializerDefineProperty(this, \"getDataProductLimit\", _descriptor33, this);\n\n    _initializerDefineProperty(this, \"getDataDetailProductLimit\", _descriptor34, this);\n\n    _initializerDefineProperty(this, \"getDataChannelPartnerList\", _descriptor35, this);\n\n    _initializerDefineProperty(this, \"getDataProductList\", _descriptor36, this);\n\n    _initializerDefineProperty(this, \"deleteProductLimit\", _descriptor37, this);\n\n    _initializerDefineProperty(this, \"addNewProductLimit\", _descriptor38, this);\n\n    _initializerDefineProperty(this, \"addSpecificLimit\", _descriptor39, this);\n  }\n\n  selectProductToDelete(productSelected) {\n    console.log(toJS(productSelected)); // [{\n    //   id: 1, key: 1, ticket: \"PAR0000001\", requestType: \"OTP Max Retrying\", requestDescription: \"Change from 3 to 5\", requestId: \"T630213\",\n    //   requestDate: \"21-May-2020\", action: null\n    // }]\n\n    productSelected.ticket = '00000' + this.pendingApprovals.length + 1;\n    productSelected.requestDescription = productSelected.ProductDescription;\n    this.pendingApprovals.push(productSelected);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"editOtpMaximumRetry\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"editOtpExpirationPeriod\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"responseGetOtpValue\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"fetchingGetOtp\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"errorGetOtp\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"responseUpdateOtp\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"fetchingUpdateOtp\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"errorUpdateOtp\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"responseGetPendingApproveList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"requestGetPendingApproveList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"errorGetPendingApproveList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"responseProcessPendingList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"requestProcessPendingList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"errorProcessPendingList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"pendingApprovals\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"fetchingApi\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"productLimit\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"productLimitDetail\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"arrayProductLimit\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"channelPartnerList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, \"productList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, \"productSelect\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor23 = _applyDecoratedDescriptor(_class.prototype, \"persist_value\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor24 = _applyDecoratedDescriptor(_class.prototype, \"processPendingListApprove\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async params => {\n      this.requestProcessPendingList = true;\n      let tmp = await BusinessParameterSetupApi.processPendingList(params);\n      console.log(\"Response process Pending Approve APISAUCE : \", tmp);\n\n      if (tmp.ok) {\n        let raw_Data = toJS(tmp.data.responseData);\n        this.requestProcessPendingList = false;\n        this.errorProcessPendingList = null;\n        this.responseProcessPendingList = raw_Data;\n      } else {\n        this.requestProcessPendingList = false;\n        this.responseProcessPendingList = null;\n        this.errorProcessPendingList = tmp.problem;\n      }\n    };\n  }\n}), _descriptor25 = _applyDecoratedDescriptor(_class.prototype, \"getPendingApprove\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async params => {\n      this.requestGetPendingApproveList = true;\n      let tmp = await BusinessParameterSetupApi.getPendingApproveList(params);\n      console.log(\"Response get Pending Approve APISAUCE : \", tmp);\n\n      if (tmp.ok == true) {\n        let raw_Data = toJS(tmp.data.responseData);\n        this.requestGetPendingApproveList = false;\n        this.errorGetPendingApproveList = null;\n        this.responseGetPendingApproveList = raw_Data;\n      } else {\n        this.requestGetPendingApproveList = false;\n        this.responseGetPendingApproveList = null;\n        this.errorGetPendingApproveList = tmp.problem;\n      }\n    };\n  }\n}), _descriptor26 = _applyDecoratedDescriptor(_class.prototype, \"setPersistValue\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return val => {\n      this.persist_value = val;\n    };\n  }\n}), _descriptor27 = _applyDecoratedDescriptor(_class.prototype, \"closeExpire\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return val => {\n      this.editOtpExpirationPeriod = val;\n    };\n  }\n}), _descriptor28 = _applyDecoratedDescriptor(_class.prototype, \"closeMaximum\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return val => {\n      this.editOtpMaximumRetry = val;\n    };\n  }\n}), _descriptor29 = _applyDecoratedDescriptor(_class.prototype, \"getOTPdata\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async params => {\n      this.fetchingGetOtp = true;\n      let tmp = await BusinessParameterSetupApi.getOtpValue(params);\n      console.log(\"Response get otp APISAUCE : \", tmp);\n\n      if (tmp.ok == true) {\n        let raw_Data = toJS(tmp.data.responseData.paramStoreData);\n        this.fetchingGetOtp = false;\n        this.errorGetOtp = null;\n        this.responseGetOtpValue = raw_Data;\n      } else {\n        this.fetchingGetOtp = false;\n        this.responseGetOtpValue = null;\n        this.errorGetOtp = tmp.problem;\n      }\n    };\n  }\n}), _descriptor30 = _applyDecoratedDescriptor(_class.prototype, \"updateOTPdata\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async params => {\n      this.fetchingUpdateOtp = true;\n      let response = await BusinessParameterSetupApi.setOtpValue(params);\n\n      if (response.ok) {\n        console.log(\"Update OTP Success :: \", response);\n        console.log(\"DATA >>\", response.data);\n        this.responseUpdateOtp = response.data;\n        this.fetchingUpdateOtp = false;\n        this.errorUpdateOtp = null;\n      } else {\n        console.log(\"Update OTP FAIL :: \", response);\n        this.fetchingUpdateOtp = false;\n        this.responseUpdateOtp = response.data;\n        this.errorUpdateOtp = response.problem ? response.problem : \"Client Error\";\n      }\n    };\n  }\n}), _descriptor31 = _applyDecoratedDescriptor(_class.prototype, \"setCitizenId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return id => {\n      this.citizenId = {\n        idCard: id\n      };\n    };\n  }\n}), _descriptor32 = _applyDecoratedDescriptor(_class.prototype, \"setAccountId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return id => {\n      this.accountId = id;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"selectProductToDelete\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"selectProductToDelete\"), _class.prototype), _descriptor33 = _applyDecoratedDescriptor(_class.prototype, \"getDataProductLimit\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      this.fetchingUpdateOtp = true;\n      let response = await BusinessParameterSetupApi.getProductLimit({\n        partner_code: ''\n      });\n      console.log(response);\n\n      if (response.ok && response.status == 200) {\n        this.productLimit = response.data.responseData;\n      } else {}\n    };\n  }\n}), _descriptor34 = _applyDecoratedDescriptor(_class.prototype, \"getDataDetailProductLimit\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async params => {\n      this.fetchingUpdateOtp = true;\n      let response = await BusinessParameterSetupApi.getDetailProductLimit(params);\n      console.log(response);\n\n      if (response.ok && response.status == 200) {\n        this.productLimitDetail = response.data.responseData;\n      } else {}\n    };\n  }\n}), _descriptor35 = _applyDecoratedDescriptor(_class.prototype, \"getDataChannelPartnerList\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      let response = await BusinessParameterSetupApi.getChannelPartnerList({\n        filter: {\n          attributes: [\"partner_code\", \"partner_abbreviation\"]\n        }\n      });\n\n      if (response.ok && response.status == 200) {\n        this.channelPartnerList = response.data.responseData;\n      } else {}\n    };\n  }\n}), _descriptor36 = _applyDecoratedDescriptor(_class.prototype, \"getDataProductList\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      let response = await BusinessParameterSetupApi.getProductList({\n        filter: {}\n      });\n\n      if (response.ok && response.status == 200) {\n        this.productList = response.data.responseData;\n      } else {}\n    };\n  }\n}), _descriptor37 = _applyDecoratedDescriptor(_class.prototype, \"deleteProductLimit\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async params => {\n      let response = await BusinessParameterSetupApi.deleteProductLimit({\n        action: \"Delete\",\n        maker_id: \"\",\n        currentData: params,\n        newData: {}\n      });\n      console.log(response);\n    };\n  }\n}), _descriptor38 = _applyDecoratedDescriptor(_class.prototype, \"addNewProductLimit\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async params => {\n      let response = await BusinessParameterSetupApi.addNewProductLimit({\n        action: \"Add\",\n        maker_id: \"\",\n        currentData: {},\n        newData: params\n      });\n      console.log(response);\n    };\n  }\n}), _descriptor39 = _applyDecoratedDescriptor(_class.prototype, \"addSpecificLimit\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async params => {\n      let response = await BusinessParameterSetupApi.submitSpecificLimit({\n        action: \"Add\",\n        maker_id: \"\",\n        currentData: {},\n        newData: params\n      });\n      console.log(response);\n    };\n  }\n})), _class);\nexport default BusinessParameterSetup;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/business-parameters-setup-store.js"],"names":["observable","action","computed","toJS","BusinessParameterSetupApi","create","persist","BusinessParameterSetup","selectProductToDelete","productSelected","console","log","ticket","pendingApprovals","length","requestDescription","ProductDescription","push","params","requestProcessPendingList","tmp","processPendingList","ok","raw_Data","data","responseData","errorProcessPendingList","responseProcessPendingList","problem","requestGetPendingApproveList","getPendingApproveList","errorGetPendingApproveList","responseGetPendingApproveList","val","persist_value","editOtpExpirationPeriod","editOtpMaximumRetry","fetchingGetOtp","getOtpValue","paramStoreData","errorGetOtp","responseGetOtpValue","fetchingUpdateOtp","response","setOtpValue","responseUpdateOtp","errorUpdateOtp","id","citizenId","idCard","accountId","getProductLimit","partner_code","status","productLimit","getDetailProductLimit","productLimitDetail","getChannelPartnerList","filter","attributes","channelPartnerList","getProductList","productList","deleteProductLimit","maker_id","currentData","newData","addNewProductLimit","submitSpecificLimit"],"mappings":"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","sourcesContent":["// src/stores/counter-store.tsx\nimport { observable, action, computed, toJS } from 'mobx'\nimport { BusinessParameterSetupApi } from '../services'\nimport { create, persist } from 'mobx-persist'\n\nclass BusinessParameterSetup {\n  @observable editOtpMaximumRetry = null\n  @observable editOtpExpirationPeriod = null\n\n  @observable responseGetOtpValue = null\n  @observable fetchingGetOtp = null\n  @observable errorGetOtp = null\n\n  @observable responseUpdateOtp = null\n  @observable fetchingUpdateOtp = null\n  @observable errorUpdateOtp = null\n\n  @observable responseGetPendingApproveList = null\n  @observable requestGetPendingApproveList = null\n  @observable errorGetPendingApproveList = null\n\n  @observable responseProcessPendingList = null\n  @observable requestProcessPendingList = null\n  @observable errorProcessPendingList = null\n\n  @observable pendingApprovals = []\n  @observable fetchingApi = false\n  @observable productLimit = []\n  @observable productLimitDetail = null\n  @observable arrayProductLimit = []\n  @observable channelPartnerList = []\n  @observable productList = []\n  @observable productSelect = null\n\n  @persist @observable persist_value = null\n\n  @action processPendingListApprove = async (params) => {\n    this.requestProcessPendingList = true\n    let tmp = await BusinessParameterSetupApi.processPendingList(params)\n    console.log(\"Response process Pending Approve APISAUCE : \", tmp)\n    if (tmp.ok) {\n      let raw_Data = toJS(tmp.data.responseData)\n      this.requestProcessPendingList = false\n      this.errorProcessPendingList = null\n      this.responseProcessPendingList = raw_Data\n    } else {\n      this.requestProcessPendingList = false\n      this.responseProcessPendingList = null\n      this.errorProcessPendingList = tmp.problem\n    }\n  }\n\n  @action getPendingApprove = async (params) => {\n    this.requestGetPendingApproveList = true\n    let tmp = await BusinessParameterSetupApi.getPendingApproveList(params)\n    console.log(\"Response get Pending Approve APISAUCE : \", tmp)\n    if (tmp.ok == true) {\n      let raw_Data = toJS(tmp.data.responseData)\n      this.requestGetPendingApproveList = false\n      this.errorGetPendingApproveList = null\n      this.responseGetPendingApproveList = raw_Data\n    } else {\n      this.requestGetPendingApproveList = false\n      this.responseGetPendingApproveList = null\n      this.errorGetPendingApproveList = tmp.problem\n    }\n  }\n\n  @action setPersistValue = (val) => {\n    this.persist_value = val\n  }\n\n  @action closeExpire = (val) => {\n    this.editOtpExpirationPeriod = val\n  }\n\n  @action closeMaximum = (val) => {\n    this.editOtpMaximumRetry = val\n  }\n\n  @action getOTPdata = async (params) => {\n    this.fetchingGetOtp = true\n    let tmp = await BusinessParameterSetupApi.getOtpValue(params)\n    console.log(\"Response get otp APISAUCE : \", tmp)\n    if (tmp.ok == true) {\n      let raw_Data = toJS(tmp.data.responseData.paramStoreData)\n      this.fetchingGetOtp = false\n      this.errorGetOtp = null\n      this.responseGetOtpValue = raw_Data\n    } else {\n      this.fetchingGetOtp = false\n      this.responseGetOtpValue = null\n      this.errorGetOtp = tmp.problem\n    }\n  }\n\n  @action\n  updateOTPdata = async (params) => {\n    this.fetchingUpdateOtp = true\n    let response = await BusinessParameterSetupApi.setOtpValue(params)\n    if (response.ok) {\n      console.log(\"Update OTP Success :: \", response)\n      console.log(\"DATA >>\", response.data)\n      this.responseUpdateOtp = response.data\n      this.fetchingUpdateOtp = false\n      this.errorUpdateOtp = null\n    } else {\n      console.log(\"Update OTP FAIL :: \", response)\n      this.fetchingUpdateOtp = false\n      this.responseUpdateOtp = response.data\n      this.errorUpdateOtp = response.problem ? response.problem : \"Client Error\"\n    }\n  }\n\n  @action setCitizenId = (id) => {\n    this.citizenId = { idCard: id }\n  }\n  @action setAccountId = (id) => {\n    this.accountId = id\n  }\n\n  @action\n  selectProductToDelete(productSelected) {\n    console.log(toJS(productSelected))\n    // [{\n    //   id: 1, key: 1, ticket: \"PAR0000001\", requestType: \"OTP Max Retrying\", requestDescription: \"Change from 3 to 5\", requestId: \"T630213\",\n    //   requestDate: \"21-May-2020\", action: null\n    // }]\n    productSelected.ticket = '00000' + this.pendingApprovals.length + 1\n    productSelected.requestDescription = productSelected.ProductDescription\n    this.pendingApprovals.push(productSelected)\n  }\n\n  @action\n  getDataProductLimit = async () => {\n    this.fetchingUpdateOtp = true\n    let response = await BusinessParameterSetupApi.getProductLimit({ partner_code: '' })\n    console.log(response)\n    if (response.ok && response.status == 200) {\n      this.productLimit = response.data.responseData\n    } else {\n\n    }\n  }\n\n  @action\n  getDataDetailProductLimit = async (params) => {\n    this.fetchingUpdateOtp = true\n    let response = await BusinessParameterSetupApi.getDetailProductLimit(params)\n    console.log(response)\n    if (response.ok && response.status == 200) {\n      this.productLimitDetail = response.data.responseData\n    } else {\n\n    }\n  }\n\n  @action\n  getDataChannelPartnerList = async () => {\n    let response = await BusinessParameterSetupApi.getChannelPartnerList({ filter: { attributes: [\"partner_code\", \"partner_abbreviation\"] } })\n    if (response.ok && response.status == 200) {\n      this.channelPartnerList = response.data.responseData\n    } else {\n\n    }\n  }\n\n  @action getDataProductList = async () => {\n    let response = await BusinessParameterSetupApi.getProductList({ filter: {} })\n    if (response.ok && response.status == 200) {\n      this.productList = response.data.responseData\n    } else {\n\n    }\n  }\n\n  @action\n  deleteProductLimit = async (params) => {\n    let response = await BusinessParameterSetupApi.deleteProductLimit({ action: \"Delete\", maker_id: \"\", currentData: params, newData: {} })\n    console.log(response)\n  }\n\n  @action\n  addNewProductLimit = async (params) => {\n    let response = await BusinessParameterSetupApi.addNewProductLimit({ action: \"Add\", maker_id: \"\", currentData: {}, newData: params })\n    console.log(response)\n  }\n  @action addSpecificLimit = async (params) => {\n    let response = await BusinessParameterSetupApi.submitSpecificLimit({ action: \"Add\", maker_id: \"\", currentData: {}, newData: params })\n    console.log(response)\n  }\n}\nexport default BusinessParameterSetup\n"]},"metadata":{},"sourceType":"module"}