{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/pages/_error.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport ErrorPage from 'next/error';\nimport { withTranslation } from '../i18n';\n\nconst withError = Component => class extends React.Component {\n  static async getInitialProps(ctx) {\n    const props = await Component.getInitialProps(ctx);\n    const {\n      statusCode\n    } = ctx.res;\n    return _objectSpread({\n      statusCode\n    }, props);\n  }\n\n  render() {\n    const {\n      statusCode\n    } = this.props;\n\n    if (statusCode && statusCode !== 200) {\n      return __jsx(ErrorPage, {\n        statusCode: statusCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      });\n    } else if (statusCode && statusCode == 404) {\n      return __jsx(ErrorPage, {\n        statusCode: statusCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      });\n    } // return <Component {...this.props} />\n\n  }\n\n};\n\nwithError.getInitialProps = async () => ({\n  namespacesRequired: []\n});\n\nexport default withTranslation('common')(withError); // import withError from './withError'\n// class Example extends React.Component {\n//     static async getInitialProps(ctx) {\n//         if (error) { // define your app error logic here\n//           ctx.res.statusCode = 404;\n//         }\n//         return { /* ... */ }\n//     }\n//     render() {\n//         /* ... */\n//     }\n// }\n// export default withError(Example);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/pages/_error.js"],"names":["React","ErrorPage","withTranslation","withError","Component","getInitialProps","ctx","props","statusCode","res","render","namespacesRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,SAAhC;;AAEA,MAAMC,SAAS,GAAIC,SAAD,IAAe,cAAcJ,KAAK,CAACI,SAApB,CAA8B;AAC7D,eAAaC,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,KAAK,GAAG,MAAMH,SAAS,CAACC,eAAV,CAA0BC,GAA1B,CAApB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAiBF,GAAG,CAACG,GAA3B;AACA;AAASD,MAAAA;AAAT,OAAwBD,KAAxB;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;;AACA,QAAIC,UAAU,IAAIA,UAAU,KAAK,GAAjC,EAAsC;AACpC,aAAO,MAAC,SAAD;AAAW,QAAA,UAAU,EAAEA,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAGK,IAAIA,UAAU,IAAIA,UAAU,IAAI,GAAhC,EAAqC;AACxC,aAAO,MAAC,SAAD;AAAW,QAAA,UAAU,EAAEA,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAPM,CAQP;;AACD;;AAhB4D,CAA/D;;AAmBAL,SAAS,CAACE,eAAV,GAA4B,aAAa;AACvCM,EAAAA,kBAAkB,EAAE;AADmB,CAAb,CAA5B;;AAIA,eAAeT,eAAe,CAAC,QAAD,CAAf,CAA0BC,SAA1B,CAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react'\nimport ErrorPage from 'next/error'\nimport { withTranslation } from '../i18n'\n\nconst withError = (Component) => class extends React.Component {\n  static async getInitialProps(ctx) {\n    const props = await Component.getInitialProps(ctx)\n    const { statusCode } = ctx.res\n    return { statusCode, ...props }\n  }\n\n  render() {\n    const { statusCode } = this.props\n    if (statusCode && statusCode !== 200) {\n      return <ErrorPage statusCode={statusCode} />\n    }\n    else if (statusCode && statusCode == 404) {\n      return <ErrorPage statusCode={statusCode} />\n    }\n    // return <Component {...this.props} />\n  }\n}\n\nwithError.getInitialProps = async () => ({\n  namespacesRequired: [],\n})\n\nexport default withTranslation('common')(withError)\n\n// import withError from './withError'\n\n// class Example extends React.Component {\n//     static async getInitialProps(ctx) {\n//         if (error) { // define your app error logic here\n//           ctx.res.statusCode = 404;\n//         }\n\n//         return { /* ... */ }\n//     }\n\n//     render() {\n//         /* ... */\n//     }\n// }\n\n// export default withError(Example);\n"]},"metadata":{},"sourceType":"module"}