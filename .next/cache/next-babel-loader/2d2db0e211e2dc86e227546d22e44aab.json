{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport SimpleModal from '../simple-modal';\nimport SimpleInput from '../simple-input';\nimport { addKeyToDataSource } from '../data-utility';\nvar Option = Select.Option;\nvar Department = inject('UserAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var UserAccessManagementStore = props.UserAccessManagementStore,\n      t = props.t;\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      settitle = _useState[1];\n\n  var _useState2 = useState(\"Ok\"),\n      textOk = _useState2[0],\n      settextOk = _useState2[1];\n\n  var _useState3 = useState(\"Cancel\"),\n      textCancel = _useState3[0],\n      settextCancel = _useState3[1];\n\n  var _useState4 = useState(\"initialState\"),\n      modalString = _useState4[0],\n      setmodalString = _useState4[1];\n\n  var _useState5 = useState(''),\n      modalType = _useState5[0],\n      setModalType = _useState5[1];\n\n  var _useState6 = useState(false),\n      visible = _useState6[0],\n      setvisible = _useState6[1];\n\n  var _useState7 = useState([]),\n      mockDataDepartment = _useState7[0],\n      setMockDataDepartment = _useState7[1];\n\n  var _useState8 = useState(false),\n      editSection = _useState8[0],\n      setEditSection = _useState8[1];\n\n  var _useState9 = useState(''),\n      editingKey = _useState9[0],\n      setEditingKey = _useState9[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var isEditing = function isEditing(record) {\n    return record.key === editingKey;\n  };\n\n  var children = [];\n\n  for (var i = 10; i < 36; i++) {\n    children.push(__jsx(Option, {\n      key: i.toString(36) + i,\n      value: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }\n    }, \"Section_\", i));\n  }\n\n  var edit = function edit(record) {\n    form.setFieldsValue(_objectSpread({}, record));\n    setEditingKey(record.key);\n  };\n\n  var cancel = function cancel() {\n    setEditingKey('');\n  };\n\n  var EditableCell = function EditableCell(_ref) {\n    var editing = _ref.editing,\n        dataIndex = _ref.dataIndex,\n        title = _ref.title,\n        inputType = _ref.inputType,\n        record = _ref.record,\n        index = _ref.index,\n        children = _ref.children,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    // const inputNode = inputType === 'number' ? <InputNumber style={{ width: \"100%\" }} /> : <Input />;\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: \"Please Input \".concat(title, \"!\")\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    })) : children);\n  };\n\n  var mockData = [{\n    status: '1',\n    department: 'Information Technology',\n    request_status: '1',\n    section: [{\n      section_name: 'section_1',\n      section_id: '01',\n      status: '1',\n      key: 1\n    }, {\n      section_name: 'section_2',\n      section_id: '02',\n      status: '1',\n      key: 2\n    }, {\n      section_name: 'section_3',\n      section_id: '03',\n      status: '1',\n      key: 3\n    }]\n  }];\n  var mockSection = [{\n    section_name: 'section_1',\n    section_id: '01',\n    status: '1',\n    key: 1\n  }, {\n    section_name: 'section_2',\n    section_id: '02',\n    status: '1',\n    key: 2\n  }, {\n    section_name: 'section_3',\n    section_id: '03',\n    status: '1',\n    key: 3\n  }];\n  useEffect(function () {\n    //cal api\n    addKeyToDataSource(mockData).then(function (result) {\n      setMockDataDepartment(result);\n    });\n  }, []);\n  /*  const mockDataDepartment = [\n     {\n       status: '1',\n       department: 'Information Technology',\n       section: []\n     }\n   ] */\n\n  var renderActionDepartment = function renderActionDepartment(record) {\n    if (record.status === '1') {\n      return __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 18\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Edit?\",\n        onConfirm: function onConfirm() {\n          return edit(record);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, \"Edit\")), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      }, \"Deactivate\")));\n    } else {\n      return null;\n    }\n  };\n\n  var renderSection = function renderSection(record) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 16\n      }\n    }, __jsx(\"a\", {\n      onClick: function onClick() {\n        return selectSection(record);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, record.section.length, \" Section\"));\n  };\n\n  var columnDepartment = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%' // render: (text, record) => checkStatus(record)\n\n  }, {\n    title: 'Department',\n    dataIndex: 'department' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Section / Team',\n    dataIndex: 'section',\n    render: function render(text, record) {\n      return renderSection(record);\n    }\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    render: function render(text, record) {\n      return renderActionDepartment(record);\n    }\n  }];\n  var columnSection = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%' // render: (text, record) => checkStatus(record)\n\n  }, {\n    title: 'Section / Team',\n    dataIndex: 'section_name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation' // render: (text, record) => renderActionDepartment(record)\n\n  }];\n\n  var AddDepartment = function AddDepartment() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \"Department Name\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      onChange: function onChange(value) {\n        return console.log(value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }))));\n  };\n\n  var handleChange = function handleChange(value) {\n    console.log(value);\n  };\n\n  var SelectDepartment = function SelectDepartment(props) {\n    return __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 10,\n      style: {\n        padding: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, \"Section / Team\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, __jsx(Select, {\n      mode: \"multiple\",\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: function onChange(value) {\n        return handleChange(value);\n      },\n      defaultValue: [10, 11, 14],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, children)));\n  };\n\n  var ListSection = function ListSection() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      flex: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, __jsx(Table, {\n      bordered: true,\n      dataSource: mockSection,\n      columns: columnSection,\n      size: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }))));\n  };\n\n  var EditSection = function EditSection() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }\n    });\n  };\n\n  var selectSection = function selectSection() {\n    setModalType('edit');\n    settitle('Edit Section and Team');\n    setmodalString(__jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }\n    }, __jsx(ListSection, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    })));\n    setvisible(true);\n  };\n\n  var openModalSection = function openModalSection() {};\n\n  var openModalAddDepartment = function openModalAddDepartment() {\n    settitle('Add New Department');\n    setmodalString(__jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }\n    }, __jsx(AddDepartment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }\n    }), __jsx(SelectDepartment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    })));\n    setvisible(true);\n  };\n\n  var confirmDepartmentSelected = function confirmDepartmentSelected() {};\n\n  var onEditSection = function onEditSection() {\n    setEditSection(true);\n    setModalType('confirm');\n    setmodalString(__jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }, __jsx(SelectDepartment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }), __jsx(Row, {\n      justify: \"end\",\n      style: {\n        marginTop: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        textAlign: \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    }, __jsx(TcrbPopconfirm, {\n      title: \"Confirm to Add Section/Team to Department\",\n      onConfirm: function onConfirm() {\n        /*waiting for api */\n      },\n      okText: \"Confirm\",\n      cancelText: \"No\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      shape: \"round\",\n      className: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }, \"Add\")))), __jsx(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }\n    }), __jsx(ListSection, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      return openModalAddDepartment();\n    },\n    shape: \"round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, \"Add\"))), __jsx(Form, {\n    form: form,\n    component: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    bordered: true,\n    dataSource: mockDataDepartment,\n    columns: columnDepartment,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  })), __jsx(SimpleModal, {\n    title: title,\n    type: modalType,\n    onOk: function onOk() {\n      return setvisible(false);\n    },\n    onCancel: function onCancel() {\n      return setvisible(false);\n    },\n    onEdit: function onEdit() {\n      return onEditSection();\n    },\n    textCancel: textCancel,\n    textOk: textOk,\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }));\n}, \"UOOSJ5hVpHYdss+S+lhF06h+QBA=\", false, function () {\n  return [Form.useForm];\n})));\nexport default Department;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","TcrbButton","TcrbPopconfirm","inject","observer","SimpleModal","SimpleInput","addKeyToDataSource","Option","Department","props","UserAccessManagementStore","t","title","settitle","textOk","settextOk","textCancel","settextCancel","modalString","setmodalString","modalType","setModalType","visible","setvisible","mockDataDepartment","setMockDataDepartment","editSection","setEditSection","editingKey","setEditingKey","useForm","form","isEditing","record","key","children","i","push","toString","edit","setFieldsValue","cancel","EditableCell","editing","dataIndex","inputType","index","restProps","margin","required","message","mockData","status","department","request_status","section","section_name","section_id","mockSection","then","result","renderActionDepartment","marginRight","color","renderSection","selectSection","length","columnDepartment","width","render","text","columnSection","AddDepartment","padding","value","console","log","handleChange","SelectDepartment","ListSection","EditSection","openModalSection","openModalAddDepartment","confirmDepartmentSelected","onEditSection","marginTop","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\n\nimport SimpleModal from '../simple-modal'\nimport SimpleInput from '../simple-input'\n\nimport { addKeyToDataSource } from '../data-utility'\n\nconst { Option } = Select;\n\nconst Department =\n  inject('UserAccessManagementStore')\n    (observer((props) => {\n      const { UserAccessManagementStore, t } = props\n      const [title, settitle] = useState(\"\")\n      const [textOk, settextOk] = useState(\"Ok\")\n      const [textCancel, settextCancel] = useState(\"Cancel\")\n      const [modalString, setmodalString] = useState(\"initialState\")\n      const [modalType, setModalType] = useState('')\n      const [visible, setvisible] = useState(false)\n      const [mockDataDepartment, setMockDataDepartment] = useState([])\n      const [editSection, setEditSection] = useState(false)\n      const [editingKey, setEditingKey] = useState('')\n      const [form] = Form.useForm();\n\n\n      const isEditing = record => record.key === editingKey;\n\n      const children = [];\n      for (let i = 10; i < 36; i++) {\n        children.push(<Option key={i.toString(36) + i} value={i}>Section_{i}</Option>);\n      }\n\n      const edit = record => {\n        form.setFieldsValue({\n          ...record,\n        });\n        setEditingKey(record.key);\n      };\n\n      const cancel = () => {\n        setEditingKey('');\n      };\n\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        // const inputNode = inputType === 'number' ? <InputNumber style={{ width: \"100%\" }} /> : <Input />;\n        return (\n          <td {...restProps}>\n            {editing ? (\n              <Form.Item\n                name={dataIndex}\n                style={{\n                  margin: 0\n                }}\n                rules={[\n                  {\n                    required: true,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        );\n      };\n\n      const mockData = [\n        {\n          status: '1',\n          department: 'Information Technology',\n          request_status: '1',\n          section: [{\n            section_name: 'section_1',\n            section_id: '01',\n            status: '1',\n            key: 1\n          },\n          {\n            section_name: 'section_2',\n            section_id: '02',\n            status: '1',\n            key: 2\n          },\n          {\n            section_name: 'section_3',\n            section_id: '03',\n            status: '1',\n            key: 3\n          }]\n        }\n      ]\n\n      const mockSection = [{\n        section_name: 'section_1',\n        section_id: '01',\n        status: '1',\n        key: 1\n      },\n      {\n        section_name: 'section_2',\n        section_id: '02',\n        status: '1',\n        key: 2\n      },\n      {\n        section_name: 'section_3',\n        section_id: '03',\n        status: '1',\n        key: 3\n      }]\n\n      useEffect(() => {\n        //cal api\n        addKeyToDataSource(mockData).then(result => {\n          setMockDataDepartment(result)\n        })\n      }, [])\n\n      /*  const mockDataDepartment = [\n         {\n           status: '1',\n           department: 'Information Technology',\n           section: []\n         }\n       ] */\n\n\n      const renderActionDepartment = (record) => {\n        if (record.status === '1') {\n          return <span>\n            <TcrbPopconfirm title=\"Sure to Edit?\" onConfirm={() => edit(record)}>\n              <a style={{ marginRight: 8, }}>\n                Edit\n              </a>\n            </TcrbPopconfirm>\n            <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n              <a style={{ color: '#3e3e3e' }}>Deactivate</a>\n            </TcrbPopconfirm>\n          </span>\n        } else {\n          return null\n        }\n      }\n\n      const renderSection = (record) => {\n        return <div>\n          <a onClick={() => selectSection(record)}>{record.section.length} Section</a>\n        </div>\n      }\n\n      const columnDepartment = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          // render: (text, record) => checkStatus(record)\n        },\n        {\n          title: 'Department',\n          dataIndex: 'department',\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Section / Team',\n          dataIndex: 'section',\n          render: (text, record) => renderSection(record)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          render: (text, record) => renderActionDepartment(record)\n        }\n      ]\n\n      const columnSection = [\n        {\n          title: '',\n          dataIndex: 'status',\n          width: '5%',\n          // render: (text, record) => checkStatus(record)\n        },\n        {\n          title: 'Section / Team',\n          dataIndex: 'section_name',\n          // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          // render: (text, record) => renderActionDepartment(record)\n        }\n      ]\n\n      const AddDepartment = () => {\n        return (\n          <div>\n            <Row>\n              <Col span={10} style={{ padding: 4 }}>\n                <p>\n                  Department Name\n            </p>\n              </Col>\n              <Col span={14}>\n                <SimpleInput onChange={(value) => console.log(value)} />\n              </Col>\n            </Row>\n          </div>\n        )\n      }\n\n      const handleChange = (value) => {\n        console.log(value)\n      }\n\n      const SelectDepartment = (props) => {\n        return (\n          <Row>\n            <Col span={10} style={{ padding: 4 }}>\n              <p>Section / Team</p>\n            </Col>\n            <Col span={14}>\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                onChange={(value) => handleChange(value)}\n                defaultValue={[10, 11, 14]}\n              >\n                {children}\n              </Select>\n            </Col>\n          </Row>\n\n        )\n      }\n\n      const ListSection = () => {\n        return (\n          <div>\n            <Row>\n              <Col flex={100}>\n                <Table\n                  bordered\n                  dataSource={mockSection}\n                  columns={columnSection}\n                  size=\"small\"\n                />\n              </Col>\n            </Row>\n          </div>\n        )\n      }\n\n      const EditSection = () => {\n        return (\n          <div>\n\n          </div>\n        )\n      }\n\n      const selectSection = () => {\n        setModalType('edit')\n        settitle('Edit Section and Team')\n        setmodalString(\n          <div>\n            <ListSection />\n          </div>\n        )\n        setvisible(true)\n      }\n\n      const openModalSection = () => {\n\n      }\n\n      const openModalAddDepartment = () => {\n        settitle('Add New Department')\n        setmodalString(\n          <div>\n            <AddDepartment />\n            <SelectDepartment />\n          </div>\n        )\n        setvisible(true)\n      }\n\n      const confirmDepartmentSelected = () => {\n\n      }\n\n      const onEditSection = () => {\n        setEditSection(true)\n        setModalType('confirm')\n        setmodalString(\n          <div>\n            <SelectDepartment />\n            <Row justify=\"end\" style={{ marginTop: 8 }}>\n              <Col span={4} style={{ textAlign: \"right\" }}>\n                <TcrbPopconfirm title=\"Confirm to Add Section/Team to Department\" onConfirm={() => { /*waiting for api */ }} okText=\"Confirm\" cancelText=\"No\">\n                  <Button shape=\"round\" className=\"primary\" >Add</Button>\n                </TcrbPopconfirm>\n              </Col>\n            </Row>\n            <Divider />\n            <ListSection />\n          </div>\n        )\n      }\n\n      return (\n        <div>\n          <Row gutter={[4, 24]}>\n            <Col span={2}>\n              <TcrbButton className=\"primary\" onClick={() => openModalAddDepartment()} shape=\"round\">Add</TcrbButton>\n            </Col>\n          </Row>\n          <Form form={form} component={false}>\n\n            <Table\n              bordered\n              dataSource={mockDataDepartment}\n              columns={columnDepartment}\n              size=\"small\"\n            />\n          </Form>\n          <SimpleModal\n            title={title}\n            type={modalType}\n            onOk={() => setvisible(false)}\n            onCancel={() => setvisible(false)}\n            onEdit={() => onEditSection()}\n            textCancel={textCancel}\n            textOk={textOk}\n            width={600}\n            modalString={modalString}\n            visible={visible}\n          />\n\n        </div>\n      )\n    }))\n\nexport default Department\n"]},"metadata":{},"sourceType":"module"}