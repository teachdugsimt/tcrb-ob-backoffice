{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/menu-and-function/function/function-list.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport SimpleModal from '../../../simple-modal';\nimport SimpleInput from '../../../simple-input';\nimport { checkDefaultStatus, addKeyToDataSource } from '../../../data-utility';\nvar roleName = null;\nvar FunctionList = inject('userAccessManagementStore')(observer(_s(function (props) {\n  _s();\n\n  var userAccessManagementStore = props.userAccessManagementStore;\n\n  var _useState = useState([]),\n      functionList = _useState[0],\n      setFunctionList = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      modalTitle = _useState2[0],\n      setModalTitle = _useState2[1];\n\n  var _useState3 = useState(\"Submit\"),\n      textOk = _useState3[0],\n      settextOk = _useState3[1];\n\n  var _useState4 = useState(\"Cancel\"),\n      textCancel = _useState4[0],\n      settextCancel = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      modalString = _useState5[0],\n      setModalString = _useState5[1];\n\n  var _useState6 = useState('confirm'),\n      modalType = _useState6[0],\n      setModalType = _useState6[1];\n\n  var _useState7 = useState(false),\n      visible = _useState7[0],\n      setVisible = _useState7[1];\n\n  useEffect(function () {\n    // setMockFunctionList(testFunctionList())\n    userAccessManagementStore.getDataFunction();\n  }, []);\n  useEffect(function () {\n    if (userAccessManagementStore.functionList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.functionList).then(function (result) {\n        setFunctionList(result);\n      });\n    }\n  }, [userAccessManagementStore.functionList]);\n\n  var FormAddNewMenu = function FormAddNewMenu() {\n    return __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, __jsx(Col, {\n      span: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Function Name\")), __jsx(Col, {\n      span: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, __jsx(SimpleInput, {\n      onChange: function onChange(value) {\n        return roleName = value;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  var openModalAddFunction = function openModalAddFunction() {\n    setModalTitle('Add new function');\n    setModalString(__jsx(FormAddNewMenu, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 22\n      }\n    }));\n    setVisible(true);\n  };\n\n  var addNewFunction = function addNewFunction() {\n    //waiting call api\n    setVisible(false);\n  };\n\n  var columnFunction = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: function render(text, record) {\n      return checkDefaultStatus(record.status, record.request_status);\n    }\n  }, {\n    title: 'Name',\n    dataIndex: 'name' // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%' // render: (text, record) => renderActionGroup(record)\n\n  }];\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: function onClick() {\n      return openModalAddFunction();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Add Function\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: functionList,\n    columns: columnFunction,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleModal, {\n    title: modalTitle,\n    type: modalType,\n    onOk: function onOk() {\n      return addNewFunction();\n    },\n    onCancel: function onCancel() {\n      return setVisible(false);\n    },\n    textCancel: textCancel,\n    textOk: textOk,\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }));\n}, \"9U/0SK82G/nPLAH8CYwi29dJbXQ=\")));\nexport default FunctionList;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/menu-and-function/function/function-list.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","TcrbButton","TcrbPopconfirm","inject","observer","SimpleModal","SimpleInput","checkDefaultStatus","addKeyToDataSource","roleName","FunctionList","props","userAccessManagementStore","functionList","setFunctionList","modalTitle","setModalTitle","textOk","settextOk","textCancel","settextCancel","modalString","setModalString","modalType","setModalType","visible","setVisible","getDataFunction","length","then","result","FormAddNewMenu","value","openModalAddFunction","addNewFunction","columnFunction","title","dataIndex","width","render","text","record","status","request_status"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,IAArD,EAA2DC,WAA3D,EAAwEC,OAAxE,EAAiFC,MAAjF,EAAyFC,KAAzF,EAAgGC,MAAhG,QAA8G,MAA9G;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,6BAA3C;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,uBAAvD;AACA,IAAIC,QAAQ,GAAG,IAAf;AACA,IAAMC,YAAY,GAAGP,MAAM,CAAC,2BAAD,CAAN,CAClBC,QAAQ,IAAC,UAACO,KAAD,EAAW;AAAA;;AAAA,MACXC,yBADW,GACmBD,KADnB,CACXC,yBADW;;AAAA,kBAEqB1B,QAAQ,CAAC,EAAD,CAF7B;AAAA,MAEZ2B,YAFY;AAAA,MAEEC,eAFF;;AAAA,mBAGiB5B,QAAQ,CAAC,EAAD,CAHzB;AAAA,MAGZ6B,UAHY;AAAA,MAGAC,aAHA;;AAAA,mBAIS9B,QAAQ,CAAC,QAAD,CAJjB;AAAA,MAIZ+B,MAJY;AAAA,MAIJC,SAJI;;AAAA,mBAKiBhC,QAAQ,CAAC,QAAD,CALzB;AAAA,MAKZiC,UALY;AAAA,MAKAC,aALA;;AAAA,mBAMmBlC,QAAQ,CAAC,EAAD,CAN3B;AAAA,MAMZmC,WANY;AAAA,MAMCC,cAND;;AAAA,mBAOepC,QAAQ,CAAC,SAAD,CAPvB;AAAA,MAOZqC,SAPY;AAAA,MAODC,YAPC;;AAAA,mBAQWtC,QAAQ,CAAC,KAAD,CARnB;AAAA,MAQZuC,OARY;AAAA,MAQHC,UARG;;AAUnBvC,EAAAA,SAAS,CAAC,YAAM;AACd;AACAyB,IAAAA,yBAAyB,CAACe,eAA1B;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAxC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyB,yBAAyB,CAACC,YAA1B,CAAuCe,MAAvC,IAAiD,CAArD,EAAwD;AACtDpB,MAAAA,kBAAkB,CAACI,yBAAyB,CAACC,YAA3B,CAAlB,CAA2DgB,IAA3D,CAAgE,UAAAC,MAAM,EAAI;AACxEhB,QAAAA,eAAe,CAACgB,MAAD,CAAf;AACD,OAFD;AAGD;AAEF,GAPQ,EAON,CAAClB,yBAAyB,CAACC,YAA3B,CAPM,CAAT;;AASA,MAAMkB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,WACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAME,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,eAAWvB,QAAQ,GAAGuB,KAAtB;AAAA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CADF;AAYD,GAbD;;AAeA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCjB,IAAAA,aAAa,CAAC,kBAAD,CAAb;AACAM,IAAAA,cAAc,CAAC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAd;AACAI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAJD;;AAMA,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B;AACAR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAIA,MAAMS,cAAc,GAAG,CACrB;AACEC,IAAAA,KAAK,EAAE,EADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,KAAK,EAAE,IAHT;AAIEC,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,MAAP;AAAA,aAAkBlC,kBAAkB,CAACkC,MAAM,CAACC,MAAR,EAAgBD,MAAM,CAACE,cAAvB,CAApC;AAAA;AAJV,GADqB,EAOrB;AACEP,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,MAFb,CAGE;;AAHF,GAPqB,EAYrB;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE,WAFb;AAGEC,IAAAA,KAAK,EAAE,KAHT,CAIE;;AAJF,GAZqB,CAAvB;AAmBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE;AAAA,aAAML,oBAAoB,EAA1B;AAAA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADF,EAME,MAAC,KAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,UAAU,EAAEpB,YAFd;AAGE,IAAA,OAAO,EAAEsB,cAHX;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAYE,MAAC,WAAD;AACE,IAAA,KAAK,EAAEpB,UADT;AAEE,IAAA,IAAI,EAAEQ,SAFR;AAGE,IAAA,IAAI,EAAE;AAAA,aAAMW,cAAc,EAApB;AAAA,KAHR;AAIE,IAAA,QAAQ,EAAE;AAAA,aAAMR,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJZ;AAKE,IAAA,UAAU,EAAEP,UALd;AAME,IAAA,MAAM,EAAEF,MANV;AAOE,IAAA,KAAK,EAAE,GAPT;AAQE,IAAA,WAAW,EAAEI,WARf;AASE,IAAA,OAAO,EAAEI,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AA0BD,CA9FQ,kCADU,CAArB;AAiGA,eAAef,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\n\nimport SimpleModal from '../../../simple-modal'\nimport SimpleInput from '../../../simple-input'\n\nimport { checkDefaultStatus, addKeyToDataSource } from '../../../data-utility'\nlet roleName = null\nconst FunctionList = inject('userAccessManagementStore')\n  (observer((props) => {\n    const { userAccessManagementStore } = props\n    const [functionList, setFunctionList] = useState([])\n    const [modalTitle, setModalTitle] = useState(\"\")\n    const [textOk, settextOk] = useState(\"Submit\")\n    const [textCancel, settextCancel] = useState(\"Cancel\")\n    const [modalString, setModalString] = useState(\"\")\n    const [modalType, setModalType] = useState('confirm')\n    const [visible, setVisible] = useState(false)\n\n    useEffect(() => {\n      // setMockFunctionList(testFunctionList())\n      userAccessManagementStore.getDataFunction()\n    }, [])\n\n    useEffect(() => {\n      if (userAccessManagementStore.functionList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.functionList).then(result => {\n          setFunctionList(result)\n        })\n      }\n\n    }, [userAccessManagementStore.functionList])\n\n    const FormAddNewMenu = () => {\n      return (\n        <Row>\n          <Col span={10} >\n            <span>\n              Function Name\n            </span>\n          </Col>\n          <Col span={14}>\n            <SimpleInput onChange={(value) => roleName = value} />\n          </Col>\n        </Row>\n      )\n    }\n\n    const openModalAddFunction = () => {\n      setModalTitle('Add new function')\n      setModalString(<FormAddNewMenu />)\n      setVisible(true)\n    }\n\n    const addNewFunction = () => {\n      //waiting call api\n      setVisible(false)\n    }\n    const columnFunction = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkDefaultStatus(record.status, record.request_status)\n      },\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Action',\n        dataIndex: 'operation',\n        width: '10%',\n        // render: (text, record) => renderActionGroup(record)\n      }\n    ]\n    return (\n      <div>\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"primary\" onClick={() => openModalAddFunction()} >Add Function</TcrbButton>\n          </Col>\n        </Row>\n        <Table\n          bordered\n          dataSource={functionList}\n          columns={columnFunction}\n          size=\"small\"\n        />\n        <SimpleModal\n          title={modalTitle}\n          type={modalType}\n          onOk={() => addNewFunction()}\n          onCancel={() => setVisible(false)}\n          textCancel={textCancel}\n          textOk={textOk}\n          width={600}\n          modalString={modalString}\n          visible={visible}\n        />\n      </div>\n    )\n  }))\n\nexport default FunctionList\n"]},"metadata":{},"sourceType":"module"}