{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport { observer, inject } from 'mobx-react';\nimport { useStores } from '../../hooks/use-stores';\nconst {\n  Header,\n  Footer,\n  Sider,\n  Content\n} = Layout;\nconst stringSwitch = [{\n  accountNumber: '123123123123',\n  accountType: 'Binding to TCRB Mobile Banking'\n}, {\n  accountNumber: '00993445123123',\n  accountType: 'Binding to Micro Pay'\n}];\nconst StyledP = styled.p.withConfig({\n  displayName: \"otp-unlocking__StyledP\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nexport default function OtpUnlocking() {\n  const {\n    0: idCard,\n    1: setIdCard\n  } = useState('');\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    customerServicesMenuStore\n  } = useStores();\n  console.log(customerServicesMenuStore.citizenId);\n\n  const searchIdCardNumber = value => {\n    console.log('eiei search:' + value);\n    setIdCard(value);\n    setIsSearch(true);\n  };\n\n  const hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  const onChange = value => {\n    console.log(\"change:\" + value);\n\n    if (value === true) {\n      setVisble(true);\n      setIsChecked(true);\n      setModalString(__jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, \"Unlocking OTP!!\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"Customer ID Card Number \", idCard), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, \"Mobile Number \")));\n    } else {\n      setIsChecked(false);\n    }\n  };\n\n  const unlockOTP = () => {\n    //some action\n    setVisble(false);\n  };\n\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) => __jsx(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, __jsx(Switch, {\n      defaultChecked: false,\n      onChange: checked => onChange(checked, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), __jsx(StyledP, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, string.accountNumber, __jsx(Switch, {\n      defaultChecked: false,\n      onChange: checked => onChange(checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), isChecked ? __jsx(StyledP, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }\n    }, \"OTP is Locked\") : __jsx(StyledP, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 64\n      }\n    }, \"OTP is ready for using\")))));\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, listItems);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: \"ID Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(SwitchList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })) : '', __jsx(SimpleModal, {\n    onOk: () => unlockOTP(),\n    onCancel: () => setVisble(false),\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","useContext","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","observer","inject","useStores","Header","Footer","Sider","Content","stringSwitch","accountNumber","accountType","StyledP","p","theme","spacing","medium","OtpUnlocking","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","customerServicesMenuStore","console","log","citizenId","searchIdCardNumber","value","hideModal","setState","onChange","unlockOTP","SwitchList","listItems","map","string","index","checked","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport { observer, inject } from 'mobx-react';\nimport { useStores } from '../../hooks/use-stores'\nconst { Header, Footer, Sider, Content } = Layout;\nconst stringSwitch = [{ accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking' }, { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay' }]\n\n\nconst StyledP = styled.p`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\n\nexport default function OtpUnlocking\n  () {\n  const [idCard, setIdCard] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const { customerServicesMenuStore } = useStores()\n  console.log(customerServicesMenuStore.citizenId)\n  const searchIdCardNumber = (value) => {\n    console.log('eiei search:' + value)\n    setIdCard(value)\n    setIsSearch(true)\n  }\n\n\n  const hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  const onChange = (value) => {\n    console.log(\"change:\" + value)\n\n    if (value === true) {\n      setVisble(true)\n      setIsChecked(true)\n      setModalString(\n        <div>\n          <p>Unlocking OTP!!</p>\n          <p>Customer ID Card Number {idCard}</p>\n          <p>Mobile Number </p>\n        </div>\n      )\n    } else {\n      setIsChecked(false)\n    }\n  }\n  const unlockOTP = () => {\n    //some action\n    setVisble(false)\n  }\n  const SwitchList = () => {\n    const listItems = stringSwitch.map((string, index) =>\n      <Row key={index}>\n        <Col span={24}>\n          <Switch defaultChecked={false} onChange={checked => onChange(checked, index)} />\n          <StyledP>{string.accountNumber}\n            <Switch defaultChecked={false} onChange={checked => onChange(checked)} />\n            {isChecked ? (<StyledP>OTP is Locked</StyledP>) : (<StyledP>OTP is ready for using</StyledP>)}\n          </StyledP>\n        </Col>\n      </Row>\n    );\n    return (\n      <ul>{listItems}</ul>\n    );\n  }\n  return (\n    <div style={{ marginTop: 20 }}>\n      <Row>\n        <SimpleSearch search={searchIdCardNumber} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (\n\n        <Col span={12}>\n          <SwitchList />\n        </Col>\n      ) : ('')}\n      <SimpleModal\n        onOk={() => unlockOTP()}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}