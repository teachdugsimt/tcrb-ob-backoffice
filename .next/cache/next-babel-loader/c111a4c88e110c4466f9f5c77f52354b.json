{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/filter-box.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Table, Input, Button, Space } from 'antd';\nexport var getColumnSearchProps = function getColumnSearchProps(dataIndex, handleSearch, handleReset) {\n  return {\n    filterDropdown: function filterDropdown(_ref) {\n      var setSelectedKeys = _ref.setSelectedKeys,\n          selectedKeys = _ref.selectedKeys,\n          confirm = _ref.confirm,\n          clearFilters = _ref.clearFilters;\n      return __jsx(\"div\", {\n        style: {\n          padding: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 5\n        }\n      }, __jsx(Input // ref={node => {\n      //   this.searchInput = node;\n      // }}\n      , {\n        placeholder: \"Search \".concat(dataIndex),\n        value: selectedKeys[0],\n        onChange: function onChange(e) {\n          return setSelectedKeys(e.target.value ? [e.target.value] : []);\n        },\n        onPressEnter: function onPressEnter() {\n          return handleSearch(selectedKeys, confirm, dataIndex);\n        },\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 7\n        }\n      }), __jsx(Space, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        onClick: function onClick() {\n          console.log(selectedKeys);\n          handleSearch(selectedKeys, confirm, dataIndex);\n        },\n        icon: __jsx(SearchOutlined, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }\n        }),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, \"Search\"), __jsx(Button, {\n        onClick: function onClick() {\n          return handleReset(clearFilters);\n        },\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, \"Reset\")));\n    },\n    filterIcon: function filterIcon(filtered) {\n      return __jsx(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 27\n        }\n      });\n    },\n    onFilter: function onFilter(value, record) {\n      return record[dataIndex].toString().toLowerCase().includes(value.toLowerCase());\n    },\n    onFilterDropdownVisibleChange: function onFilterDropdownVisibleChange(visible) {\n      if (visible) {// setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: function render(text) {\n      return text;\n    } // this.state.searchedColumn === dataIndex ?\n    // (\n    // <Highlighter\n    //   highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n    //   searchWords={[this.state.searchText]}\n    //   autoEscape\n    //   textToHighlight={text.toString()}\n    // />\n    // ) : (\n    // text\n    // ),\n\n  };\n};","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/filter-box.js"],"names":["React","Highlighter","SearchOutlined","Table","Input","Button","Space","getColumnSearchProps","dataIndex","handleSearch","handleReset","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","e","target","value","width","marginBottom","display","console","log","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","render","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Table, Input, Button, Space } from 'antd';\n\nexport const getColumnSearchProps = (dataIndex, handleSearch, handleReset) => ({\n  filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n    <div style={{ padding: 8 }}>\n      <Input\n        // ref={node => {\n        //   this.searchInput = node;\n        // }}\n        placeholder={`Search ${dataIndex}`}\n        value={selectedKeys[0]}\n        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n        onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n        style={{ width: 188, marginBottom: 8, display: 'block' }}\n      />\n      <Space>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            console.log(selectedKeys)\n            handleSearch(selectedKeys, confirm, dataIndex)\n          }}\n          icon={<SearchOutlined />}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </Space>\n    </div>\n  ),\n  filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n  onFilter: (value, record) =>\n    record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n  onFilterDropdownVisibleChange: visible => {\n    if (visible) {\n      // setTimeout(() => this.searchInput.select());\n    }\n  },\n  render: text => text\n  // this.state.searchedColumn === dataIndex ?\n  // (\n  // <Highlighter\n  //   highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n  //   searchWords={[this.state.searchText]}\n  //   autoEscape\n  //   textToHighlight={text.toString()}\n  // />\n  // ) : (\n  // text\n  // ),\n});\n"]},"metadata":{},"sourceType":"module"}