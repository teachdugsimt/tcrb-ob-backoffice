{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nconst {\n  Header,\n  Footer,\n  Sider,\n  Content\n} = Layout;\nconst StyledP = styled.p.withConfig({\n  displayName: \"otp-unlocking__StyledP\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nexport default function OtpUnlocking() {\n  const {\n    0: idCard,\n    1: setIdCard\n  } = useState('');\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n  var modalString = \"\";\n\n  const searchIdCardNumber = value => {\n    console.log('eiei search:' + value);\n    setIdCard(value);\n    setIsSearch(true);\n  };\n\n  const hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  const onChange = value => {\n    console.log(\"change:\" + value);\n\n    if (value === true) {\n      setVisble(true);\n      setIsChecked(true);\n      modalString = \"<p>Unlocking OTP!!</p>\" + \"<p>Customer ID Card Number \" + {\n        idCard\n      } + \"</p>\" + \"<p>Mobile Number </p>\"; // Modal.confirm({\n      //   title: 'Confirm',\n      //   content: 'Unlocking OTP!!Customer Id Card Number',\n      //   okText: 'Confirm',\n      //   cancelText: 'Cancel',\n      // });\n    } else {\n      setIsChecked(false);\n    }\n  };\n\n  const unlockOTP = () => {//somaction\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }\n  }, __jsx(Switch, {\n    defaultChecked: false,\n    onChange: checked => onChange(checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), isChecked ? __jsx(StyledP, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }, \"OTP is Locked\") : __jsx(StyledP, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 60\n    }\n  }, \"OTP is ready for using\")) : '', __jsx(SimpleModal, {\n    onOk: unlockOTP,\n    onCancel: () => setVisble(false),\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","Header","Footer","Sider","Content","StyledP","p","theme","spacing","medium","OtpUnlocking","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","searchIdCardNumber","value","console","log","hideModal","setState","onChange","unlockOTP","marginTop","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nconst { Header, Footer, Sider, Content } = Layout;\n\n\nconst StyledP = styled.p`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nexport default function OtpUnlocking() {\n  const [idCard, setIdCard] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  var modalString = \"\"\n  const searchIdCardNumber = (value) => {\n    console.log('eiei search:' + value)\n    setIdCard(value)\n    setIsSearch(true)\n  }\n\n\n  const hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  const onChange = (value) => {\n    console.log(\"change:\" + value)\n\n    if (value === true) {\n      setVisble(true)\n      setIsChecked(true)\n      modalString = \"<p>Unlocking OTP!!</p>\"+\n      \"<p>Customer ID Card Number \"+{idCard}+\"</p>\"+\n      \"<p>Mobile Number </p>\"\n      // Modal.confirm({\n      //   title: 'Confirm',\n      //   content: 'Unlocking OTP!!Customer Id Card Number',\n      //   okText: 'Confirm',\n      //   cancelText: 'Cancel',\n      // });\n    } else {\n      setIsChecked(false)\n    }\n  }\n  const unlockOTP = () => {\n    //somaction\n  }\n  return (\n    <div style={{ marginTop: 20 }}>\n\n      {/* <Row>\n        <Col span={12}>Account Unbinding</Col>\n        <Col span={12}> OTP Unlocking</Col>\n      </Row> */}\n      <Row>\n        <SimpleSearch search={searchIdCardNumber} />\n      </Row>\n      {(isSearch) ? (<Col span={12}>\n        <Switch defaultChecked={false} onChange={checked => onChange(checked)} />\n        {isChecked ? (<StyledP>OTP is Locked</StyledP>) : (<StyledP>OTP is ready for using</StyledP>)}\n      </Col>) : ('')}\n      <SimpleModal\n        onOk={unlockOTP}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={ modalString }\n      />\n      {/* <Modal\n        title=\"Confirm\"\n        visible={visible}\n        onOk={unlockOTP}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n      >\n        <p>Unlocking OTP!!</p>\n        <p>Customer ID Card Number {idCard}</p>\n        <p>Mobile Number </p>\n      </Modal> */}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}