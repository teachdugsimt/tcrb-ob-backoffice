{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _temp;\n\n// src/stores/counter-store.tsx\nimport { observable, action, computed, toJS } from 'mobx';\nimport { BusinessParameterSetupApi } from '../services';\nvar BusinessParameterSetup = (_class = (_temp = /*#__PURE__*/function () {\n  function BusinessParameterSetup() {\n    _classCallCheck(this, BusinessParameterSetup);\n\n    _initializerDefineProperty(this, \"editOtpMaximumRetry\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"editOtpExpirationPeriod\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"responseGetOtpValue\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"fetchingGetOtp\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"errorGetOtp\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"responseUpdateOtp\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"fetchingUpdateOtp\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"errorUpdateOtp\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"pendingApprovals\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"fetchingApi\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"productLimit\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"productLimitDetail\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"closeExpire\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"closeMaximum\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"getOTPdata\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"updateOTPdata\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"setCitizenId\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"setAccountId\", _descriptor18, this);\n\n    _initializerDefineProperty(this, \"getDataProductLimit\", _descriptor19, this);\n  }\n\n  _createClass(BusinessParameterSetup, [{\n    key: \"selectProductToDelete\",\n    value: function selectProductToDelete(productSelected) {\n      console.log(toJS(productSelected)); // [{\n      //   id: 1, key: 1, ticket: \"PAR0000001\", requestType: \"OTP Max Retrying\", requestDescription: \"Change from 3 to 5\", requestId: \"T630213\",\n      //   requestDate: \"21-May-2020\", action: null\n      // }]\n\n      productSelected.ticket = '00000' + this.pendingApprovals.length + 1;\n      productSelected.requestDescription = productSelected.ProductDescription;\n      this.pendingApprovals.push(productSelected);\n    } // @computed\n    // get doubleCount() {\n    //   return this.count * 2\n    // }\n\n  }]);\n\n  return BusinessParameterSetup;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"editOtpMaximumRetry\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"editOtpExpirationPeriod\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"responseGetOtpValue\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"fetchingGetOtp\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"errorGetOtp\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"responseUpdateOtp\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"fetchingUpdateOtp\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"errorUpdateOtp\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"pendingApprovals\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"fetchingApi\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"productLimit\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"productLimitDetail\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"closeExpire\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function (val) {\n      _this.editOtpExpirationPeriod = val;\n    };\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"closeMaximum\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (val) {\n      _this2.editOtpMaximumRetry = val;\n    };\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"getOTPdata\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n        var tmp, raw_Data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this3.fetchingGetOtp = true;\n                _context.next = 3;\n                return BusinessParameterSetupApi.getOtpValue(params);\n\n              case 3:\n                tmp = _context.sent;\n\n                if (tmp.ok == true && tmp.status == 200) {\n                  raw_Data = toJS(tmp.data.responseData.paramStoreData);\n                  console.log(\"On Success : \", raw_Data);\n                  _this3.fetchingGetOtp = false;\n                  _this3.errorGetOtp = null;\n                  _this3.responseGetOtpValue = raw_Data;\n                } else {\n                  console.log(\"= Call get otp failure = \", tmp);\n                  _this3.fetchingGetOtp = false;\n                  _this3.responseGetOtpValue = null;\n                  _this3.errorGetOtp = tmp.problem;\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"updateOTPdata\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this4.fetchingUpdateOtp = true;\n                _context2.next = 3;\n                return BusinessParameterSetupApi.setOtpValue(params);\n\n              case 3:\n                response = _context2.sent;\n\n                if (response.ok && response.status == 200) {\n                  console.log(\"Update OTP Success :: \", response);\n                  _this4.responseUpdateOtp = response.data;\n                  _this4.fetchingUpdateOtp = false;\n                  _this4.errorUpdateOtp = null;\n                } else {\n                  console.log(\"Update OTP FAIL :: \", response);\n                  _this4.fetchingUpdateOtp = false;\n                  _this4.responseUpdateOtp = null;\n                  _this4.errorUpdateOtp = response.problem ? response.problem : \"Client Error\";\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"setCitizenId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this5 = this;\n\n    return function (id) {\n      _this5.citizenId = {\n        idCard: id\n      };\n    };\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"setAccountId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this6 = this;\n\n    return function (id) {\n      _this6.accountId = id;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"selectProductToDelete\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"selectProductToDelete\"), _class.prototype), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"getDataProductLimit\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this7 = this;\n\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this7.fetchingUpdateOtp = true;\n              _context3.next = 3;\n              return BusinessParameterSetupApi.getProductLimit({\n                partner_code: ''\n              });\n\n            case 3:\n              response = _context3.sent;\n              console.log(response);\n\n              if (response.ok && response.status == 200) {\n                _this7.productLimit = response.data.responseData;\n              } else {}\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n  }\n})), _class);\nexport default BusinessParameterSetup;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/business-parameters-setup-store.js"],"names":["observable","action","computed","toJS","BusinessParameterSetupApi","BusinessParameterSetup","productSelected","console","log","ticket","pendingApprovals","length","requestDescription","ProductDescription","push","val","editOtpExpirationPeriod","editOtpMaximumRetry","params","fetchingGetOtp","getOtpValue","tmp","ok","status","raw_Data","data","responseData","paramStoreData","errorGetOtp","responseGetOtpValue","problem","fetchingUpdateOtp","setOtpValue","response","responseUpdateOtp","errorUpdateOtp","id","citizenId","idCard","accountId","getProductLimit","partner_code","productLimit"],"mappings":"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","sourcesContent":["// src/stores/counter-store.tsx\nimport { observable, action, computed, toJS } from 'mobx'\nimport { BusinessParameterSetupApi } from '../services'\n\nclass BusinessParameterSetup {\n  @observable\n  editOtpMaximumRetry = null\n  @observable\n  editOtpExpirationPeriod = null\n\n  @observable\n  responseGetOtpValue = null\n  @observable\n  fetchingGetOtp = null\n  @observable\n  errorGetOtp = null\n\n  @observable\n  responseUpdateOtp = null\n  @observable\n  fetchingUpdateOtp = null\n  @observable\n  errorUpdateOtp = null\n\n  @observable pendingApprovals = []\n  @observable fetchingApi = false\n  @observable productLimit = []\n  @observable productLimitDetail = null\n\n  @action\n  closeExpire = (val) => {\n    this.editOtpExpirationPeriod = val\n  }\n\n  @action\n  closeMaximum = (val) => {\n    this.editOtpMaximumRetry = val\n  }\n\n  @action getOTPdata = async (params) => {\n    this.fetchingGetOtp = true\n    let tmp = await BusinessParameterSetupApi.getOtpValue(params)\n    if (tmp.ok == true && tmp.status == 200) {\n      let raw_Data = toJS(tmp.data.responseData.paramStoreData)\n      console.log(\"On Success : \", raw_Data)\n      this.fetchingGetOtp = false\n      this.errorGetOtp = null\n      this.responseGetOtpValue = raw_Data\n    } else {\n      console.log(\"= Call get otp failure = \", tmp)\n      this.fetchingGetOtp = false\n      this.responseGetOtpValue = null\n      this.errorGetOtp = tmp.problem\n    }\n  }\n\n  @action\n  updateOTPdata = async (params) => {\n    this.fetchingUpdateOtp = true\n    let response = await BusinessParameterSetupApi.setOtpValue(params)\n    if (response.ok && response.status == 200) {\n      console.log(\"Update OTP Success :: \", response)\n      this.responseUpdateOtp = response.data\n      this.fetchingUpdateOtp = false\n      this.errorUpdateOtp = null\n    } else {\n      console.log(\"Update OTP FAIL :: \", response)\n      this.fetchingUpdateOtp = false\n      this.responseUpdateOtp = null\n      this.errorUpdateOtp = response.problem ? response.problem : \"Client Error\"\n    }\n  }\n\n  @action setCitizenId = (id) => {\n    this.citizenId = { idCard: id }\n  }\n  @action setAccountId = (id) => {\n    this.accountId = id\n  }\n\n  @action\n  selectProductToDelete(productSelected) {\n    console.log(toJS(productSelected))\n    // [{\n    //   id: 1, key: 1, ticket: \"PAR0000001\", requestType: \"OTP Max Retrying\", requestDescription: \"Change from 3 to 5\", requestId: \"T630213\",\n    //   requestDate: \"21-May-2020\", action: null\n    // }]\n    productSelected.ticket = '00000' + this.pendingApprovals.length + 1\n    productSelected.requestDescription = productSelected.ProductDescription\n    this.pendingApprovals.push(productSelected)\n  }\n\n  @action\n  getDataProductLimit = async () => {\n    this.fetchingUpdateOtp = true\n    let response = await BusinessParameterSetupApi.getProductLimit({ partner_code: '' })\n    console.log(response)\n    if (response.ok && response.status == 200) {\n      this.productLimit = response.data.responseData\n    } else {\n\n    }\n  }\n  // @computed\n  // get doubleCount() {\n  //   return this.count * 2\n  // }\n}\nexport default BusinessParameterSetup\n"]},"metadata":{},"sourceType":"module"}