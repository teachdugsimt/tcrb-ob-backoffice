{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/table-result.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { columnsTranInfo, columnsPartnerInfo, columnsAccInfo, columnsTxn, clmTab1 } from './table-column';\nimport { Table, Tabs, Carousel } from 'antd';\nimport { TcrbTabs } from '../antd-styles/styles';\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\nimport { data } from './data';\nimport moment from 'moment';\nimport 'moment/locale/th';\nconst {\n  TabPane\n} = Tabs;\n\nfunction callback(key) {\n  console.log(\"CustomerEnquiry :: \", key);\n}\n\nexport const TableResult = inject('customerServiceEnquiry')(observer(props => {\n  const {\n    customerServiceEnquiry\n  } = props;\n  const {\n    0: transInfo,\n    1: setTransInfo\n  } = useState(null);\n  const {\n    0: partnerInfo,\n    1: setPartnerInfo\n  } = useState(null);\n  const {\n    0: accInfo,\n    1: setAccInfo\n  } = useState(null);\n  const {\n    0: txnInfo,\n    1: setTxnInfo\n  } = useState(null);\n  const {\n    0: allList,\n    1: setallList\n  } = useState(null);\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const _buildListData = () => {\n    let arr = customerServiceEnquiry.tmpListData ? customerServiceEnquiry.tmpListData : data;\n    let list1 = [],\n        list2 = [],\n        list3 = [],\n        list4 = [],\n        groupList = [];\n    arr.forEach((e, index) => {\n      let b = moment(e.date.toString()).format('l');\n      list1.push({\n        key: index + 1,\n        no: index + 1,\n        tranDate: b,\n        tranTime: e.time,\n        // no: index + 1, tranDate: '29/6/2020', tranTime: e.time,\n        entity: e.parent_partner_code,\n        channel: e.channel,\n        tranType: e.transaction_type,\n        tranSubType: e.transaction_type,\n        prodType: e.product_type,\n        accNo: e.main_account_no,\n        amount: (index + 1) * 1000,\n        status: e.status\n      });\n      list2.push({\n        key: index + 1,\n        no: index + 1,\n        partnerTranRef: e.partner_transaction_reference,\n        partnerReqId: e.request_id,\n        bankTranRef: e.transaction_reference,\n        mobileNo: \"099345666\" + JSON.stringify(index)\n      });\n      list3.push({\n        key: index + 1,\n        no: index + 1,\n        tcrbAccRef: e.citizen_id,\n        subAcc: e.sub_account_no,\n        accName: e.account_name,\n        accRef1: e.reference_1,\n        accRef2: e.reference_2,\n        accRef3: e.reference_3\n      });\n      list4.push({\n        key: index + 1,\n        no: index + 1,\n        txnDrEntry: \"TXD-DR-\" + index,\n        txnCrEntry: \"CR-ENTRY-00\" + index,\n        feeDrEntry: JSON.stringify(index) + \"%\",\n        feeDrAmount: (index + 1) * (index + 30),\n        feeCrEntry: JSON.stringify(index) + \".5%\",\n        feeCrAmount: (index + 1) * 100 + index,\n        amount: (index + 1) * 23 + index\n      });\n      groupList.push({\n        key: index + 1,\n        no: index + 1,\n        tranDate: e.date,\n        tranTime: e.time,\n        entity: e.parent_partner_code,\n        channel: e.channel,\n        tranType: e.transaction_type,\n        tranSubType: e.transaction_type,\n        prodType: e.product_type,\n        accNo: e.main_account_no,\n        amount: (index + 1) * 1000,\n        status: e.status,\n        partnerReqId: e.request_id,\n        bankTranRef: e.transaction_reference,\n        mobileNo: \"099345666\" + JSON.stringify(index),\n        tcrbAccRef: e.citizen_id,\n        subAcc: e.sub_account_no,\n        accName: e.account_name,\n        accRef1: e.reference_1,\n        accRef2: e.reference_2,\n        accRef3: e.reference_3,\n        txnCrEntry: \"CR-ENTRY-00\" + index,\n        feeDrEntry: JSON.stringify(index) + \"%\",\n        feeDrAmount: (index + 1) * (index + 30),\n        feeCrEntry: JSON.stringify(index) + \".5%\",\n        feeCrAmount: (index + 1) * 100 + index,\n        amount: (index + 1) * 23 + index\n      });\n    });\n    setTransInfo(list1);\n    setPartnerInfo(list2);\n    setAccInfo(list3);\n    setTxnInfo(list4);\n    setallList(groupList);\n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    console.log(dataIndex); // this.setState({\n    //   searchText: selectedKeys[0],\n    //   searchedColumn: dataIndex,\n    // });\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters(); // this.setState({ searchText: '' });\n  };\n\n  useEffect(() => {\n    _buildListData();\n  }, []);\n  useEffect(() => {\n    _buildListData();\n  }, [customerServiceEnquiry.tmpListData]);\n\n  const PrevArrow = props => {\n    const {\n      className,\n      style,\n      onClick\n    } = props;\n    return __jsx(\"div\", {\n      className: className,\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        display: \"block\"\n      }),\n      onClick: onClick,\n      disabled: props.currentSlide == 0 ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, __jsx(LeftOutlined, {\n      style: {\n        fontSize: '32px',\n        color: \"#fba928\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const NextArrow = props => {\n    const {\n      className,\n      style,\n      onClick\n    } = props;\n    return __jsx(\"div\", {\n      className: className,\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        display: \"block\"\n      }),\n      onClick: onClick,\n      disabled: props.currentSlide == props.slideCount ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, __jsx(RightOutlined, {\n      style: {\n        fontSize: '32px',\n        color: \"#fba928\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const settings = {\n    dots: false,\n    infinite: false,\n    prevArrow: __jsx(PrevArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 20\n      }\n    }),\n    nextArrow: __jsx(NextArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }\n    })\n    /*nextArrow: <RightOutlined style={{\n      position: \"absolute\",\n      right: \"0\",\n      cursor: \"pointer\"\n    }} />,\n    prevArrow: <LeftOutlined style={{\n      position: \"absolute\",\n      left: \"0\",\n      cursor: \"pointer\"\n    }} />,*/\n\n  };\n  /*return (\n    <TcrbTabs defaultActiveKey=\"1\" onChange={callback}>\n      <TabPane tab=\"Transaction Info\" key=\"1\">\n        <Table\n          filtered={true}\n          onChange={(e) => setPage(e.current)}\n          onRow={(item, index) => {\n            return {\n              onClick: () => {\n                let tmpList = allList.find(e => e.no == item.no)\n                console.log(\"ITEM CLICK : \", tmpList)\n                customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n              },\n            }\n          }}\n          scroll={{ x: true }}\n          columns={clmTab1()} dataSource={transInfo}\n          pagination={{ current: page, }}\n        />\n      </TabPane>\n      <TabPane\n        tab=\"Partner Info\" key=\"2\">\n        <Table\n          filtered={true}\n          onChange={(e) => setPage(e.current)}\n          onRow={(item, index) => ({\n            onClick: () => {\n              let tmpList = allList.find(e => e.no == item.no)\n              console.log(\"ITEM CLICK : \", tmpList)\n              customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n            },\n          })}\n          columns={columnsPartnerInfo} dataSource={partnerInfo}\n          pagination={{ current: page, }}\n        />\n      </TabPane>\n      <TabPane\n        tab=\"Account Info\" key=\"3\">\n        <Table\n          filtered={true}\n          onChange={(e) => setPage(e.current)}\n          onRow={(item, index) => ({\n            onClick: () => {\n              let tmpList = allList.find(e => e.no == item.no)\n              console.log(\"ITEM CLICK : \", tmpList)\n              customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n            },\n          })}\n          columns={columnsAccInfo} dataSource={accInfo}\n          pagination={{ current: page, }}\n        />\n      </TabPane>\n      <TabPane\n        tab=\"Txn\" key=\"4\">\n        <Table\n          filtered={true}\n          onChange={(e) => setPage(e.current)}\n          onRow={(item, index) => ({\n            onClick: () => {\n              let tmpList = allList.find(e => e.no == item.no)\n              console.log(\"ITEM CLICK : \", tmpList)\n              customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n            },\n          })}\n          columns={columnsTxn} dataSource={txnInfo}\n          pagination={{ current: page, }}\n        />\n      </TabPane>\n    </TcrbTabs>\n  )*/\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, __jsx(Carousel, _extends({}, settings, {\n    arrows: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    columns: clmTab1(handleSearch, handleReset),\n    dataSource: transInfo,\n    pagination: {\n      current: page\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    onRow: (item, index) => ({\n      onClick: () => {\n        let tmpList = allList.find(e => e.no == item.no);\n        console.log(\"ITEM CLICK : \", tmpList);\n        customerServiceEnquiry.setTmpEnquiryRow(tmpList);\n      }\n    }),\n    columns: columnsPartnerInfo,\n    dataSource: partnerInfo,\n    pagination: {\n      current: page\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    onRow: (item, index) => ({\n      onClick: () => {\n        let tmpList = allList.find(e => e.no == item.no);\n        console.log(\"ITEM CLICK : \", tmpList);\n        customerServiceEnquiry.setTmpEnquiryRow(tmpList);\n      }\n    }),\n    columns: columnsAccInfo,\n    dataSource: accInfo,\n    pagination: {\n      current: page\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    onRow: (item, index) => ({\n      onClick: () => {\n        let tmpList = allList.find(e => e.no == item.no);\n        console.log(\"ITEM CLICK : \", tmpList);\n        customerServiceEnquiry.setTmpEnquiryRow(tmpList);\n      }\n    }),\n    columns: columnsTxn,\n    dataSource: txnInfo,\n    pagination: {\n      current: page\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }))));\n}));","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/table-result.js"],"names":["React","useState","useEffect","inject","observer","styled","columnsTranInfo","columnsPartnerInfo","columnsAccInfo","columnsTxn","clmTab1","Table","Tabs","Carousel","TcrbTabs","RightOutlined","LeftOutlined","data","moment","TabPane","callback","key","console","log","TableResult","props","customerServiceEnquiry","transInfo","setTransInfo","partnerInfo","setPartnerInfo","accInfo","setAccInfo","txnInfo","setTxnInfo","allList","setallList","page","setPage","_buildListData","arr","tmpListData","list1","list2","list3","list4","groupList","forEach","e","index","b","date","toString","format","push","no","tranDate","tranTime","time","entity","parent_partner_code","channel","tranType","transaction_type","tranSubType","prodType","product_type","accNo","main_account_no","amount","status","partnerTranRef","partner_transaction_reference","partnerReqId","request_id","bankTranRef","transaction_reference","mobileNo","JSON","stringify","tcrbAccRef","citizen_id","subAcc","sub_account_no","accName","account_name","accRef1","reference_1","accRef2","reference_2","accRef3","reference_3","txnDrEntry","txnCrEntry","feeDrEntry","feeDrAmount","feeCrEntry","feeCrAmount","handleSearch","selectedKeys","confirm","dataIndex","handleReset","clearFilters","PrevArrow","className","style","onClick","display","currentSlide","fontSize","color","NextArrow","slideCount","settings","dots","infinite","prevArrow","nextArrow","current","item","tmpList","find","setTmpEnquiryRow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport styled from 'styled-components';\nimport { columnsTranInfo, columnsPartnerInfo, columnsAccInfo, columnsTxn, clmTab1 } from './table-column';\nimport { Table, Tabs, Carousel } from 'antd';\nimport { TcrbTabs } from '../antd-styles/styles'\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\nimport { data } from './data'\nimport moment from 'moment'\nimport 'moment/locale/th'\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(\"CustomerEnquiry :: \", key);\n}\n\nexport const TableResult =\n  inject('customerServiceEnquiry')\n    (observer((props) => {\n      const { customerServiceEnquiry } = props\n      const [transInfo, setTransInfo] = useState(null)\n      const [partnerInfo, setPartnerInfo] = useState(null)\n      const [accInfo, setAccInfo] = useState(null)\n      const [txnInfo, setTxnInfo] = useState(null)\n      const [allList, setallList] = useState(null)\n      const [page, setPage] = useState(1)\n\n      const _buildListData = () => {\n        let arr = customerServiceEnquiry.tmpListData ? customerServiceEnquiry.tmpListData : data\n        let list1 = [], list2 = [], list3 = [], list4 = [], groupList = []\n        arr.forEach((e, index) => {\n          let b = moment((e.date).toString()).format('l')\n          list1.push({\n            key: index + 1,\n            no: index + 1, tranDate: b, tranTime: e.time,\n            // no: index + 1, tranDate: '29/6/2020', tranTime: e.time,\n            entity: e.parent_partner_code, channel: e.channel,\n            tranType: e.transaction_type, tranSubType: e.transaction_type,\n            prodType: e.product_type,\n            accNo: e.main_account_no, amount: (index + 1) * 1000, status: e.status\n          })\n          list2.push({\n            key: index + 1,\n            no: index + 1, partnerTranRef: e.partner_transaction_reference,\n            partnerReqId: e.request_id, bankTranRef: e.transaction_reference,\n            mobileNo: \"099345666\" + JSON.stringify(index)\n          })\n          list3.push({\n            key: index + 1,\n            no: index + 1,\n            tcrbAccRef: e.citizen_id, subAcc: e.sub_account_no,\n            accName: e.account_name, accRef1: e.reference_1,\n            accRef2: e.reference_2, accRef3: e.reference_3,\n          })\n          list4.push({\n            key: index + 1,\n            no: index + 1, txnDrEntry: \"TXD-DR-\" + index,\n            txnCrEntry: \"CR-ENTRY-00\" + index, feeDrEntry: JSON.stringify(index) + \"%\",\n            feeDrAmount: (index + 1) * (index + 30), feeCrEntry: JSON.stringify(index) + \".5%\",\n            feeCrAmount: ((index + 1) * 100) + index, amount: ((index + 1) * 23) + index\n          })\n          groupList.push({\n            key: index + 1,\n            no: index + 1, tranDate: e.date, tranTime: e.time,\n            entity: e.parent_partner_code, channel: e.channel,\n            tranType: e.transaction_type, tranSubType: e.transaction_type,\n            prodType: e.product_type,\n            accNo: e.main_account_no, amount: (index + 1) * 1000, status: e.status,\n            partnerReqId: e.request_id, bankTranRef: e.transaction_reference,\n            mobileNo: \"099345666\" + JSON.stringify(index),\n            tcrbAccRef: e.citizen_id, subAcc: e.sub_account_no,\n            accName: e.account_name, accRef1: e.reference_1,\n            accRef2: e.reference_2, accRef3: e.reference_3,\n            txnCrEntry: \"CR-ENTRY-00\" + index, feeDrEntry: JSON.stringify(index) + \"%\",\n            feeDrAmount: (index + 1) * (index + 30), feeCrEntry: JSON.stringify(index) + \".5%\",\n            feeCrAmount: ((index + 1) * 100) + index, amount: ((index + 1) * 23) + index\n          })\n        })\n\n        setTransInfo(list1)\n        setPartnerInfo(list2)\n        setAccInfo(list3)\n        setTxnInfo(list4)\n        setallList(groupList)\n      }\n\n      const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n        console.log(dataIndex)\n        // this.setState({\n        //   searchText: selectedKeys[0],\n        //   searchedColumn: dataIndex,\n        // });\n      };\n\n      const handleReset = clearFilters => {\n        clearFilters();\n        // this.setState({ searchText: '' });\n      };\n\n      useEffect(() => {\n        _buildListData()\n      }, [])\n\n      useEffect(() => {\n        _buildListData()\n      }, [customerServiceEnquiry.tmpListData])\n\n      const PrevArrow = (props) => {\n        const { className, style, onClick } = props\n        return (\n          <div\n            className={className}\n            style={{ ...style, display: \"block\" }}\n            onClick={onClick}\n            disabled={props.currentSlide == 0 ? true : false}\n          >\n            <LeftOutlined style={{ fontSize: '32px', color: \"#fba928\" }} />\n          </div>\n        )\n      }\n\n      const NextArrow = (props) => {\n        const { className, style, onClick } = props\n        return (\n          <div\n            className={className}\n            style={{ ...style, display: \"block\" }}\n            onClick={onClick}\n            disabled={props.currentSlide == props.slideCount ? true : false}\n          >\n            <RightOutlined style={{ fontSize: '32px', color: \"#fba928\" }} />\n          </div>\n        )\n      }\n      const settings = {\n        dots: false,\n        infinite: false,\n        prevArrow: <PrevArrow />,\n        nextArrow: <NextArrow />\n        /*nextArrow: <RightOutlined style={{\n          position: \"absolute\",\n          right: \"0\",\n          cursor: \"pointer\"\n        }} />,\n        prevArrow: <LeftOutlined style={{\n          position: \"absolute\",\n          left: \"0\",\n          cursor: \"pointer\"\n        }} />,*/\n      }\n\n      /*return (\n        <TcrbTabs defaultActiveKey=\"1\" onChange={callback}>\n          <TabPane tab=\"Transaction Info\" key=\"1\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => {\n                return {\n                  onClick: () => {\n                    let tmpList = allList.find(e => e.no == item.no)\n                    console.log(\"ITEM CLICK : \", tmpList)\n                    customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                  },\n                }\n              }}\n              scroll={{ x: true }}\n              columns={clmTab1()} dataSource={transInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"Partner Info\" key=\"2\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => ({\n                onClick: () => {\n                  let tmpList = allList.find(e => e.no == item.no)\n                  console.log(\"ITEM CLICK : \", tmpList)\n                  customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                },\n              })}\n              columns={columnsPartnerInfo} dataSource={partnerInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"Account Info\" key=\"3\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => ({\n                onClick: () => {\n                  let tmpList = allList.find(e => e.no == item.no)\n                  console.log(\"ITEM CLICK : \", tmpList)\n                  customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                },\n              })}\n              columns={columnsAccInfo} dataSource={accInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"Txn\" key=\"4\">\n            <Table\n              filtered={true}\n              onChange={(e) => setPage(e.current)}\n              onRow={(item, index) => ({\n                onClick: () => {\n                  let tmpList = allList.find(e => e.no == item.no)\n                  console.log(\"ITEM CLICK : \", tmpList)\n                  customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                },\n              })}\n              columns={columnsTxn} dataSource={txnInfo}\n              pagination={{ current: page, }}\n            />\n          </TabPane>\n        </TcrbTabs>\n      )*/\n      return (\n        <div>\n\n          <Carousel {...settings} arrows={true} >\n            <div >\n              <Table\n                filtered={true}\n                onChange={(e) => setPage(e.current)}\n                columns={clmTab1(handleSearch, handleReset)} dataSource={transInfo}\n                pagination={{ current: page, }}\n                size=\"small\"\n              />\n            </div>\n            <div>\n              <Table\n                filtered={true}\n                onChange={(e) => setPage(e.current)}\n                onRow={(item, index) => ({\n                  onClick: () => {\n                    let tmpList = allList.find(e => e.no == item.no)\n                    console.log(\"ITEM CLICK : \", tmpList)\n                    customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                  },\n                })}\n                columns={columnsPartnerInfo} dataSource={partnerInfo}\n                pagination={{ current: page, }}\n                size=\"small\"\n              />\n            </div>\n            <div>\n              <Table\n                filtered={true}\n                onChange={(e) => setPage(e.current)}\n                onRow={(item, index) => ({\n                  onClick: () => {\n                    let tmpList = allList.find(e => e.no == item.no)\n                    console.log(\"ITEM CLICK : \", tmpList)\n                    customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                  },\n                })}\n                columns={columnsAccInfo} dataSource={accInfo}\n                pagination={{ current: page, }}\n                size=\"small\"\n              />\n            </div>\n            <div>\n              <Table\n                filtered={true}\n                onChange={(e) => setPage(e.current)}\n                onRow={(item, index) => ({\n                  onClick: () => {\n                    let tmpList = allList.find(e => e.no == item.no)\n                    console.log(\"ITEM CLICK : \", tmpList)\n                    customerServiceEnquiry.setTmpEnquiryRow(tmpList)\n                  },\n                })}\n                columns={columnsTxn} dataSource={txnInfo}\n                pagination={{ current: page, }}\n                size=\"small\"\n              />\n            </div>\n          </Carousel>\n\n        </div>\n      )\n\n    }))\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}