{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/manage-partner.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../../i18n';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { addKeyToDataSource } from '../../data-utility';\nvar managePartner = inject('businessParametersSetupStore')(observer(function (props) {\n  var businessParametersSetupStore = props.businessParametersSetupStore,\n      t = props.t;\n\n  var prepareAllLimitToSubmitAndUpdate = function prepareAllLimitToSubmitAndUpdate() {\n    if (viewSpecificProduct) {\n      // submitAddSpecificLimit()\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      }, \" Add Partner \", selectPartnerAndProduct.type, \" \")));\n    } else {\n      // submitChangeProductLimitSelect()\n      setModalString( //waiting for confirm task\n      __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, \" Change Product Code \", selectPartnerAndProduct.partner_code, \" Limit \"), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, \"for \", selectPartnerAndProduct.partner_code, \"/\", selectPartnerAndProduct.partner_abbreviation, \" Channel/Partner !!!\")));\n    }\n\n    setVisble(true);\n    setTitleModal('Confirm');\n    setModalType(\"confirm\");\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      padding: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Product_Code\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, businessParametersSetupStore.productLimitDetail.product_type), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Product_Description\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, businessParametersSetupStore.productLimitDetail.product_description)), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"All-Channel Txn Limit\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, businessParametersSetupStore.productLimitDetail.transaction_limit), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"All-Channel Daily Limit\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, businessParametersSetupStore.productLimitDetail.daily_limit)), __jsx(Row, {\n    justify: \"end\",\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      return goBackProductList();\n    },\n    shape: \"round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Back\")), __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    shape: \"round\",\n    className: \"primary\",\n    onClick: function onClick() {\n      prepareAllLimitToSubmitAndUpdate();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Submit\"))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }));\n}));\nexport default withTranslation('common')(managePartner);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/manage-partner.js"],"names":["React","useState","useEffect","inject","observer","withTranslation","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","TcrbButton","TcrbPopconfirm","addKeyToDataSource","managePartner","props","businessParametersSetupStore","t","prepareAllLimitToSubmitAndUpdate","viewSpecificProduct","setModalString","textAlign","selectPartnerAndProduct","type","partner_code","partner_abbreviation","setVisble","setTitleModal","setModalType","padding","productLimitDetail","product_type","product_description","transaction_limit","daily_limit","marginTop","goBackProductList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../../i18n'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider } from 'antd'\n\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { addKeyToDataSource } from '../../data-utility'\n\nconst managePartner =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const { businessParametersSetupStore, t } = props\n\n      const prepareAllLimitToSubmitAndUpdate = () => {\n        if (viewSpecificProduct) {\n          // submitAddSpecificLimit()\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p> Add Partner {selectPartnerAndProduct.type} </p>\n              {/* <p>for {selectPartnerAndProduct.partner_code}/{selectPartnerAndProduct.partner_abbreviation} Channel/Partner !!!</p> */}\n            </div>\n          )\n        } else {\n          // submitChangeProductLimitSelect()\n\n          setModalString(\n            //waiting for confirm task\n            <div style={{ textAlign: \"center\" }}>\n              <p> Change Product Code {selectPartnerAndProduct.partner_code} Limit </p>\n              <p>for {selectPartnerAndProduct.partner_code}/{selectPartnerAndProduct.partner_abbreviation} Channel/Partner !!!</p>\n            </div>\n          )\n        }\n        setVisble(true)\n        setTitleModal('Confirm')\n        setModalType(\"confirm\")\n      }\n\n      return (\n        <div style={{ padding: 24 }}>\n          <Row gutter={[4, 24]}>\n            <Col span={6}>Product_Code</Col>\n            <Col span={6}>{businessParametersSetupStore.productLimitDetail.product_type}</Col>\n            <Col span={6}>Product_Description</Col>\n            <Col span={6}>{businessParametersSetupStore.productLimitDetail.product_description}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={6}>All-Channel Txn Limit</Col>\n            <Col span={6}>{businessParametersSetupStore.productLimitDetail.transaction_limit}</Col>\n            <Col span={6}>All-Channel Daily Limit</Col>\n            <Col span={6}>{businessParametersSetupStore.productLimitDetail.daily_limit}</Col>\n          </Row>\n          <Row justify=\"end\" style={{ marginTop: 8 }}>\n            <Col span={2}>\n              <TcrbButton className=\"default\" onClick={() => goBackProductList()} shape=\"round\">Back</TcrbButton>\n            </Col>\n            <Col span={2}>\n              <TcrbButton shape=\"round\" className=\"primary\" onClick={() => { prepareAllLimitToSubmitAndUpdate() }}>Submit</TcrbButton>\n            </Col>\n          </Row>\n          <Divider />\n          {/* <Table\n            bordered\n            dataSource={dataSource}\n            columns={columnPartnerList}\n            size=\"small\"\n          /> */}\n        </div>\n      )\n    }))\nexport default withTranslation('common')(managePartner)\n"]},"metadata":{},"sourceType":"module"}