{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd';\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search';\nimport SimpleModal from '../simple-modal';\nimport SimpleSwitch from '../simple-switch';\nimport { useStores } from '../../hooks/use-stores';\nimport { toJS } from 'mobx';\nconst StyledA = styled.a.withConfig({\n  displayName: \"otp-unlocking__StyledA\",\n  componentId: \"r234ff-0\"\n})([\"display:initial;padding-left:\", \"px !important;color:#F88008 !important;text-decoration-color:#F88008;text-decoration-line:underline;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSpan = styled.span.withConfig({\n  displayName: \"otp-unlocking__StyledSpan\",\n  componentId: \"r234ff-1\"\n})([\"display:initial;padding-left:\", \"px !important;\"], ({\n  theme\n}) => theme.spacing.medium);\nconst StyledSwitch = styled(Switch).withConfig({\n  displayName: \"otp-unlocking__StyledSwitch\",\n  componentId: \"r234ff-2\"\n})([\"\", \"\"], ({\n  defaultChecked\n}) => defaultChecked && `\n      background-color: #F88008 !important;\n  `);\nexport default function OtpUnlocking() {\n  const {\n    0: idCard,\n    1: setIdCard\n  } = useState('');\n  const {\n    0: isSearch,\n    1: setIsSearch\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: stringSwitch,\n    1: setStringSwitch\n  } = useState([]); // const [stringSwitch, setStringSwitch] = useState([\n  //   { accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true },\n  //   { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }\n  // ])\n\n  const mockDataSwitch = [{\n    accountNumber: '123123123123',\n    accountType: 'Binding to TCRB Mobile Banking',\n    accountStatus: true\n  }, {\n    accountNumber: '00993445123123',\n    accountType: 'Binding to Micro Pay',\n    accountStatus: false\n  }]; // const [stringSwitch, setStringSwitch] = useState([mockDataSwitch])\n\n  const {\n    customerServicesMenuStore\n  } = useStores();\n  useEffect(() => {\n    convertArrayObjectToArray([{\n      accountNumber: '123123123123',\n      accountType: 'Binding to TCRB Mobile Banking',\n      accountStatus: true\n    }, {\n      accountNumber: '00993445123123',\n      accountType: 'Binding to Micro Pay',\n      accountStatus: false\n    }]).then(result => {\n      setStringSwitch(result);\n    });\n    console.log('render');\n  }, [visible]);\n\n  const searchIdCardNumber = value => {\n    console.log('eiei search:' + value);\n    setIdCard(value);\n    setIsSearch(true);\n  };\n\n  const convertArrayObjectToArray = arrayObject => {\n    return new Promise((resolve, reject) => {\n      let result = arrayObject.map(a => [a.accountStatus, a.accountNumber, a.accountType]);\n      resolve(result);\n    });\n  };\n\n  const replaceNewDataForSetString = () => {\n    let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber));\n    setStringSwitch([...newArray, toJS(customerServicesMenuStore.accountSelected)]);\n  };\n\n  const hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  const onChange = (switchSelected, index) => {\n    console.log(switchSelected, index);\n\n    if (switchSelected === true) {\n      customerServicesMenuStore.accountSelected = mockDataSwitch[index];\n      setVisble(true); // setIsChecked(true)\n      // setModalString(\n      //   <div style={{ textAlign: \"center\" }}>\n      //     <p>Unlocking OTP!!</p>\n      //     <p>Account Number {customerServicesMenuStore.accountSelected.accountNumber}</p>\n      //   </div>\n      // )\n    } else {// setIsChecked(false)\n      }\n  };\n\n  const unlockOTP = () => {\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false;\n    setVisble(false);\n    replaceNewDataForSetString();\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(SimpleSearch, {\n    search: searchIdCardNumber,\n    prefixWording: \"ID Card Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), isSearch ? __jsx(SimpleSwitch, {\n    data: stringSwitch,\n    onChange: (switchSelected, index) => onChange(switchSelected, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }) : '', __jsx(SimpleModal, {\n    onOk: () => unlockOTP(),\n    onCancel: () => setVisble(false),\n    okText: \"Confirm\",\n    cancelText: \"Cancel\",\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-services-menu/otp-unlocking.js"],"names":["React","useState","useEffect","Input","Row","Col","Layout","Modal","Switch","styled","SimpleSearch","SimpleModal","SimpleSwitch","useStores","toJS","StyledA","a","theme","spacing","medium","StyledSpan","span","StyledSwitch","defaultChecked","OtpUnlocking","idCard","setIdCard","isSearch","setIsSearch","visible","setVisble","isChecked","setIsChecked","modalString","setModalString","stringSwitch","setStringSwitch","mockDataSwitch","accountNumber","accountType","accountStatus","customerServicesMenuStore","convertArrayObjectToArray","then","result","console","log","searchIdCardNumber","value","arrayObject","Promise","resolve","reject","map","replaceNewDataForSetString","newArray","filter","accountInfo","accountSelected","hideModal","setState","onChange","switchSelected","index","unlockOTP","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Input, Row, Col, Layout, Modal, Switch } from 'antd'\nimport styled from 'styled-components';\nimport SimpleSearch from '../simple-search'\nimport SimpleModal from '../simple-modal'\nimport SimpleSwitch from '../simple-switch'\nimport { useStores } from '../../hooks/use-stores'\nimport { toJS } from 'mobx';\n\n\nconst StyledA = styled.a`\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n  color: #F88008 !important;\n  text-decoration-color: #F88008;\n  text-decoration-line: underline;\n`\nconst StyledSpan = styled.span`\n\n  display: initial;\n  padding-left: ${({ theme }) => theme.spacing.medium}px !important;\n`\nconst StyledSwitch = styled(Switch)`\n\n      ${({ defaultChecked }) => defaultChecked && `\n      background-color: #F88008 !important;\n  `}\n`\n\nexport default function OtpUnlocking\n  () {\n  const [idCard, setIdCard] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n  const [visible, setVisble] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n  const [modalString, setModalString] = useState('')\n  const [stringSwitch, setStringSwitch] = useState([])\n  // const [stringSwitch, setStringSwitch] = useState([\n  //   { accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true },\n  //   { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }\n  // ])\n  const mockDataSwitch = [\n    { accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true },\n    { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }\n  ]\n  // const [stringSwitch, setStringSwitch] = useState([mockDataSwitch])\n  const { customerServicesMenuStore } = useStores()\n  useEffect(() => {\n    convertArrayObjectToArray([\n      { accountNumber: '123123123123', accountType: 'Binding to TCRB Mobile Banking', accountStatus: true },\n      { accountNumber: '00993445123123', accountType: 'Binding to Micro Pay', accountStatus: false }\n    ]).then(result => {\n      setStringSwitch(result)\n    })\n    console.log('render')\n  }, [visible])\n\n  const searchIdCardNumber = (value) => {\n    console.log('eiei search:' + value)\n    setIdCard(value)\n    setIsSearch(true)\n  }\n  const convertArrayObjectToArray = (arrayObject) => {\n    return new Promise((resolve, reject) => {\n      let result = arrayObject.map(a => [a.accountStatus, a.accountNumber, a.accountType]);\n      resolve(result)\n    })\n  }\n  const replaceNewDataForSetString = () => {\n    let newArray = stringSwitch.filter(accountInfo => accountInfo.accountNumber !== toJS(customerServicesMenuStore.accountSelected.accountNumber))\n    setStringSwitch([...newArray, toJS(customerServicesMenuStore.accountSelected)])\n  }\n\n  const hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  const onChange = (switchSelected, index) => {\n    console.log(switchSelected, index)\n    if (switchSelected === true) {\n      customerServicesMenuStore.accountSelected = mockDataSwitch[index]\n      setVisble(true)\n      // setIsChecked(true)\n      // setModalString(\n      //   <div style={{ textAlign: \"center\" }}>\n      //     <p>Unlocking OTP!!</p>\n      //     <p>Account Number {customerServicesMenuStore.accountSelected.accountNumber}</p>\n      //   </div>\n      // )\n    } else {\n      // setIsChecked(false)\n    }\n  }\n\n  const unlockOTP = () => {\n    //some action\n    customerServicesMenuStore.accountSelected.accountStatus = false\n    setVisble(false)\n    replaceNewDataForSetString()\n  }\n\n\n  return (\n    <div style={{ margin: 20 }}>\n      <Row gutter={[4, 24]}>\n        <SimpleSearch search={searchIdCardNumber} prefixWording=\"ID Card Number\" />\n      </Row>\n      {(isSearch) ? (\n        <SimpleSwitch\n          data={stringSwitch}\n          onChange={(switchSelected, index) => onChange(switchSelected, index)} />\n      ) : ('')}\n      <SimpleModal\n        onOk={() => unlockOTP()}\n        onCancel={() => setVisble(false)}\n        okText=\"Confirm\"\n        cancelText=\"Cancel\"\n        modalString={modalString}\n        visible={visible}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}