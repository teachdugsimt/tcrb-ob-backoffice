{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useMemo, memo } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport moment from 'moment';\nimport { checkDefaultStatus, addKeyToDataSource } from '../../data-utility';\nimport SimpleInput from '../../simple-input';\nimport FormModalUser from './form-modal-user';\nimport { toJS } from 'mobx';\nconst {\n  Option\n} = Select;\nconst UserList = inject('userAccessManagementStore')(observer(props => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: userList,\n    1: setUserList\n  } = useState([]);\n  const {\n    0: testSupervisor,\n    1: setTestSupervisor\n  } = useState([]);\n  const {\n    0: modalTitle,\n    1: setModalTitle\n  } = useState(\"\");\n  const {\n    0: textCancel,\n    1: setTextCancel\n  } = useState(\"Cancel\");\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState(\"\");\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState('confirm');\n  const {\n    0: modalFromVisible,\n    1: setModalFromVisible\n  } = useState(false);\n  const [form] = Form.useForm();\n  const {\n    userAccessManagementStore\n  } = props;\n  const dateFormat = 'YYYY-MM-DD';\n  useEffect(() => {\n    userAccessManagementStore.getDataUser();\n  }, []);\n  useEffect(() => {\n    if (userAccessManagementStore.userList.length >= 0) {\n      addKeyToDataSource(userAccessManagementStore.userList).then(result => {\n        setUserList(result);\n      });\n    }\n  }, [userAccessManagementStore.userList]);\n\n  const testAddSupervisor = id => {\n    setTestSupervisor([{\n      id: 0,\n      name: 'sup_1'\n    }, {\n      id: 1,\n      name: 'sup_2'\n    }, {\n      id: 2,\n      name: 'sup_3'\n    }, {\n      id: 3,\n      name: 'sup_4'\n    }, {\n      id: 4,\n      name: 'sup_5'\n    }]);\n  }; // const MemoModalCreateForm = useMemo((visible, onCreate, onCancel, testSupervisor) => CollectionCreateForm)\n\n\n  const CollectionCreateForm = ({\n    visible,\n    onCreate,\n    onCancel,\n    testSupervisor\n  }) => {\n    return __jsx(Modal, {\n      visible: visible,\n      title: \"Add new User\",\n      okText: \"Submit\",\n      cancelText: \"Cancel\",\n      onCancel: onCancel,\n      width: 900,\n      onOk: () => {\n        form.validateFields().then(values => {\n          form.resetFields();\n          onCreate(values);\n        }).catch(info => {\n          console.log('Validate Failed:', info);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, __jsx(Form, {\n      form: form,\n      layout: \"vertical\",\n      name: \"form_in_modal\",\n      initialValues: {\n        modifier: 'public'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"Employee ID\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"employee_code\",\n      rules: [{\n        required: true,\n        message: 'Please input Employee Id!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Supervisor\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"supervisor_id\",\n      rules: [{\n        required: true,\n        message: 'Please input Supervisor!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, \"Name\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please input Name!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"Surname\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"surname\",\n      rules: [{\n        required: true,\n        message: 'Please input Surname!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, \"Username\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"user_name\",\n      rules: [{\n        required: true,\n        message: 'Please input Username!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"Email\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"email\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input Email!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \"Join Date\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"join_date\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      format: dateFormat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, \"Last working date\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"last_working_date\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      format: dateFormat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, \"Status\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"status\",\n      rules: [{\n        required: true,\n        message: 'Please input Status!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100'\n      },\n      placeholder: \"Please select\",\n      onChange: value => testAddSupervisor(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, \"Section\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, {\n      name: \"section_id\",\n      rules: [{\n        required: true,\n        message: 'Please input Section!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => testAddSupervisor(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    }, __jsx(Option, {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }\n    }, \"option1\")))))));\n  };\n\n  const onCreate = values => {\n    console.log('Received values of form: ', values);\n\n    let request = _objectSpread(_objectSpread({}, values), {}, {\n      join_date: moment(values.join_data).format('YYYY-MM-DD'),\n      last_working_date: moment(values.last_working_date).format('YYYY-MM-DD')\n    });\n\n    console.log(request);\n    userAccessManagementStore.submitAddNewUser(request);\n    setVisible(false);\n  };\n\n  const viewUserDetail = record => {\n    userAccessManagementStore.userSelected = record;\n    userAccessManagementStore.nextPageIsManageUser = true;\n  };\n\n  const selectGroup = group => {\n    console.log(group);\n    setModalType('');\n    setTitle('Group in User');\n    addKeyToDataSource(group).then(result => {\n      /* setModalString(\n        <div>\n          <Table\n            bordered\n            dataSource={result}\n            columns={columnGroup}\n            size=\"small\"\n          />\n        </div>\n      ) */\n    });\n    setVisible(true);\n  };\n\n  const renderActionUser = record => {\n    if (record.request_status == 'APPROVE') {\n      return __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        onClick: () => viewUserDetail(record),\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#FBA928'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }\n      }, \"Deactivate\")));\n    } else if (record.request_status == 'PENDING') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  const renderGroup = record => {\n    console.log(toJS(record.map_user_groups.length));\n    let lengthGroup = record.map_user_groups.length;\n\n    if (record.map_user_groups.length = 0) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }\n      }, \"0 Groups\");\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        onClick: () => selectGroup(record.map_user_groups),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }\n      }, lengthGroup, \" Groups\"));\n    }\n  };\n\n  const columnUser = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: (text, record) => checkDefaultStatus(record.status, record.request_status)\n  }, {\n    title: 'Username',\n    dataIndex: 'username',\n    editable: true // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Name',\n    dataIndex: 'name' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Surname',\n    dataIndex: 'surname' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Supervisor',\n    dataIndex: 'supervisor' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Department',\n    dataIndex: 'department' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Groups',\n    dataIndex: 'groups',\n    render: (text, record) => renderGroup(record)\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: (text, record) => renderActionUser(record)\n  }];\n  const columnGroup = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: (text, record) => checkDefaultStatus(record.status, record.request_status)\n  }, {\n    title: 'Group name',\n    dataIndex: 'name',\n    render: (text, record) => record.map_user_groups.group.name\n  }];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: () => setModalFromVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  }, \"Add User\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: userList,\n    columns: columnUser,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }\n  }), __jsx(FormModalUser, {\n    visible: modalFromVisible,\n    onCreate: onCreate,\n    onCancel: () => {\n      setVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleModel, {\n    title: modalTitle,\n    type: modalType,\n    onCancel: () => setVisible(false),\n    textCancel: textCancel,\n    width: 600,\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }\n  }));\n}));\nexport default UserList;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js"],"names":["React","useState","useEffect","useMemo","memo","Table","Row","Col","Menu","Card","Input","Select","InputNumber","Divider","Button","Modal","Drawer","Form","DatePicker","Space","TcrbButton","TcrbPopconfirm","inject","observer","moment","checkDefaultStatus","addKeyToDataSource","SimpleInput","FormModalUser","toJS","Option","UserList","props","visible","setVisible","userList","setUserList","testSupervisor","setTestSupervisor","modalTitle","setModalTitle","textCancel","setTextCancel","modalString","setModalString","modalType","setModalType","modalFromVisible","setModalFromVisible","form","useForm","userAccessManagementStore","dateFormat","getDataUser","length","then","result","testAddSupervisor","id","name","CollectionCreateForm","onCreate","onCancel","validateFields","values","resetFields","catch","info","console","log","modifier","padding","required","message","paddingLeft","width","value","type","request","join_date","join_data","format","last_working_date","submitAddNewUser","viewUserDetail","record","userSelected","nextPageIsManageUser","selectGroup","group","setTitle","renderActionUser","request_status","textAlign","marginRight","color","renderGroup","map_user_groups","lengthGroup","columnUser","title","dataIndex","render","text","status","editable","columnGroup"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo, memo } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\n\nimport moment from 'moment';\n\nimport { checkDefaultStatus, addKeyToDataSource } from '../../data-utility'\nimport SimpleInput from '../../simple-input'\nimport FormModalUser from './form-modal-user';\nimport { toJS } from 'mobx';\n\nconst { Option } = Select;\n\nconst UserList = inject('userAccessManagementStore')\n  (observer((props) => {\n    const [visible, setVisible] = useState(false)\n    const [userList, setUserList] = useState([])\n    const [testSupervisor, setTestSupervisor] = useState([])\n    const [modalTitle, setModalTitle] = useState(\"\")\n    const [textCancel, setTextCancel] = useState(\"Cancel\")\n    const [modalString, setModalString] = useState(\"\")\n    const [modalType, setModalType] = useState('confirm')\n    const [modalFromVisible, setModalFromVisible] = useState(false)\n    const [form] = Form.useForm();\n    const { userAccessManagementStore } = props\n    const dateFormat = 'YYYY-MM-DD'\n\n    useEffect(() => {\n      userAccessManagementStore.getDataUser()\n    }, [])\n\n    useEffect(() => {\n      if (userAccessManagementStore.userList.length >= 0) {\n        addKeyToDataSource(userAccessManagementStore.userList).then(result => {\n          setUserList(result)\n        })\n      }\n    }, [userAccessManagementStore.userList])\n\n    const testAddSupervisor = (id) => {\n      setTestSupervisor([\n        { id: 0, name: 'sup_1' },\n        { id: 1, name: 'sup_2' },\n        { id: 2, name: 'sup_3' },\n        { id: 3, name: 'sup_4' },\n        { id: 4, name: 'sup_5' },\n\n      ])\n    }\n\n    // const MemoModalCreateForm = useMemo((visible, onCreate, onCancel, testSupervisor) => CollectionCreateForm)\n    const CollectionCreateForm = ({ visible, onCreate, onCancel, testSupervisor }) => {\n      return (\n        <Modal\n          visible={visible}\n          title=\"Add new User\"\n          okText=\"Submit\"\n          cancelText=\"Cancel\"\n          onCancel={onCancel}\n          width={900}\n          onOk={() => {\n            form\n              .validateFields()\n              .then(values => {\n                form.resetFields();\n                onCreate(values);\n              })\n              .catch(info => {\n                console.log('Validate Failed:', info);\n              });\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"form_in_modal\"\n            initialValues={{\n              modifier: 'public',\n            }}\n          >\n\n            <Row >\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Employee ID\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"employee_code\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Employee Id!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Supervisor\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"supervisor_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Supervisor!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => null}\n                  >\n                    {/* {testSupervisor.map((item, index) => <Option key={index} value={item.id}>{item.name}</Option>)} */}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row >\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Name\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Name!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Surname\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"surname\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Surname!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Username\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"user_name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Username!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Email\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"email\"\n                  rules={[\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input Email!',\n                    },\n                  ]}\n                >\n                  <SimpleInput />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Join Date\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"join_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: '100%' }} format={dateFormat} />\n\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Last working date\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"last_working_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input the title of collection!',\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: '100%' }} format={dateFormat} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={4} style={{ padding: 4 }}>\n                <span>\n                  Status\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"status\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Status!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => testAddSupervisor(value)}\n                  >\n                    {/* {children} */}\n\n                  </Select>\n\n                </Form.Item>\n              </Col>\n              <Col span={4} style={{ paddingLeft: 16 }}>\n                <span>\n                  Section\n              </span>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"section_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input Section!',\n                    },\n                  ]}\n                >\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Please select\"\n                    onChange={(value) => testAddSupervisor(value)}\n                  >\n                    <Option value=\"1\">option1</Option>\n                    {/* {children} */}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n      );\n    }\n\n    const onCreate = values => {\n      console.log('Received values of form: ', values);\n      let request = {\n        ...values,\n        join_date: moment(values.join_data).format('YYYY-MM-DD'),\n        last_working_date: moment(values.last_working_date).format('YYYY-MM-DD')\n      }\n      console.log(request)\n      userAccessManagementStore.submitAddNewUser(request)\n      setVisible(false);\n    }\n\n    const viewUserDetail = (record) => {\n      userAccessManagementStore.userSelected = record\n      userAccessManagementStore.nextPageIsManageUser = true\n    }\n\n    const selectGroup = (group) => {\n      console.log(group)\n      setModalType('')\n      setTitle('Group in User')\n\n      addKeyToDataSource(group).then(result => {\n        /* setModalString(\n          <div>\n            <Table\n              bordered\n              dataSource={result}\n              columns={columnGroup}\n              size=\"small\"\n            />\n          </div>\n        ) */\n      })\n      setVisible(true)\n    }\n\n    const renderActionUser = (record) => {\n      if (record.request_status == 'APPROVE') {\n        return (\n          <div style={{ textAlign: \"center\" }}>\n            <a onClick={() => viewUserDetail(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n              Edit\n          </a>\n            <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n              <a style={{ color: '#FBA928' }}>Deactivate</a>\n            </TcrbPopconfirm>\n          </div>\n        )\n      } else if (record.request_status == 'PENDING') {\n        return null\n      } else {\n        return null\n      }\n    }\n\n    const renderGroup = (record) => {\n      console.log(toJS(record.map_user_groups.length))\n      let lengthGroup = record.map_user_groups.length\n      if (record.map_user_groups.length = 0) {\n        return (\n          <span>0 Groups</span>\n        )\n      } else {\n        return (\n          <div>\n            <a onClick={() => selectGroup(record.map_user_groups)}>{lengthGroup} Groups</a>\n          </div>\n        )\n      }\n    }\n\n    const columnUser = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkDefaultStatus(record.status, record.request_status)\n      },\n      {\n        title: 'Username',\n        dataIndex: 'username',\n        editable: true,\n        // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n      },\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Surname',\n        dataIndex: 'surname',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Supervisor',\n        dataIndex: 'supervisor',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Department',\n        dataIndex: 'department',\n        // render: (text, record) => renderSection(record)\n      },\n      {\n        title: 'Groups',\n        dataIndex: 'groups',\n        render: (text, record) => renderGroup(record)\n      },\n      {\n        title: 'Action',\n        dataIndex: 'operation',\n        width: '10%',\n        render: (text, record) => renderActionUser(record)\n      }\n    ]\n\n    const columnGroup = [\n      {\n        title: '',\n        dataIndex: 'status',\n        width: '5%',\n        render: (text, record) => checkDefaultStatus(record.status, record.request_status)\n      },\n      {\n        title: 'Group name',\n        dataIndex: 'name',\n        render: (text, record) => record.map_user_groups.group.name\n      }\n    ]\n\n\n    return (\n      <div>\n        <Row gutter={[4, 24]}>\n          <Col span={2}>\n            <TcrbButton className=\"primary\" onClick={() => setModalFromVisible(true)} >Add User</TcrbButton>\n          </Col>\n        </Row>\n        <Table\n          bordered\n          dataSource={userList}\n          columns={columnUser}\n          size=\"small\"\n        />\n        {/* <CollectionCreateForm\n          visible={visible}\n          onCreate={onCreate}\n          onCancel={() => {\n            setVisible(false);\n          }}\n        /> */}\n        <FormModalUser\n          visible={modalFromVisible}\n          onCreate={onCreate}\n          onCancel={() => {\n            setVisible(false);\n          }}\n        />\n        <SimpleModel\n          title={modalTitle}\n          type={modalType}\n          onCancel={() => setVisible(false)}\n          textCancel={textCancel}\n          width={600}\n          modalString={modalString}\n          visible={visible}\n        />\n        {/* <MemoModalCreateForm\n          visible={visible}\n          onCreate={onCreate}\n          onCancel={() => {\n            setVisible(false);\n          }}\n          testSupervisor={testSupervisor}\n        /> */}\n      </div>\n    )\n  }))\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}