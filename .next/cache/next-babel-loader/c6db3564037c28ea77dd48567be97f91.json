{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department/manage-department.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { inject, observer } from 'mobx-react';\nimport { orange, green, gold } from '@ant-design/colors';\n\nconst ManageDepartment = () => {\n  const onEditSection = () => {\n    setAddSection(true);\n    setModalType('');\n  };\n\n  const renderActionSectionAndTeam = record => {\n    const editable = isEditingSection(record);\n\n    if (record.status === '1') {\n      return editable ? __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Save?\",\n        onConfirm: () => save(record.key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, \"Save\")), __jsx(TcrbPopconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: () => setEditingKeySection(''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))) : __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        disabled: editingKeySection !== '',\n        onClick: () => editSection(record),\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#3e3e3e'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, \"Deactivate\")));\n    } else if (record.status === '2') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default ManageDepartment;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/department/manage-department.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Button","Modal","Drawer","TcrbButton","TcrbPopconfirm","inject","observer","orange","green","gold","ManageDepartment","onEditSection","setAddSection","setModalType","renderActionSectionAndTeam","record","editable","isEditingSection","status","save","key","marginRight","setEditingKeySection","color","textAlign","editingKeySection","editSection"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,IAArD,EAA2DC,WAA3D,EAAwEC,OAAxE,EAAiFC,MAAjF,EAAyFC,KAAzF,EAAgGC,MAAhG,QAA8G,MAA9G;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,0BAA3C;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,oBAApC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAG7B,QAAMC,aAAa,GAAG,MAAM;AAC1BC,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAHD;;AAMA,QAAMC,0BAA0B,GAAIC,MAAD,IAAY;AAC7C,UAAMC,QAAQ,GAAGC,gBAAgB,CAACF,MAAD,CAAjC;;AACA,QAAIA,MAAM,CAACG,MAAP,KAAkB,GAAtB,EAA2B;AACzB,aAAOF,QAAQ,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,eAAtB;AAAsC,QAAA,SAAS,EAAE,MAAMG,IAAI,CAACJ,MAAM,CAACK,GAAR,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAME,MAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,iBAAtB;AAAwC,QAAA,SAAS,EAAE,MAAMC,oBAAoB,CAAC,EAAD,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CANF,CADa,GAYX;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAG,QAAA,QAAQ,EAAEC,iBAAiB,KAAK,EAAnC;AAAuC,QAAA,OAAO,EAAE,MAAMC,WAAW,CAACX,MAAD,CAAjE;AAA2E,QAAA,KAAK,EAAE;AAAEM,UAAAA,WAAW,EAAE,CAAf;AAAkBE,UAAAA,KAAK,EAAE;AAAzB,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAME,MAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CANF,CAZJ;AA2BD,KA5BD,MA4BO,IAAIR,MAAM,CAACG,MAAP,KAAkB,GAAtB,EAA2B;AAChC,aAAO,IAAP;AACD,KAFM,MAEA;AACL,aAAO,IAAP;AACD;AACF,GAnCD;;AAoCA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAlDD;;AAoDA,eAAeR,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Button, Modal, Drawer } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { inject, observer } from 'mobx-react'\nimport { orange, green, gold } from '@ant-design/colors';\n\nconst ManageDepartment = () => {\n\n\n  const onEditSection = () => {\n    setAddSection(true)\n    setModalType('')\n  }\n\n\n  const renderActionSectionAndTeam = (record) => {\n    const editable = isEditingSection(record);\n    if (record.status === '1') {\n      return editable ? (\n        <span>\n          <TcrbPopconfirm title=\"Sure to Save?\" onConfirm={() => save(record.key)}>\n            <a style={{ marginRight: 8, }}>\n              Save\n          </a>\n          </TcrbPopconfirm>\n          <TcrbPopconfirm title=\"Sure to cancel?\" onConfirm={() => setEditingKeySection('')}>\n            <a style={{ color: '#3e3e3e' }}>Cancel</a>\n          </TcrbPopconfirm>\n        </span>\n      ) : (\n          <div style={{ textAlign: \"center\" }}>\n            {/* <TcrbPopconfirm title=\"Sure to Edit?\" onConfirm={() => edit(record)}> */}\n            <a disabled={editingKeySection !== ''} onClick={() => editSection(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n              Edit\n          </a>\n            {/* </TcrbPopconfirm> */}\n            <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n              <a style={{ color: '#3e3e3e' }}>Deactivate</a>\n            </TcrbPopconfirm>\n            {/* <TcrbPopconfirm title=\"Sure to Delete?\" disabled={editingKey !== ''} onConfirm={() => deletePartnerSelect(record)}>\n              <a><DeleteOutlined style={{ fontSize: '18px', paddingRight: 8 }} /></a>\n            </TcrbPopconfirm>\n            <a disabled={editingKey !== ''} onClick={() => edit(record)}><EditOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a> */}\n          </div>\n        );\n    } else if (record.status === '2') {\n      return null\n    } else {\n      return null\n    }\n  }\n  return (\n    <div>\n\n    </div>\n  )\n}\n\nexport default ManageDepartment\n"]},"metadata":{},"sourceType":"module"}