{"ast":null,"code":"import { useStaticRendering } from 'mobx-react'; // import PostStore from './PostStore';\n// import UIStore from './UIStore';\n\nimport ThemeStore from './theme-store';\nimport CounterStore from './counter-store';\nimport AuthenStore from './authen-store';\nimport VersatileStore from './versatile-store';\nimport CustomerServicesMenuStore from './customer-services-menu-store';\nconst isServer = true;\nuseStaticRendering(isServer);\nlet store = null;\nexport default function initializeStore(initialData = {}) {\n  if (isServer) {\n    return {\n      // uiStore: new UIStore(),\n      themeStore: new ThemeStore(),\n      counterStore: new CounterStore(),\n      authenStore: new AuthenStore(),\n      versatileStore: new VersatileStore(),\n      customerServicesMenuStore: new CustomerServicesMenuStore()\n    };\n  }\n\n  if (store === null) {\n    store = {\n      // uiStore: new UIStore(),\n      themeStore: new ThemeStore(),\n      counterStore: new CounterStore(),\n      authenStore: new AuthenStore(),\n      versatileStore: new VersatileStore(),\n      customerServicesMenuStore: new CustomerServicesMenuStore()\n    };\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/stores.js"],"names":["useStaticRendering","ThemeStore","CounterStore","AuthenStore","VersatileStore","CustomerServicesMenuStore","isServer","store","initializeStore","initialData","themeStore","counterStore","authenStore","versatileStore","customerServicesMenuStore"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,YAAnC,C,CAEA;AACA;;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,yBAAP,MAAsC,gCAAtC;AAEA,MAAMC,QAAQ,OAAd;AACAN,kBAAkB,CAACM,QAAD,CAAlB;AAEA,IAAIC,KAAK,GAAG,IAAZ;AAEA,eAAe,SAASC,eAAT,CAAyBC,WAAW,GAAG,EAAvC,EAA2C;AACxD,MAAIH,QAAJ,EAAc;AACZ,WAAO;AACL;AACAI,MAAAA,UAAU,EAAE,IAAIT,UAAJ,EAFP;AAGLU,MAAAA,YAAY,EAAE,IAAIT,YAAJ,EAHT;AAILU,MAAAA,WAAW,EAAE,IAAIT,WAAJ,EAJR;AAKLU,MAAAA,cAAc,EAAE,IAAIT,cAAJ,EALX;AAMLU,MAAAA,yBAAyB,EAAE,IAAIT,yBAAJ;AANtB,KAAP;AAQD;;AACD,MAAIE,KAAK,KAAK,IAAd,EAAoB;AAClBA,IAAAA,KAAK,GAAG;AACN;AACAG,MAAAA,UAAU,EAAE,IAAIT,UAAJ,EAFN;AAGNU,MAAAA,YAAY,EAAE,IAAIT,YAAJ,EAHR;AAINU,MAAAA,WAAW,EAAE,IAAIT,WAAJ,EAJP;AAKNU,MAAAA,cAAc,EAAE,IAAIT,cAAJ,EALV;AAMNU,MAAAA,yBAAyB,EAAE,IAAIT,yBAAJ;AANrB,KAAR;AAQD;;AAED,SAAOE,KAAP;AACD","sourcesContent":["import { useStaticRendering } from 'mobx-react';\n\n// import PostStore from './PostStore';\n// import UIStore from './UIStore';\nimport ThemeStore from './theme-store'\nimport CounterStore from './counter-store'\nimport AuthenStore from './authen-store'\nimport VersatileStore from './versatile-store'\nimport CustomerServicesMenuStore from './customer-services-menu-store'\n\nconst isServer = typeof window === 'undefined';\nuseStaticRendering(isServer);\n\nlet store = null;\n\nexport default function initializeStore(initialData = {}) {\n  if (isServer) {\n    return {\n      // uiStore: new UIStore(),\n      themeStore: new ThemeStore(),\n      counterStore: new CounterStore(),\n      authenStore: new AuthenStore(),\n      versatileStore: new VersatileStore(),\n      customerServicesMenuStore: new CustomerServicesMenuStore()\n    };\n  }\n  if (store === null) {\n    store = {\n      // uiStore: new UIStore(),\n      themeStore: new ThemeStore(),\n      counterStore: new CounterStore(),\n      authenStore: new AuthenStore(),\n      versatileStore: new VersatileStore(),\n      customerServicesMenuStore: new CustomerServicesMenuStore()\n    };\n  }\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}