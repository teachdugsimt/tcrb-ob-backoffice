{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/table-result.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { clmTranInfo, clmPartnerInfo, clmAccInfo, clmTxn } from './table-column';\nimport { Table, Tabs, Carousel } from 'antd';\nimport { TcrbTabs, TcrbSpin } from '../antd-styles/styles';\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\nimport SimpleLabel from '../simple-label';\nimport 'moment/locale/th';\nimport _ from 'lodash';\nimport { withTranslation } from '../../i18n';\nconst {\n  TabPane\n} = Tabs;\n\nfunction callback(key) {\n  console.log(\"CustomerEnquiry :: \", key);\n}\n\nconst TableResult = inject('customerServiceEnquiry')(observer(props => {\n  const {\n    customerServiceEnquiry,\n    t\n  } = props;\n  const {\n    0: transInfo,\n    1: setTransInfo\n  } = useState(null);\n  const {\n    0: tableTranInfoData,\n    1: setTableTranInfoData\n  } = useState(null);\n  const {\n    0: partnerInfo,\n    1: setPartnerInfo\n  } = useState(null);\n  const {\n    0: accInfo,\n    1: setAccInfo\n  } = useState(null);\n  const {\n    0: txnInfo,\n    1: setTxnInfo\n  } = useState(null);\n  const {\n    0: allList,\n    1: setallList\n  } = useState(null);\n  const {\n    0: searchText,\n    1: setSearchText\n  } = useState([]);\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    0: pageSizeVal,\n    1: setPageSizeVal\n  } = useState(10);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setTableTranInfoData(transInfo);\n  };\n\n  useEffect(() => {\n    if (customerServiceEnquiry.dataGetListCustomerService) {\n      const transList = JSON.parse(JSON.stringify(customerServiceEnquiry.dataGetListCustomerService));\n      setTransInfo(transList);\n      setTableTranInfoData(transList);\n    }\n  }, [customerServiceEnquiry.dataGetListCustomerService]);\n  useEffect(() => {// _buildListData()\n  }, [customerServiceEnquiry.tmpListData]);\n\n  const PrevArrow = props => {\n    const {\n      className,\n      style,\n      onClick\n    } = props;\n    return __jsx(\"div\", {\n      className: className,\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        display: \"block\"\n      }),\n      onClick: onClick,\n      disabled: props.currentSlide == 0 ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, __jsx(LeftOutlined, {\n      style: {\n        fontSize: '32px',\n        color: \"#fba928\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const NextArrow = props => {\n    const {\n      className,\n      style,\n      onClick\n    } = props;\n    return __jsx(\"div\", {\n      className: className,\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        display: \"block\"\n      }),\n      onClick: onClick,\n      disabled: props.currentSlide == props.slideCount ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, __jsx(RightOutlined, {\n      style: {\n        fontSize: '32px',\n        color: \"#fba928\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const settings = {\n    dots: false,\n    infinite: false,\n    prevArrow: __jsx(PrevArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }\n    }),\n    nextArrow: __jsx(NextArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }\n    })\n  };\n\n  const _handlePageSize = pagination => {\n    if (pagination.pageSize != pageSizeVal) {\n      setPageSizeVal(pagination.pageSize);\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(TcrbSpin, {\n    spinning: customerServiceEnquiry.fetchingGetListCustomerService,\n    size: \"large\",\n    tip: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, searchText.map(e => {\n    return __jsx(SimpleLabel, {\n      label: e.searchedColumn,\n      value: e.searchText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 26\n      }\n    });\n  })), __jsx(Carousel, _extends({}, settings, {\n    arrows: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    columns: clmTranInfo(handleSearch, handleReset, t),\n    dataSource: tableTranInfoData,\n    pagination: {\n      current: JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) ? JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) : page,\n      pageSize: pageSizeVal\n    },\n    size: \"small\",\n    onChange: (pagination, filters, sorter, extra) => {\n      if (pagination) _handlePageSize(pagination);\n      customerServiceEnquiry.setPageCustomerEnquiry(pagination.current);\n      setPage(pagination.current);\n      setTableTranInfoData(extra.currentDataSource);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    onRow: (item, index) => ({}),\n    columns: clmPartnerInfo(handleSearch, handleReset, t),\n    dataSource: tableTranInfoData,\n    pagination: {\n      current: JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) ? JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) : page,\n      pageSize: pageSizeVal\n    },\n    size: \"small\",\n    onChange: (pagination, filters, sorter, extra) => {\n      if (pagination) _handlePageSize(pagination);\n      customerServiceEnquiry.setPageCustomerEnquiry(pagination.current);\n      setPage(pagination.current);\n      setTableTranInfoData(extra.currentDataSource);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    onRow: (item, index) => ({}),\n    columns: clmAccInfo(handleSearch, handleReset, t),\n    dataSource: tableTranInfoData,\n    pagination: {\n      current: JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) ? JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) : page,\n      pageSize: pageSizeVal\n    },\n    size: \"small\",\n    onChange: (pagination, filters, sorter, extra) => {\n      if (pagination) _handlePageSize(pagination);\n      customerServiceEnquiry.setPageCustomerEnquiry(pagination.current);\n      setPage(pagination.current);\n      setTableTranInfoData(extra.currentDataSource);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, __jsx(Table, {\n    filtered: true,\n    onChange: e => setPage(e.current),\n    onRow: (item, index) => ({}),\n    columns: clmTxn(handleSearch, handleReset, t),\n    dataSource: tableTranInfoData,\n    pagination: {\n      current: JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) ? JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) : page,\n      pageSize: pageSizeVal\n    },\n    size: \"small\",\n    onChange: (pagination, filters, sorter, extra) => {\n      if (pagination) _handlePageSize(pagination);\n      customerServiceEnquiry.setPageCustomerEnquiry(pagination.current);\n      setPage(pagination.current);\n      setTableTranInfoData(extra.currentDataSource);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  })))));\n}));\nexport default withTranslation('common')(TableResult);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/customer-service-enquiry/table-result.js"],"names":["React","useState","useEffect","inject","observer","styled","clmTranInfo","clmPartnerInfo","clmAccInfo","clmTxn","Table","Tabs","Carousel","TcrbTabs","TcrbSpin","RightOutlined","LeftOutlined","SimpleLabel","_","withTranslation","TabPane","callback","key","console","log","TableResult","props","customerServiceEnquiry","t","transInfo","setTransInfo","tableTranInfoData","setTableTranInfoData","partnerInfo","setPartnerInfo","accInfo","setAccInfo","txnInfo","setTxnInfo","allList","setallList","searchText","setSearchText","page","setPage","pageSizeVal","setPageSizeVal","handleSearch","selectedKeys","confirm","dataIndex","handleReset","clearFilters","dataGetListCustomerService","transList","JSON","parse","stringify","tmpListData","PrevArrow","className","style","onClick","display","currentSlide","fontSize","color","NextArrow","slideCount","settings","dots","infinite","prevArrow","nextArrow","_handlePageSize","pagination","pageSize","paddingTop","fetchingGetListCustomerService","flexDirection","map","e","searchedColumn","current","pageCustomerEnquiryTable","filters","sorter","extra","setPageCustomerEnquiry","currentDataSource","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport styled from 'styled-components';\nimport {\n  clmTranInfo, clmPartnerInfo, clmAccInfo, clmTxn,\n} from './table-column';\nimport { Table, Tabs, Carousel } from 'antd';\nimport { TcrbTabs, TcrbSpin } from '../antd-styles/styles'\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\nimport SimpleLabel from '../simple-label'\nimport 'moment/locale/th'\nimport _ from 'lodash'\nimport { withTranslation } from '../../i18n';\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(\"CustomerEnquiry :: \", key);\n}\n\nconst TableResult =\n  inject('customerServiceEnquiry')\n    (observer((props) => {\n      const { customerServiceEnquiry, t } = props\n      const [transInfo, setTransInfo] = useState(null)\n      const [tableTranInfoData, setTableTranInfoData] = useState(null)\n      const [partnerInfo, setPartnerInfo] = useState(null)\n      const [accInfo, setAccInfo] = useState(null)\n      const [txnInfo, setTxnInfo] = useState(null)\n      const [allList, setallList] = useState(null)\n      const [searchText, setSearchText] = useState([])\n      const [page, setPage] = useState(1)\n      const [pageSizeVal, setPageSizeVal] = useState(10)\n\n      const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n      };\n\n      const handleReset = clearFilters => {\n        clearFilters();\n        setTableTranInfoData(transInfo)\n      };\n\n      useEffect(() => {\n        if (customerServiceEnquiry.dataGetListCustomerService) {\n          const transList = JSON.parse(JSON.stringify(customerServiceEnquiry.dataGetListCustomerService))\n          setTransInfo(transList)\n          setTableTranInfoData(transList)\n        }\n\n      }, [customerServiceEnquiry.dataGetListCustomerService])\n\n      useEffect(() => {\n        // _buildListData()\n      }, [customerServiceEnquiry.tmpListData])\n\n      const PrevArrow = (props) => {\n        const { className, style, onClick } = props\n        return (\n          <div\n            className={className}\n            style={{ ...style, display: \"block\" }}\n            onClick={onClick}\n            disabled={props.currentSlide == 0 ? true : false}\n          >\n            <LeftOutlined style={{ fontSize: '32px', color: \"#fba928\" }} />\n          </div>\n        )\n      }\n\n      const NextArrow = (props) => {\n        const { className, style, onClick } = props\n        return (\n          <div\n            className={className}\n            style={{ ...style, display: \"block\" }}\n            onClick={onClick}\n            disabled={props.currentSlide == props.slideCount ? true : false}\n          >\n            <RightOutlined style={{ fontSize: '32px', color: \"#fba928\" }} />\n          </div>\n        )\n      }\n      const settings = {\n        dots: false,\n        infinite: false,\n        prevArrow: <PrevArrow />,\n        nextArrow: <NextArrow />\n      }\n\n      const _handlePageSize = (pagination) => {\n        if (pagination.pageSize != pageSizeVal) {\n          setPageSizeVal(pagination.pageSize)\n        }\n      }\n\n      return (\n        <div style={{ paddingTop: 10 }}>\n          <TcrbSpin spinning={customerServiceEnquiry.fetchingGetListCustomerService} size=\"large\" tip=\"Loading...\" >\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n              {\n                searchText.map(e => {\n                  return <SimpleLabel label={e.searchedColumn} value={e.searchText} />\n                })\n              }\n            </div>\n            <Carousel {...settings} arrows={true} >\n              <div >\n                <Table\n                  filtered={true}\n                  onChange={(e) => setPage(e.current)}\n                  columns={clmTranInfo(handleSearch, handleReset, t)} dataSource={tableTranInfoData}\n                  pagination={{ current: JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) ? JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) : page, pageSize: pageSizeVal }}\n                  size=\"small\"\n                  onChange={(pagination, filters, sorter, extra) => {\n                    if (pagination) _handlePageSize(pagination)\n                    customerServiceEnquiry.setPageCustomerEnquiry(pagination.current)\n                    setPage(pagination.current)\n                    setTableTranInfoData(extra.currentDataSource)\n                  }}\n                />\n              </div>\n              <div>\n                <Table\n                  filtered={true}\n                  onChange={(e) => setPage(e.current)}\n                  onRow={(item, index) => ({})}\n                  columns={clmPartnerInfo(handleSearch, handleReset, t)} dataSource={tableTranInfoData}\n                  pagination={{ current: JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) ? JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) : page, pageSize: pageSizeVal }}\n                  size=\"small\"\n                  onChange={(pagination, filters, sorter, extra) => {\n                    if (pagination) _handlePageSize(pagination)\n                    customerServiceEnquiry.setPageCustomerEnquiry(pagination.current)\n                    setPage(pagination.current)\n                    setTableTranInfoData(extra.currentDataSource)\n                  }}\n                />\n              </div>\n              <div>\n                <Table\n                  filtered={true}\n                  onChange={(e) => setPage(e.current)}\n                  onRow={(item, index) => ({})}\n                  columns={clmAccInfo(handleSearch, handleReset, t)} dataSource={tableTranInfoData}\n                  pagination={{ current: JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) ? JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) : page, pageSize: pageSizeVal }}\n                  size=\"small\"\n                  onChange={(pagination, filters, sorter, extra) => {\n                    if (pagination) _handlePageSize(pagination)\n                    customerServiceEnquiry.setPageCustomerEnquiry(pagination.current)\n                    setPage(pagination.current)\n                    setTableTranInfoData(extra.currentDataSource)\n                  }}\n                />\n              </div>\n              <div>\n                <Table\n                  filtered={true}\n                  onChange={(e) => setPage(e.current)}\n                  onRow={(item, index) => ({})}\n                  columns={clmTxn(handleSearch, handleReset, t)} dataSource={tableTranInfoData}\n                  pagination={{ current: JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) ? JSON.parse(JSON.stringify(customerServiceEnquiry.pageCustomerEnquiryTable)) : page, pageSize: pageSizeVal }}\n                  size=\"small\"\n                  onChange={(pagination, filters, sorter, extra) => {\n                    if (pagination) _handlePageSize(pagination)\n                    customerServiceEnquiry.setPageCustomerEnquiry(pagination.current)\n                    setPage(pagination.current)\n                    setTableTranInfoData(extra.currentDataSource)\n                  }}\n                />\n              </div>\n            </Carousel>\n          </TcrbSpin>\n        </div>\n      )\n\n    }))\n\n\n\n\nexport default withTranslation('common')(TableResult)\n"]},"metadata":{},"sourceType":"module"}