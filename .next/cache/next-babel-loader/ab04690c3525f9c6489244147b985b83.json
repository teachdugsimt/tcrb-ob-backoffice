{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nvar _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/pending-approvals.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { DownOutlined } from '@ant-design/icons';\nimport { withTranslation } from '../../i18n';\nconst PendingApprovals = inject('businessParametersSetupStore')(observer(props => {\n  const {\n    0: expandable,\n    1: setExpandable\n  } = useState(expand);\n  const {\n    0: hasData,\n    1: setHasData\n  } = useState(true);\n  const {\n    0: top,\n    1: setTop\n  } = useState('none');\n  const {\n    0: bottom,\n    1: setBottom\n  } = useState(\"bottomRight\");\n  const {\n    0: pendingApprovalData,\n    1: setPendingApprovalData\n  } = useState([]);\n  const {\n    businessParametersSetupStore,\n    t\n  } = props;\n  const expand = {\n    expandedRowRender: record => __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 53\n      }\n    }, record.description)\n  };\n  const columns = [{\n    title: 'Ticket#',\n    dataIndex: 'action'\n  }, {\n    title: 'Request Type',\n    dataIndex: 'change_type'\n  }, {\n    title: 'Request Description',\n    dataIndex: 'description'\n  }, {\n    title: 'Request ID',\n    dataIndex: 'maker_id'\n  }, {\n    title: 'Request Date',\n    dataIndex: 'requested_date'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: record => __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, __jsx(_Popconfirm, {\n      title: t(\"sureAccept\"),\n      onConfirm: () => processPending(\"APPROVE\", record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      style: {\n        marginRight: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Accept\")), __jsx(_Popconfirm, {\n      title: t(\"sureReject\"),\n      onConfirm: () => processPending(\"REJECT\", record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      style: {\n        marginRight: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Reject\")))\n  }];\n  useEffect(() => {\n    // call api\n    const data = {\n      filter: {}\n    };\n    businessParametersSetupStore.getPendingApprove(data);\n  }, []);\n  useEffect(() => {\n    if (businessParametersSetupStore.pendingApprovals.length > 0) {\n      setPendingApprovalData(businessParametersSetupStore.pendingApprovals);\n    }\n  }, [businessParametersSetupStore.pendingApprovals]);\n  useMemo(() => {\n    // setPendingApprovalData(businessParametersSetupStore.pendingApprovals)\n    console.log('render');\n  }, []);\n\n  const processPending = (status, record) => {\n    let data = {\n      allowAction: status,\n      data: record,\n      id: record.id\n    };\n    businessParametersSetupStore.setTmpPendingListID(record.id);\n    businessParametersSetupStore.processPendingListApprove(data);\n  };\n\n  const tableColumns = columns.map(item => _objectSpread({}, item));\n  return __jsx(_Table, {\n    pagination: {\n      position: [top, bottom]\n    },\n    columns: tableColumns,\n    dataSource: businessParametersSetupStore.responseGetPendingApproveList // dataSource={pendingApprovalData}\n    // scroll={scroll}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  });\n}));\nexport default withTranslation('common')(PendingApprovals);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/pending-approvals.js"],"names":["React","useState","useEffect","useMemo","inject","observer","DownOutlined","withTranslation","PendingApprovals","props","expandable","setExpandable","expand","hasData","setHasData","top","setTop","bottom","setBottom","pendingApprovalData","setPendingApprovalData","businessParametersSetupStore","t","expandedRowRender","record","description","columns","title","dataIndex","key","render","processPending","marginRight","data","filter","getPendingApprove","pendingApprovals","length","console","log","status","allowAction","id","setTmpPendingListID","processPendingListApprove","tableColumns","map","item","position","responseGetPendingApproveList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport { Table, Popconfirm } from 'antd';\nimport { inject, observer } from 'mobx-react'\nimport { DownOutlined } from '@ant-design/icons';\nimport { withTranslation } from '../../i18n'\n\nconst PendingApprovals =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const [expandable, setExpandable] = useState(expand)\n      const [hasData, setHasData] = useState(true)\n      const [top, setTop] = useState('none')\n      const [bottom, setBottom] = useState(\"bottomRight\")\n      const [pendingApprovalData, setPendingApprovalData] = useState([])\n      const { businessParametersSetupStore, t } = props\n      const expand = { expandedRowRender: record => <p>{record.description}</p> };\n      const columns = [\n        {\n          title: 'Ticket#',\n          dataIndex: 'action',\n        },\n        {\n          title: 'Request Type',\n          dataIndex: 'change_type',\n        },\n        {\n          title: 'Request Description',\n          dataIndex: 'description',\n        },\n        {\n          title: 'Request ID',\n          dataIndex: 'maker_id',\n        },\n        {\n          title: 'Request Date',\n          dataIndex: 'requested_date',\n        },\n        {\n          title: 'Action',\n          key: 'action',\n          render: (record) => (\n            <span>\n              <Popconfirm title={t(\"sureAccept\")}\n                onConfirm={() => processPending(\"APPROVE\", record)}  >\n                <a style={{ marginRight: 16 }}>Accept</a>\n              </Popconfirm>\n\n              <Popconfirm title={t(\"sureReject\")}\n                onConfirm={() => processPending(\"REJECT\", record)}>\n                <a style={{ marginRight: 16 }}>Reject</a>\n              </Popconfirm>\n            </span>\n          ),\n        },\n      ];\n\n      useEffect(() => {\n        // call api\n        const data = {\n          filter: {}\n        }\n        businessParametersSetupStore.getPendingApprove(data)\n      }, [])\n\n      useEffect(() => {\n        if (businessParametersSetupStore.pendingApprovals.length > 0) {\n          setPendingApprovalData(businessParametersSetupStore.pendingApprovals)\n        }\n      }, [businessParametersSetupStore.pendingApprovals])\n\n      useMemo(() => {\n        // setPendingApprovalData(businessParametersSetupStore.pendingApprovals)\n        console.log('render')\n      }, [])\n\n      const processPending = (status, record) => {\n        let data = {\n          allowAction: status,\n          data: record,\n          id: record.id\n        }\n        businessParametersSetupStore.setTmpPendingListID(record.id)\n        businessParametersSetupStore.processPendingListApprove(data)\n      }\n\n      const tableColumns = columns.map(item => ({ ...item }));\n\n      return (\n        <Table\n          pagination={{ position: [top, bottom] }}\n          columns={tableColumns}\n          dataSource={businessParametersSetupStore.responseGetPendingApproveList}\n        // dataSource={pendingApprovalData}\n        // scroll={scroll}\n        />\n      )\n    }))\n\nexport default withTranslation('common')(PendingApprovals)\n\n"]},"metadata":{},"sourceType":"module"}