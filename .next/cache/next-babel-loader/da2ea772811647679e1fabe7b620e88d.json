{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/simple-search.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Input, Button } from 'antd';\nimport styled from 'styled-components';\nconst {\n  Search\n} = Input;\nconst StyledSearch = styled(Search).withConfig({\n  displayName: \"simple-search__StyledSearch\",\n  componentId: \"sc-1t13wwc-0\"\n})([\".ant-input-affix-wrapper{border-style:solid !important;border-width:0px 0px 1px 0px !important;border-color:black !important;box-shadow:none !important;},.ant-input-affix-wrapper:hover{border-right-width:0px !important}.ant-input-prefix{margin-right:\", \"px !important;}.ant-input-group-addon{display:\", \";}\"], ({\n  theme\n}) => theme.spacing.large, props => props.disabled ? \"none\" : \"table-cell\");\nexport default function SimpleSearch(props) {\n  const RegSearch = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(StyledSearch, {\n      prefix: props.prefixWording,\n      placeholder: \"input ID Card\",\n      enterButton: \"Search\",\n      size: \"large\",\n      disabled: props.disabled,\n      onSearch: value => props.search(value),\n      onChange: () => console.log('change'),\n      defaultValue: props.defaultValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const onChange = e => {\n    const {\n      value\n    } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (!isNaN(value) && reg.test(value) || value === '' || value === '-') {\n      this.props.onChange(value);\n    }\n  }; // console.log(props.defaultValue)\n\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(StyledSearch, {\n    prefix: props.prefixWording,\n    placeholder: \"input ID Card\",\n    enterButton: \"Search\",\n    size: \"large\",\n    disabled: props.disabled,\n    onSearch: value => props.search(value),\n    onChange: () => console.log('change'),\n    defaultValue: props.defaultValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/simple-search.js"],"names":["React","useEffect","Input","Button","styled","Search","StyledSearch","theme","spacing","large","props","disabled","SimpleSearch","RegSearch","prefixWording","value","search","console","log","defaultValue","onChange","e","target","reg","isNaN","test"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaH,KAAnB;AAEA,MAAMI,YAAY,GAAGF,MAAM,CAACC,MAAD,CAAT;AAAA;AAAA;AAAA,2TAWA,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAN,CAAcC,KAX7B,EAcLC,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,MAAjB,GAA0B,YAd9B,CAAlB;AAmBA,eAAe,SAASC,YAAT,CAAsBF,KAAtB,EAA6B;AAC1C,QAAMG,SAAS,GAAG,MAAM;AACtB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AACE,MAAA,MAAM,EAAEH,KAAK,CAACI,aADhB;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,WAAW,EAAC,QAHd;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,QAAQ,EAAEJ,KAAK,CAACC,QALlB;AAME,MAAA,QAAQ,EAAEI,KAAK,IAAIL,KAAK,CAACM,MAAN,CAAaD,KAAb,CANrB;AAOE,MAAA,QAAQ,EAAE,MAAME,OAAO,CAACC,GAAR,CAAY,QAAZ,CAPlB;AAQE,MAAA,YAAY,EAAER,KAAK,CAACS,YARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAcD,GAfD;;AAgBA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB,UAAM;AAAEN,MAAAA;AAAF,QAAYM,CAAC,CAACC,MAApB;AACA,UAAMC,GAAG,GAAG,iBAAZ;;AACA,QAAK,CAACC,KAAK,CAACT,KAAD,CAAN,IAAiBQ,GAAG,CAACE,IAAJ,CAASV,KAAT,CAAlB,IAAsCA,KAAK,KAAK,EAAhD,IAAsDA,KAAK,KAAK,GAApE,EAAyE;AACvE,WAAKL,KAAL,CAAWU,QAAX,CAAoBL,KAApB;AACD;AACF,GAND,CAjB0C,CAwB1C;;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,MAAM,EAAEL,KAAK,CAACI,aADhB;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAEJ,KAAK,CAACC,QALlB;AAME,IAAA,QAAQ,EAAEI,KAAK,IAAIL,KAAK,CAACM,MAAN,CAAaD,KAAb,CANrB;AAOE,IAAA,QAAQ,EAAE,MAAME,OAAO,CAACC,GAAR,CAAY,QAAZ,CAPlB;AAQE,IAAA,YAAY,EAAER,KAAK,CAACS,YARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD","sourcesContent":["import React, { useEffect } from 'react'\nimport { Input, Button } from 'antd'\nimport styled from 'styled-components';\n\nconst { Search } = Input;\n\nconst StyledSearch = styled(Search)`\n.ant-input-affix-wrapper{\n  border-style: solid !important;\n  border-width: 0px 0px 1px 0px !important;\n  border-color: black !important;\n  box-shadow: none !important;\n},\n.ant-input-affix-wrapper:hover{\n  border-right-width: 0px !important\n}\n.ant-input-prefix {\n  margin-right: ${({ theme }) => theme.spacing.large}px !important;\n}\n.ant-input-group-addon{\n  display: ${props => props.disabled ? \"none\" : \"table-cell\"};\n}\n`\n\n\nexport default function SimpleSearch(props) {\n  const RegSearch = () => {\n    return (\n      <div>\n        <StyledSearch\n          prefix={props.prefixWording}\n          placeholder=\"input ID Card\"\n          enterButton=\"Search\"\n          size=\"large\"\n          disabled={props.disabled}\n          onSearch={value => props.search(value)}\n          onChange={() => console.log('change')}\n          defaultValue={props.defaultValue}\n        />\n      </div>\n    )\n  }\n  const onChange = e => {\n    const { value } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n    if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\n      this.props.onChange(value);\n    }\n  };\n  // console.log(props.defaultValue)\n  return (\n    <div>\n      <StyledSearch\n        prefix={props.prefixWording}\n        placeholder=\"input ID Card\"\n        enterButton=\"Search\"\n        size=\"large\"\n        disabled={props.disabled}\n        onSearch={value => props.search(value)}\n        onChange={() => console.log('change')}\n        defaultValue={props.defaultValue}\n      />\n      {/* <RegSearch /> */}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}