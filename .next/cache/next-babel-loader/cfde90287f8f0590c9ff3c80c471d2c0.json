{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ApisauceInstance, create, ApiResponse } from 'apisauce';\nimport Header from './header';\nimport https from 'https';\n\nvar ExcuteApi = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, params) {\n    var api, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            api = create(Header());\n            _context.next = 4;\n            return api.get(url, params);\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function ExcuteApi(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = ExcuteApi;\nexport default ExcuteApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExcuteApi\");","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/services/api-integrations/excute-api.js"],"names":["ApisauceInstance","create","ApiResponse","Header","https","ExcuteApi","url","params","api","get","response"],"mappings":";;AAAA,SAASA,gBAAT,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,UAAtD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,SAAS;AAAA,sEAAG,iBAAOC,GAAP,EAAYC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,GAFQ,GAEFP,MAAM,CAACE,MAAM,EAAP,CAFJ;AAAA;AAAA,mBAGSK,GAAG,CAACC,GAAJ,CAAQH,GAAR,EAAaC,MAAb,CAHT;;AAAA;AAGRG,YAAAA,QAHQ;AAAA,6CAIPA,QAJO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATL,SAAS;AAAA;AAAA;AAAA,GAAf;;KAAMA,S;AAUN,eAAeA,SAAf","sourcesContent":["import { ApisauceInstance, create, ApiResponse } from 'apisauce'\nimport Header from './header'\nimport https from 'https';\n\nconst ExcuteApi = async (url, params) => {\n  try {\n    const api = create(Header())\n    const response = await api.get(url, params)\n    return response\n  } catch (error) {\n    return error\n  }\n}\n\nexport default ExcuteApi\n"]},"metadata":{},"sourceType":"module"}