{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/manage-partner.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../../i18n';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Popconfirm } from 'antd';\nimport { DeleteOutlined, EditOutlined, FormOutlined } from '@ant-design/icons';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { addKeyToDataSource, addCommaInData } from '../../data-utility';\nvar managePartner = inject('businessParametersSetupStore')(observer(_s(function (props) {\n  _s();\n\n  var businessParametersSetupStore = props.businessParametersSetupStore,\n      t = props.t;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(''),\n      editingKey = _useState[0],\n      setEditingKey = _useState[1];\n\n  var isEditing = function isEditing(record) {\n    return record.key === editingKey;\n  };\n\n  var _useState2 = useState([]),\n      mockDataPartnerList = _useState2[0],\n      setMockDataPartnerList = _useState2[1]; // var mockDataPartnerList = []\n\n\n  useEffect(function () {\n    addKeyToDataSource(businessParametersSetupStore.channelPartnerList).then(function (result) {\n      // mockDataPartnerList = result\n      setMockDataPartnerList(result);\n    });\n  }, []);\n\n  var edit = function edit(record) {\n    form.setFieldsValue(_objectSpread({\n      partner_code: record.product_type,\n      partner_description: record.product_description,\n      transaction_limit: '',\n      daily_limit: ''\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  var cancel = function cancel() {\n    setEditingKey('');\n  };\n\n  var EditableCell = function EditableCell(_ref) {\n    var editing = _ref.editing,\n        dataIndex = _ref.dataIndex,\n        title = _ref.title,\n        inputType = _ref.inputType,\n        record = _ref.record,\n        index = _ref.index,\n        children = _ref.children,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    var inputNode = inputType === 'number' ? __jsx(InputNumber, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 52\n      }\n    }) : __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 70\n      }\n    });\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(Form.Item, {\n      name: dataIndex == 'product_type' ? 'product_code' : dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: inputType === 'number' ? true : false,\n        message: \"Please Input \".concat(title, \"!\")\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, inputNode) : children);\n  };\n\n  var prepareAllLimitToSubmitAndUpdate = function prepareAllLimitToSubmitAndUpdate() {\n    if (viewSpecificProduct) {\n      // submitAddSpecificLimit()\n      setModalString(__jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, \" Add Partner \", selectPartnerAndProduct.type, \" \")));\n    } else {\n      // submitChangeProductLimitSelect()\n      setModalString( //waiting for confirm task\n      __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, \" Change Product Code \", selectPartnerAndProduct.partner_code, \" Limit \"), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, \"for \", selectPartnerAndProduct.partner_code, \"/\", selectPartnerAndProduct.partner_abbreviation, \" Channel/Partner !!!\")));\n    }\n\n    setVisble(true);\n    setTitleModal('Confirm');\n    setModalType(\"confirm\");\n  };\n\n  var goBackToProductList = function goBackToProductList() {\n    businessParametersSetupStore.goBack = true;\n  };\n\n  var renderAction = function renderAction(record) {\n    /* if (record.status === '1') {\n      return (\n        <div>\n          <TcrbPopconfirm title=\"Sure to Delete?\" onConfirm={(e) => { submitDeleteProduct(record) }} disabled={editingKey !== ''}>\n            <a><DeleteOutlined style={{ fontSize: '18px' }} /></a>\n          </TcrbPopconfirm>\n          <a onClick={() => selectProductToViewDetail(record)}><SettingOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n          <a onClick={() => selectProductToSpecificLimit(record)}><FormOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n        </div>)\n    } else if (record.status === '2') {\n      return null\n    } else {\n      return (<div>\n        <TcrbPopconfirm title={\"Confirm to Add !!!\"} onConfirm={() => { submitAddnewProduct(record.key) }} >\n          <a>Confirm</a>\n        </TcrbPopconfirm><br />\n        <TcrbPopconfirm title={\"Confirm to Cancel !!!\"} onConfirm={() => { cancelAddNewProduct(record.key) }} >\n          <a>Cancel</a>\n        </TcrbPopconfirm>\n      </div>)\n    } */\n    var editable = isEditing(record);\n    return editable ? __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      href: \"javascript:;\",\n      onClick: function onClick() {\n        return save(record.key);\n      },\n      style: {\n        marginRight: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"Save\"), __jsx(Popconfirm, {\n      title: \"Sure to cancel?\",\n      onConfirm: cancel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Cancel\"))) : __jsx(\"a\", {\n      disabled: editingKey !== '',\n      onClick: function onClick() {\n        return edit(record);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, __jsx(EditOutlined, {\n      style: {\n        fontSize: '18px',\n        color: '#FBA928'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 74\n      }\n    }));\n    {\n      /* <EditOutlined /> */\n    }\n  };\n\n  var columnPartnerList = [{\n    title: 'Partner / Channel',\n    dataIndex: 'partner_code',\n    render: function render(text, record) {\n      return addCommaInData(text);\n    }\n  }, {\n    title: 'Partner Description',\n    dataIndex: 'partner_abbreviation',\n    render: function render(text, record) {\n      return addCommaInData(text);\n    }\n  }, {\n    title: 'Txn Limit',\n    dataIndex: 'transaction_limit',\n    editable: true,\n    render: function render(text, record) {\n      return addCommaInData(text, true);\n    }\n  }, {\n    title: ' Daily Limit',\n    dataIndex: 'daily_limit',\n    editable: true,\n    render: function render(text, record) {\n      return addCommaInData(text, true);\n    }\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    render: function render(text, record, index) {\n      return renderAction(record, index);\n    }\n  }];\n  var mergedColumns = columnPartnerList.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        };\n      }\n    });\n  });\n  return __jsx(\"div\", {\n    style: {\n      padding: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, \"Product_Code\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, businessParametersSetupStore.productLimitDetail.product_type), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"Product_Description\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, businessParametersSetupStore.productLimitDetail.product_description)), __jsx(Row, {\n    gutter: [4, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"All-Channel Txn Limit\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, businessParametersSetupStore.productLimitDetail.transaction_limit), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"All-Channel Daily Limit\"), __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, businessParametersSetupStore.productLimitDetail.daily_limit)), __jsx(Row, {\n    justify: \"end\",\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    className: \"default\",\n    onClick: function onClick() {\n      return goBackToProductList();\n    },\n    shape: \"round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, \"Back\")), __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, __jsx(TcrbButton, {\n    shape: \"round\",\n    className: \"primary\",\n    onClick: function onClick() {\n      prepareAllLimitToSubmitAndUpdate();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, \"Submit\"))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }), __jsx(Form, {\n    form: form,\n    component: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: mockDataPartnerList,\n    columns: mergedColumns,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  })));\n}, \"UpuFpvclxKaR3AJfDyBmIRN865E=\", false, function () {\n  return [Form.useForm];\n})));\nexport default withTranslation('common')(managePartner);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/manage-partner.js"],"names":["React","useState","useEffect","inject","observer","withTranslation","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","Popconfirm","DeleteOutlined","EditOutlined","FormOutlined","TcrbButton","TcrbPopconfirm","addKeyToDataSource","addCommaInData","managePartner","props","businessParametersSetupStore","t","useForm","form","editingKey","setEditingKey","isEditing","record","key","mockDataPartnerList","setMockDataPartnerList","channelPartnerList","then","result","edit","setFieldsValue","partner_code","product_type","partner_description","product_description","transaction_limit","daily_limit","cancel","EditableCell","editing","dataIndex","title","inputType","index","children","restProps","inputNode","margin","required","message","prepareAllLimitToSubmitAndUpdate","viewSpecificProduct","setModalString","textAlign","selectPartnerAndProduct","type","partner_abbreviation","setVisble","setTitleModal","setModalType","goBackToProductList","goBack","renderAction","editable","save","marginRight","fontSize","color","columnPartnerList","render","text","mergedColumns","map","col","onCell","padding","productLimitDetail","marginTop","body","cell"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,IAArD,EAA2DC,WAA3D,EAAwEC,OAAxE,EAAiFC,UAAjF,QAAmG,MAAnG;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,YAAvC,QAA2D,mBAA3D;AAEA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,0BAA3C;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,oBAAnD;AAEA,IAAMC,aAAa,GACjBrB,MAAM,CAAC,8BAAD,CAAN,CACGC,QAAQ,IAAC,UAACqB,KAAD,EAAW;AAAA;;AAAA,MACXC,4BADW,GACyBD,KADzB,CACXC,4BADW;AAAA,MACmBC,CADnB,GACyBF,KADzB,CACmBE,CADnB;;AAAA,sBAEJd,IAAI,CAACe,OAAL,EAFI;AAAA;AAAA,MAEZC,IAFY;;AAAA,kBAGiB5B,QAAQ,CAAC,EAAD,CAHzB;AAAA,MAGZ6B,UAHY;AAAA,MAGAC,aAHA;;AAInB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,GAAP,KAAeJ,UAAnB;AAAA,GAAxB;;AAJmB,mBAKmC7B,QAAQ,CAAC,EAAD,CAL3C;AAAA,MAKZkC,mBALY;AAAA,MAKSC,sBALT,kBAMnB;;;AACAlC,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,kBAAkB,CAACI,4BAA4B,CAACW,kBAA9B,CAAlB,CAAoEC,IAApE,CAAyE,UAACC,MAAD,EAAY;AACnF;AACAH,MAAAA,sBAAsB,CAACG,MAAD,CAAtB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAP,MAAM,EAAI;AACrBJ,IAAAA,IAAI,CAACY,cAAL;AACEC,MAAAA,YAAY,EAAET,MAAM,CAACU,YADvB;AAEEC,MAAAA,mBAAmB,EAAEX,MAAM,CAACY,mBAF9B;AAGEC,MAAAA,iBAAiB,EAAE,EAHrB;AAIEC,MAAAA,WAAW,EAAE;AAJf,OAKKd,MALL;AAOAF,IAAAA,aAAa,CAACE,MAAM,CAACC,GAAR,CAAb;AACD,GATD;;AAWA,MAAMc,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBjB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAFD;;AAIA,MAAMkB,YAAY,GAAG,SAAfA,YAAe,OASf;AAAA,QARJC,OAQI,QARJA,OAQI;AAAA,QAPJC,SAOI,QAPJA,SAOI;AAAA,QANJC,KAMI,QANJA,KAMI;AAAA,QALJC,SAKI,QALJA,SAKI;AAAA,QAJJpB,MAII,QAJJA,MAII;AAAA,QAHJqB,KAGI,QAHJA,KAGI;AAAA,QAFJC,QAEI,QAFJA,QAEI;AAAA,QADDC,SACC;;AACJ,QAAMC,SAAS,GAAGJ,SAAS,KAAK,QAAd,GAAyB,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,GAA2C,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7D;AACA,WACE,yBAAQG,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGN,OAAO,GAEN,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAEC,SAAS,IAAI,cAAb,GAA8B,cAA9B,GAA+CA,SADvD;AAEE,MAAA,KAAK,EAAE;AACLO,QAAAA,MAAM,EAAE;AADH,OAFT;AAKE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAGN,SAAS,KAAK,QAAf,GAA2B,IAA3B,GAAkC,KAD9C;AAEEO,QAAAA,OAAO,yBAAkBR,KAAlB;AAFT,OADK,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYGK,SAZH,CAFM,GAiBJF,QAlBN,CADF;AAwBD,GAnCD;;AAqCA,MAAMM,gCAAgC,GAAG,SAAnCA,gCAAmC,GAAM;AAC7C,QAAIC,mBAAJ,EAAyB;AACvB;AACAC,MAAAA,cAAc,CACZ;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiBC,uBAAuB,CAACC,IAAzC,MADF,CADY,CAAd;AAMD,KARD,MAQO;AACL;AAEAH,MAAAA,cAAc,EACZ;AACA;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAyBC,uBAAuB,CAACvB,YAAjD,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQuB,uBAAuB,CAACvB,YAAhC,OAA+CuB,uBAAuB,CAACE,oBAAvE,yBAFF,CAFY,CAAd;AAOD;;AACDC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,IAAAA,aAAa,CAAC,SAAD,CAAb;AACAC,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACD,GAvBD;;AAwBA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC7C,IAAAA,4BAA4B,CAAC8C,MAA7B,GAAsC,IAAtC;AACD,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACxC,MAAD,EAAY;AAC/B;;;;;;;;;;;;;;;;;;;;;AAqBA,QAAMyC,QAAQ,GAAG1C,SAAS,CAACC,MAAD,CAA1B;AACA,WAAOyC,QAAQ,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMC,IAAI,CAAC1C,MAAM,CAACC,GAAR,CAAV;AAAA,OAFX;AAGE,MAAA,KAAK,EAAE;AACL0C,QAAAA,WAAW,EAAE;AADR,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAUE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,iBAAlB;AAAoC,MAAA,SAAS,EAAE5B,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAVF,CADa,GAgBX;AAAG,MAAA,QAAQ,EAAElB,UAAU,KAAK,EAA5B;AAAgC,MAAA,OAAO,EAAE;AAAA,eAAMU,IAAI,CAACP,MAAD,CAAV;AAAA,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6D,MAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAE4C,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7D,CAhBJ;AAmBA;AAAC;AAAwB;AAC1B,GA3CD;;AA4CA,MAAMC,iBAAiB,GAAG,CACxB;AACE3B,IAAAA,KAAK,EAAE,mBADT;AAEED,IAAAA,SAAS,EAAE,cAFb;AAGE6B,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOhD,MAAP;AAAA,aAAkBV,cAAc,CAAC0D,IAAD,CAAhC;AAAA;AAHV,GADwB,EAMxB;AACE7B,IAAAA,KAAK,EAAE,qBADT;AAEED,IAAAA,SAAS,EAAE,sBAFb;AAGE6B,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOhD,MAAP;AAAA,aAAkBV,cAAc,CAAC0D,IAAD,CAAhC;AAAA;AAHV,GANwB,EAWxB;AACE7B,IAAAA,KAAK,EAAE,WADT;AAEED,IAAAA,SAAS,EAAE,mBAFb;AAGEuB,IAAAA,QAAQ,EAAE,IAHZ;AAIEM,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOhD,MAAP;AAAA,aAAkBV,cAAc,CAAC0D,IAAD,EAAO,IAAP,CAAhC;AAAA;AAJV,GAXwB,EAiBxB;AACE7B,IAAAA,KAAK,EAAE,cADT;AAEED,IAAAA,SAAS,EAAE,aAFb;AAGEuB,IAAAA,QAAQ,EAAE,IAHZ;AAIEM,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOhD,MAAP;AAAA,aAAkBV,cAAc,CAAC0D,IAAD,EAAO,IAAP,CAAhC;AAAA;AAJV,GAjBwB,EAuBxB;AACE7B,IAAAA,KAAK,EAAE,QADT;AAEED,IAAAA,SAAS,EAAE,WAFb;AAGE6B,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOhD,MAAP,EAAeqB,KAAf;AAAA,aACNmB,YAAY,CAACxC,MAAD,EAASqB,KAAT,CADN;AAAA;AAHV,GAvBwB,CAA1B;AA8BA,MAAM4B,aAAa,GAAGH,iBAAiB,CAACI,GAAlB,CAAsB,UAAAC,GAAG,EAAI;AACjD,QAAI,CAACA,GAAG,CAACV,QAAT,EAAmB;AACjB,aAAOU,GAAP;AACD;;AAED,2CACKA,GADL;AAEEC,MAAAA,MAAM,EAAE,gBAAApD,MAAM;AAAA,eAAK;AACjBA,UAAAA,MAAM,EAANA,MADiB;AAEjBoB,UAAAA,SAAS,EAAE+B,GAAG,CAACjC,SAAJ,KAAkB,qBAAlB,GAA0C,MAA1C,GAAmD,QAF7C;AAGjBA,UAAAA,SAAS,EAAEiC,GAAG,CAACjC,SAHE;AAIjBC,UAAAA,KAAK,EAAEgC,GAAG,CAAChC,KAJM;AAKjBF,UAAAA,OAAO,EAAElB,SAAS,CAACC,MAAD;AALD,SAAL;AAAA;AAFhB;AAUD,GAfqB,CAAtB;AAiBA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEqD,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe5D,4BAA4B,CAAC6D,kBAA7B,CAAgD5C,YAA/D,CAFF,EAGE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,EAIE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAejB,4BAA4B,CAAC6D,kBAA7B,CAAgD1C,mBAA/D,CAJF,CADF,EAOE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAenB,4BAA4B,CAAC6D,kBAA7B,CAAgDzC,iBAA/D,CAFF,EAGE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,EAIE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAepB,4BAA4B,CAAC6D,kBAA7B,CAAgDxC,WAA/D,CAJF,CAPF,EAaE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,KAAb;AAAmB,IAAA,KAAK,EAAE;AAAEyC,MAAAA,SAAS,EAAE;AAAb,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE;AAAA,aAAMjB,mBAAmB,EAAzB;AAAA,KAAzC;AAAsE,IAAA,KAAK,EAAC,OAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAA0B,IAAA,SAAS,EAAC,SAApC;AAA8C,IAAA,OAAO,EAAE,mBAAM;AAAEV,MAAAA,gCAAgC;AAAI,KAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,CAbF,EAqBE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EAsBE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEhC,IAAZ;AAAkB,IAAA,SAAS,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,UAAU,EAAE;AACV4D,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEzC;AADF;AADI,KADd;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,UAAU,EAAEd,mBAPd;AAQE,IAAA,OAAO,EAAE+C,aARX;AASE,IAAA,IAAI,EAAC,OATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CADF;AAsCD,CA/NQ;AAAA,UAEQrE,IAAI,CAACe,OAFb;AAAA,GADX,CADF;AAkOA,eAAevB,eAAe,CAAC,QAAD,CAAf,CAA0BmB,aAA1B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../../i18n'\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider, Popconfirm } from 'antd'\nimport { DeleteOutlined, EditOutlined, FormOutlined } from '@ant-design/icons';\n\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { addKeyToDataSource, addCommaInData } from '../../data-utility'\n\nconst managePartner =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const { businessParametersSetupStore, t } = props\n      const [form] = Form.useForm();\n      const [editingKey, setEditingKey] = useState('')\n      const isEditing = record => record.key === editingKey;\n      const [mockDataPartnerList, setMockDataPartnerList] = useState([])\n      // var mockDataPartnerList = []\n      useEffect(() => {\n        addKeyToDataSource(businessParametersSetupStore.channelPartnerList).then((result) => {\n          // mockDataPartnerList = result\n          setMockDataPartnerList(result)\n        })\n      }, [])\n\n      const edit = record => {\n        form.setFieldsValue({\n          partner_code: record.product_type,\n          partner_description: record.product_description,\n          transaction_limit: '',\n          daily_limit: '',\n          ...record,\n        });\n        setEditingKey(record.key);\n      };\n\n      const cancel = () => {\n        setEditingKey('');\n      };\n\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n        return (\n          <td {...restProps}>\n            {editing ? (\n\n              <Form.Item\n                name={dataIndex == 'product_type' ? 'product_code' : dataIndex}\n                style={{\n                  margin: 0,\n                }}\n                rules={[\n                  {\n                    required: (inputType === 'number') ? true : false,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                {inputNode}\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        );\n      };\n\n      const prepareAllLimitToSubmitAndUpdate = () => {\n        if (viewSpecificProduct) {\n          // submitAddSpecificLimit()\n          setModalString(\n            <div style={{ textAlign: \"center\" }}>\n              <p> Add Partner {selectPartnerAndProduct.type} </p>\n              {/* <p>for {selectPartnerAndProduct.partner_code}/{selectPartnerAndProduct.partner_abbreviation} Channel/Partner !!!</p> */}\n            </div>\n          )\n        } else {\n          // submitChangeProductLimitSelect()\n\n          setModalString(\n            //waiting for confirm task\n            <div style={{ textAlign: \"center\" }}>\n              <p> Change Product Code {selectPartnerAndProduct.partner_code} Limit </p>\n              <p>for {selectPartnerAndProduct.partner_code}/{selectPartnerAndProduct.partner_abbreviation} Channel/Partner !!!</p>\n            </div>\n          )\n        }\n        setVisble(true)\n        setTitleModal('Confirm')\n        setModalType(\"confirm\")\n      }\n      const goBackToProductList = () => {\n        businessParametersSetupStore.goBack = true\n      }\n\n      const renderAction = (record) => {\n        /* if (record.status === '1') {\n          return (\n            <div>\n              <TcrbPopconfirm title=\"Sure to Delete?\" onConfirm={(e) => { submitDeleteProduct(record) }} disabled={editingKey !== ''}>\n                <a><DeleteOutlined style={{ fontSize: '18px' }} /></a>\n              </TcrbPopconfirm>\n              <a onClick={() => selectProductToViewDetail(record)}><SettingOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n              <a onClick={() => selectProductToSpecificLimit(record)}><FormOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n            </div>)\n        } else if (record.status === '2') {\n          return null\n        } else {\n          return (<div>\n            <TcrbPopconfirm title={\"Confirm to Add !!!\"} onConfirm={() => { submitAddnewProduct(record.key) }} >\n              <a>Confirm</a>\n            </TcrbPopconfirm><br />\n            <TcrbPopconfirm title={\"Confirm to Cancel !!!\"} onConfirm={() => { cancelAddNewProduct(record.key) }} >\n              <a>Cancel</a>\n            </TcrbPopconfirm>\n          </div>)\n        } */\n        const editable = isEditing(record);\n        return editable ? (\n          <span>\n            <a\n              href=\"javascript:;\"\n              onClick={() => save(record.key)}\n              style={{\n                marginRight: 8,\n              }}\n            >\n              Save\n            </a>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <a>Cancel</a>\n            </Popconfirm>\n          </span>\n        ) : (\n            <a disabled={editingKey !== ''} onClick={() => edit(record)}><EditOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n\n          );\n        {/* <EditOutlined /> */ }\n      }\n      const columnPartnerList = [\n        {\n          title: 'Partner / Channel',\n          dataIndex: 'partner_code',\n          render: (text, record) => addCommaInData(text)\n        },\n        {\n          title: 'Partner Description',\n          dataIndex: 'partner_abbreviation',\n          render: (text, record) => addCommaInData(text)\n        },\n        {\n          title: 'Txn Limit',\n          dataIndex: 'transaction_limit',\n          editable: true,\n          render: (text, record) => addCommaInData(text, true)\n        },\n        {\n          title: ' Daily Limit',\n          dataIndex: 'daily_limit',\n          editable: true,\n          render: (text, record) => addCommaInData(text, true)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          render: (text, record, index) =>\n            renderAction(record, index)\n        },\n      ]\n      const mergedColumns = columnPartnerList.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n\n      return (\n        <div style={{ padding: 24 }}>\n          <Row gutter={[4, 24]}>\n            <Col span={6}>Product_Code</Col>\n            <Col span={6}>{businessParametersSetupStore.productLimitDetail.product_type}</Col>\n            <Col span={6}>Product_Description</Col>\n            <Col span={6}>{businessParametersSetupStore.productLimitDetail.product_description}</Col>\n          </Row>\n          <Row gutter={[4, 24]}>\n            <Col span={6}>All-Channel Txn Limit</Col>\n            <Col span={6}>{businessParametersSetupStore.productLimitDetail.transaction_limit}</Col>\n            <Col span={6}>All-Channel Daily Limit</Col>\n            <Col span={6}>{businessParametersSetupStore.productLimitDetail.daily_limit}</Col>\n          </Row>\n          <Row justify=\"end\" style={{ marginTop: 8 }}>\n            <Col span={2}>\n              <TcrbButton className=\"default\" onClick={() => goBackToProductList()} shape=\"round\">Back</TcrbButton>\n            </Col>\n            <Col span={2}>\n              <TcrbButton shape=\"round\" className=\"primary\" onClick={() => { prepareAllLimitToSubmitAndUpdate() }}>Submit</TcrbButton>\n            </Col>\n          </Row>\n          <Divider />\n          <Form form={form} component={false}>\n            <Table\n              components={{\n                body: {\n                  cell: EditableCell,\n                },\n              }}\n              bordered\n              dataSource={mockDataPartnerList}\n              columns={mergedColumns}\n              size=\"small\"\n            />\n          </Form>\n        </div>\n      )\n    }))\nexport default withTranslation('common')(managePartner)\n"]},"metadata":{},"sourceType":"module"}