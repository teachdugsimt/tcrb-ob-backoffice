{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/pending-approvals.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Popconfirm } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport { DownOutlined } from '@ant-design/icons';\nimport { toJS } from 'mobx';\nimport { withTranslation } from '../../i18n';\nconst columns = [{\n  title: 'Ticket#',\n  dataIndex: 'ticket'\n}, {\n  title: 'Request Type',\n  dataIndex: 'requestType'\n}, {\n  title: 'Request Description',\n  dataIndex: 'requestDescription'\n}, {\n  title: 'Request ID',\n  dataIndex: 'requestId'\n}, {\n  title: 'Request Date',\n  dataIndex: 'requestDate'\n}, {\n  title: 'Action',\n  key: 'action',\n  render: () => __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(Popconfirm, {\n    title: \"Sure to Accept?\",\n    onConfirm: () => businessParametersSetupStore.selectProductToDelete(record),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    style: {\n      marginRight: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Accept\")), __jsx(Popconfirm, {\n    title: \"Sure to Reject?\",\n    onConfirm: () => businessParametersSetupStore.selectProductToDelete(record),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    style: {\n      marginRight: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Reject\")))\n}];\nconst data = [{\n  id: 1,\n  key: 1,\n  ticket: \"PAR0000001\",\n  requestType: \"OTP Max Retrying\",\n  requestDescription: \"Change from 3 to 5\",\n  requestId: \"T630213\",\n  requestDate: \"21-May-2020\",\n  action: null\n}];\nconst expand = {\n  expandedRowRender: record => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 47\n    }\n  }, record.description)\n};\n\nconst titleTable = () => 'Here is title';\n\nconst showHead = true;\n\nconst foot = () => 'Here is footer';\n\nconst page = {\n  position: 'bottom'\n};\nconst PendingApprovals = inject('businessParametersSetupStore')(observer(props => {\n  const {\n    0: expandable,\n    1: setExpandable\n  } = useState(expand);\n  const {\n    0: hasData,\n    1: setHasData\n  } = useState(true);\n  const {\n    0: top,\n    1: setTop\n  } = useState('none');\n  const {\n    0: bottom,\n    1: setBottom\n  } = useState(\"bottomRight\");\n  const {\n    0: pendingApprovalData,\n    1: setPendingApprovalData\n  } = useState([]);\n  const {\n    businessParametersSetupStore\n  } = props;\n  useEffect(() => {\n    console.log('render');\n  }, []);\n  useEffect(() => {\n    console.log(toJS(businessParametersSetupStore.pendingApprovals));\n\n    if (businessParametersSetupStore.pendingApprovals.length > 0) {\n      setPendingApprovalData(businessParametersSetupStore.pendingApprovals);\n    }\n  }, [businessParametersSetupStore.pendingApprovals]);\n\n  const handleTableLayoutChange = e => {\n    setTableLayout(e.target.value);\n  };\n\n  const handleExpandChange = enable => {\n    setExpandable(enable ? expandable : undefined);\n  };\n\n  const handleDataChange = hasData => {\n    setHasData(hasData);\n  };\n\n  const tableColumns = columns.map(item => _objectSpread({}, item));\n  return __jsx(Table, {\n    pagination: {\n      position: [top, bottom]\n    },\n    columns: tableColumns,\n    dataSource: pendingApprovalData // scroll={scroll}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  });\n}));\nexport default withTranslation('common')(PendingApprovals);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/pending-approvals.js"],"names":["React","useState","useEffect","Table","Popconfirm","inject","observer","DownOutlined","toJS","withTranslation","columns","title","dataIndex","key","render","businessParametersSetupStore","selectProductToDelete","record","marginRight","data","id","ticket","requestType","requestDescription","requestId","requestDate","action","expand","expandedRowRender","description","titleTable","showHead","foot","page","position","PendingApprovals","props","expandable","setExpandable","hasData","setHasData","top","setTop","bottom","setBottom","pendingApprovalData","setPendingApprovalData","console","log","pendingApprovals","length","handleTableLayoutChange","e","setTableLayout","target","value","handleExpandChange","enable","undefined","handleDataChange","tableColumns","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Popconfirm } from 'antd';\nimport { inject, observer } from 'mobx-react'\nimport { DownOutlined } from '@ant-design/icons';\nimport { toJS } from 'mobx'\nimport { withTranslation } from '../../i18n'\n\nconst columns = [\n  {\n    title: 'Ticket#',\n    dataIndex: 'ticket',\n  },\n  {\n    title: 'Request Type',\n    dataIndex: 'requestType',\n  },\n  {\n    title: 'Request Description',\n    dataIndex: 'requestDescription',\n  },\n  {\n    title: 'Request ID',\n    dataIndex: 'requestId',\n  },\n  {\n    title: 'Request Date',\n    dataIndex: 'requestDate',\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: () => (\n      <span>\n        <Popconfirm title=\"Sure to Accept?\" onConfirm={() => businessParametersSetupStore.selectProductToDelete(record)} >\n          <a style={{ marginRight: 16 }}>Accept</a>\n        </Popconfirm>\n        {/* <a style={{ marginRight: 16 }}>Accept</a> */}\n        <Popconfirm title=\"Sure to Reject?\" onConfirm={() => businessParametersSetupStore.selectProductToDelete(record)} >\n          <a style={{ marginRight: 16 }}>Reject</a>\n        </Popconfirm>\n        {/* <a className=\"ant-dropdown-link\">\n          Reject\n        </a> */}\n      </span>\n    ),\n  },\n];\n\nconst data = [{\n  id: 1, key: 1, ticket: \"PAR0000001\", requestType: \"OTP Max Retrying\", requestDescription: \"Change from 3 to 5\", requestId: \"T630213\",\n  requestDate: \"21-May-2020\", action: null\n}];\n\nconst expand = { expandedRowRender: record => <p>{record.description}</p> };\nconst titleTable = () => 'Here is title';\nconst showHead = true;\nconst foot = () => 'Here is footer';\nconst page = { position: 'bottom' };\n\nconst PendingApprovals =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const [expandable, setExpandable] = useState(expand)\n      const [hasData, setHasData] = useState(true)\n      const [top, setTop] = useState('none')\n      const [bottom, setBottom] = useState(\"bottomRight\")\n      const [pendingApprovalData, setPendingApprovalData] = useState([])\n      const { businessParametersSetupStore } = props\n      useEffect(() => {\n        console.log('render')\n      }, [])\n      useEffect(() => {\n        console.log(toJS(businessParametersSetupStore.pendingApprovals))\n        if (businessParametersSetupStore.pendingApprovals.length > 0) {\n          setPendingApprovalData(businessParametersSetupStore.pendingApprovals)\n        }\n      }, [businessParametersSetupStore.pendingApprovals])\n      const handleTableLayoutChange = e => {\n        setTableLayout(e.target.value)\n      };\n\n      const handleExpandChange = enable => {\n        setExpandable(enable ? expandable : undefined)\n      };\n\n      const handleDataChange = hasData => {\n        setHasData(hasData)\n      };\n\n      const tableColumns = columns.map(item => ({ ...item }));\n\n      return (\n        <Table\n          pagination={{ position: [top, bottom] }}\n          columns={tableColumns}\n          dataSource={pendingApprovalData}\n        // scroll={scroll}\n        />\n      )\n    }))\n\nexport default withTranslation('common')(PendingApprovals)\n\n"]},"metadata":{},"sourceType":"module"}