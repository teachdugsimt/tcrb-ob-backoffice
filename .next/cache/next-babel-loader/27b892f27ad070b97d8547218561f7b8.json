{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/product-list.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { DeleteOutlined, SettingOutlined, FormOutlined, ApartmentOutlined } from '@ant-design/icons';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider } from 'antd';\nimport { green, gold } from '@ant-design/colors';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../../i18n';\nimport styled from 'styled-components';\nimport { toJS } from 'mobx';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { addKeyToDataSource, addCommaInData } from '../../data-utility';\nvar Option = Select.Option;\nvar ProductList = inject('businessParametersSetupStore')(observer(_s(function (props) {\n  _s();\n\n  var _useState = useState(''),\n      editingKey = _useState[0],\n      setEditingKey = _useState[1];\n\n  var _useState2 = useState(false),\n      disabledButtonAddRow = _useState2[0],\n      setDisabledButtonAddRow = _useState2[1];\n\n  var _useState3 = useState([]),\n      dataSource = _useState3[0],\n      setDataSource = _useState3[1];\n\n  var _useState4 = useState([]),\n      productList = _useState4[0],\n      setProductList = _useState4[1];\n\n  var businessParametersSetupStore = props.businessParametersSetupStore,\n      t = props.t;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var isEditing = function isEditing(record) {\n    return record.key === editingKey;\n  };\n\n  useEffect(function () {\n    businessParametersSetupStore.getDataProductLimit();\n    businessParametersSetupStore.getDataChannelPartnerList();\n    businessParametersSetupStore.getDataProductList();\n  }, []);\n  useEffect(function () {\n    if (businessParametersSetupStore.productLimit.length > 0) {\n      addKeyToDataSource(businessParametersSetupStore.productLimit).then(function (result) {\n        businessParametersSetupStore.arrayProductLimit = result;\n        setDataSource(result);\n      });\n    }\n  }, [businessParametersSetupStore.productLimit]);\n  useEffect(function () {\n    if (businessParametersSetupStore.productList.length > 1) {\n      setProductList(businessParametersSetupStore.productList);\n    }\n  }, [businessParametersSetupStore.productList]);\n\n  var edit = function edit(record) {\n    form.setFieldsValue(_objectSpread({\n      product_type: '',\n      product_description: '',\n      transaction_limit: '',\n      daily_limit: '',\n      Specific: ''\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  var EditableCell = function EditableCell(_ref) {\n    var editing = _ref.editing,\n        dataIndex = _ref.dataIndex,\n        title = _ref.title,\n        inputType = _ref.inputType,\n        record = _ref.record,\n        index = _ref.index,\n        children = _ref.children,\n        restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n    var inputNode = inputType === 'number' ? __jsx(InputNumber, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 52\n      }\n    }) : __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 70\n      }\n    });\n    return __jsx(\"td\", _extends({}, restProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), editing ? __jsx(Form.Item, {\n      name: dataIndex == 'product_type' ? 'product_code' : dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: inputType === 'number' ? true : false,\n        message: \"Please Input \".concat(title, \"!\")\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, dataIndex == 'product_type' ? __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      onChange: function onChange(e) {\n        return console.log(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, productList.map(function (item, index) {\n      return __jsx(Option, {\n        key: index,\n        value: item.product_code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 55\n        }\n      }, item.product_type);\n    })) : __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, inputNode)) : children);\n  };\n\n  var addRowProductList = function addRowProductList() {\n    var newProduct = {\n      key: dataSource.length + 1,\n      product_code: '',\n      product_description: '',\n      transaction_limit: '',\n      daily_limit: '',\n      Specific: ''\n    };\n    setDataSource([].concat(_toConsumableArray(dataSource), [newProduct]));\n    edit(newProduct);\n    setDisabledButtonAddRow(true);\n    businessParametersSetupStore.arrayProductLimit = dataSource;\n  };\n\n  var submitAddnewProduct = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n      var row, indexProduct;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return form.validateFields();\n\n            case 2:\n              row = _context.sent;\n              // row.status = '2' //waiting confirm now use call new api\n              row.transaction_code = \"6931\";\n              indexProduct = productList.findIndex(function (item) {\n                return row.product_code === item.product_code;\n              });\n              row.product_type = productList[indexProduct].product_type; //waiting confirm\n\n              /* const newData = [...dataSource];\n              const index = newData.findIndex(item => key === item.key);\n              if (index > -1) {\n                const item = newData[index];\n                newData.splice(index, 1, { ...item, ...row });\n                setDataSource(newData);\n                setEditingKey('');\n              } else {\n                newData.push(row);\n                setDataSource(newData);\n                setEditingKey('');\n              } */\n\n              setEditingKey('');\n              setDisabledButtonAddRow(false);\n              businessParametersSetupStore.addNewProductLimit(row);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitAddnewProduct(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var cancelAddNewProduct = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(key) {\n      var indexProduct, newData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setDisabledButtonAddRow(false);\n              indexProduct = dataSource.findIndex(function (item) {\n                return key === item.key;\n              });\n              newData = _toConsumableArray(dataSource);\n              newData.splice(indexProduct, 1);\n              setDataSource(newData);\n              setEditingKey('');\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function cancelAddNewProduct(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var submitDeleteProduct = function submitDeleteProduct(record) {\n    //call api to update record status\n    console.log(toJS(record));\n    var indexRecordDelete = dataSource.findIndex(function (item) {\n      return record.key === item.key;\n    });\n\n    var newData = _toConsumableArray(dataSource);\n\n    newData[indexRecordDelete].status = '2';\n    businessParametersSetupStore.deleteProductLimit(record);\n    setDataSource(newData); //waiting useEffect to check api success\n  };\n\n  var renderOnclickHandler = function renderOnclickHandler(text, record) {\n    var stringToNumber = new Number(text);\n\n    if (isNaN(stringToNumber)) {\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 18\n        }\n      }, text);\n    } else {\n      var customText = stringToNumber.toLocaleString();\n      return __jsx(\"p\", {\n        style: {\n          textAlign: \"right\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 18\n        }\n      }, customText);\n    }\n  };\n\n  var selectProductToViewDetail = function selectProductToViewDetail(rowSelected) {\n    //call api to get Detail Product\n    businessParametersSetupStore.getDataDetailProductLimit(rowSelected.product_code); // businessParametersSetupStore.getDataChannelPartnerList()\n  };\n\n  var selectProductToSpecificLimit = function selectProductToSpecificLimit(record) {\n    businessParametersSetupStore.productSelect = record;\n    businessParametersSetupStore.nextPageIsAddPartner = true; // setViewSpecificProduct(true)\n  };\n\n  var renderActionAddDeleteHandler = function renderActionAddDeleteHandler(record, index) {\n    if (record.status === '1') {\n      return __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Sure to Delete?\",\n        onConfirm: function onConfirm(e) {\n          submitDeleteProduct(record);\n        },\n        disabled: editingKey !== '',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, __jsx(DeleteOutlined, {\n        style: {\n          fontSize: '18px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 20\n        }\n      }))), __jsx(\"a\", {\n        onClick: function onClick() {\n          return selectProductToViewDetail(record);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }, __jsx(FormOutlined, {\n        style: {\n          fontSize: '18px',\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 68\n        }\n      })));\n    } else if (record.status === '2') {\n      return null;\n    } else {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      }, __jsx(TcrbPopconfirm, {\n        title: \"Confirm to Add !!!\",\n        onConfirm: function onConfirm() {\n          submitAddnewProduct(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      }, \"Confirm\")), __jsx(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 30\n        }\n      }), __jsx(TcrbPopconfirm, {\n        title: \"Confirm to Cancel !!!\",\n        onConfirm: function onConfirm() {\n          cancelAddNewProduct(record.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }, \"Cancel\")));\n    }\n  };\n\n  var renderStatus = function renderStatus(record) {\n    if (record.status === '1') {\n      return __jsx(\"p\", {\n        style: {\n          color: green[6]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 18\n        }\n      }, \"Active\");\n    } else if (record.status === '2') {\n      return __jsx(\"p\", {\n        style: {\n          color: gold[6]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 18\n        }\n      }, \"Pending\");\n    } else {\n      return null;\n    }\n  };\n\n  var renderActionSpecificHandler = function renderActionSpecificHandler(record) {\n    if (record.status === '1') {\n      return __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 18\n        }\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          return selectProductToSpecificLimit(record);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 55\n        }\n      }, __jsx(ApartmentOutlined, {\n        style: {\n          fontSize: '18px',\n          color: '#FBA928'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 111\n        }\n      })));\n    } else {\n      return null;\n    }\n  };\n\n  var columns = [{\n    dataIndex: 'operation',\n    render: function render(text, record, index) {\n      return renderStatus(record, index);\n    }\n  }, {\n    title: 'Product_Code',\n    dataIndex: 'product_type',\n    width: '5%',\n    editable: true,\n    sorter: function sorter(a, b) {\n      return a.product_type.localeCompare(b.product_type);\n    },\n    render: function render(text, record) {\n      return addCommaInData(text, false);\n    },\n    sortDirections: ['descend', 'ascend']\n  }, {\n    title: 'Product_Description',\n    dataIndex: 'product_description',\n    // editable: true,\n    render: function render(text, record) {\n      return addCommaInData(text, false);\n    },\n    sorter: function sorter(a, b) {\n      return a.product_description.localeCompare(b.product_description);\n    },\n    sortDirections: ['descend', 'ascend']\n  }, {\n    title: 'All-Channel Txn Limit',\n    dataIndex: 'transaction_limit',\n    editable: true,\n    render: function render(text, record) {\n      return addCommaInData(text, true);\n    },\n    sorter: function sorter(a, b) {\n      return a.product_description.localeCompare(b.product_description);\n    },\n    sortDirections: ['descend', 'ascend']\n  }, {\n    title: 'All-Channel Daily Limit',\n    dataIndex: 'daily_limit',\n    editable: true,\n    render: function render(text, record) {\n      return addCommaInData(text, true);\n    }\n  }, {\n    title: 'Specific Channel Limit',\n    dataIndex: 'Specific',\n    // editable: true,\n    render: function render(text, record) {\n      return renderActionSpecificHandler(record);\n    }\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    render: function render(text, record, index) {\n      return renderActionAddDeleteHandler(record, index);\n    }\n  }];\n  var mergedColumns = columns.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        };\n      }\n    });\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, __jsx(TcrbButton, {\n    onClick: function onClick() {\n      return addRowProductList();\n    },\n    style: {\n      marginBottom: 16\n    },\n    disabled: disabledButtonAddRow,\n    className: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, \"Add a Product\")), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    flex: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, __jsx(Form, {\n    form: form,\n    component: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }, __jsx(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: dataSource,\n    columns: mergedColumns,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  })))));\n}, \"mgLZvMPmu9eu96crxdsWDA0xEXo=\", false, function () {\n  return [Form.useForm];\n})));\nexport default withTranslation('common')(ProductList);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup/product-list.js"],"names":["React","useState","useEffect","DeleteOutlined","SettingOutlined","FormOutlined","ApartmentOutlined","Table","Row","Col","Menu","Card","Input","Select","Form","InputNumber","Divider","green","gold","inject","observer","withTranslation","styled","toJS","TcrbButton","TcrbPopconfirm","addKeyToDataSource","addCommaInData","Option","ProductList","props","editingKey","setEditingKey","disabledButtonAddRow","setDisabledButtonAddRow","dataSource","setDataSource","productList","setProductList","businessParametersSetupStore","t","useForm","form","isEditing","record","key","getDataProductLimit","getDataChannelPartnerList","getDataProductList","productLimit","length","then","result","arrayProductLimit","edit","setFieldsValue","product_type","product_description","transaction_limit","daily_limit","Specific","EditableCell","editing","dataIndex","title","inputType","index","children","restProps","inputNode","margin","required","message","width","e","console","log","map","item","product_code","addRowProductList","newProduct","submitAddnewProduct","validateFields","row","transaction_code","indexProduct","findIndex","addNewProductLimit","cancelAddNewProduct","newData","splice","submitDeleteProduct","indexRecordDelete","status","deleteProductLimit","renderOnclickHandler","text","stringToNumber","Number","isNaN","customText","toLocaleString","textAlign","selectProductToViewDetail","rowSelected","getDataDetailProductLimit","selectProductToSpecificLimit","productSelect","nextPageIsAddPartner","renderActionAddDeleteHandler","fontSize","color","renderStatus","renderActionSpecificHandler","columns","render","editable","sorter","a","b","localeCompare","sortDirections","mergedColumns","col","onCell","marginBottom","body","cell"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { DeleteOutlined, SettingOutlined, FormOutlined, ApartmentOutlined } from '@ant-design/icons';\nimport { Table, Row, Col, Menu, Card, Input, Select, Form, InputNumber, Divider } from 'antd'\nimport { green, gold } from '@ant-design/colors';\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../../i18n'\nimport styled from 'styled-components'\nimport { toJS } from 'mobx'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { addKeyToDataSource, addCommaInData } from '../../data-utility'\n\nconst { Option } = Select;\n\nconst ProductList =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const [editingKey, setEditingKey] = useState('')\n      const [disabledButtonAddRow, setDisabledButtonAddRow] = useState(false)\n      const [dataSource, setDataSource] = useState([])\n      const [productList, setProductList] = useState([])\n\n      const { businessParametersSetupStore, t } = props\n      const [form] = Form.useForm();\n      const isEditing = record => record.key === editingKey;\n\n      useEffect(() => {\n        businessParametersSetupStore.getDataProductLimit()\n        businessParametersSetupStore.getDataChannelPartnerList()\n        businessParametersSetupStore.getDataProductList()\n      }, []);\n\n      useEffect(() => {\n        if (businessParametersSetupStore.productLimit.length > 0) {\n          addKeyToDataSource(businessParametersSetupStore.productLimit).then((result) => {\n            businessParametersSetupStore.arrayProductLimit = result\n            setDataSource(result)\n          })\n        }\n      }, [businessParametersSetupStore.productLimit])\n\n      useEffect(() => {\n        if (businessParametersSetupStore.productList.length > 1) {\n          setProductList(businessParametersSetupStore.productList)\n        }\n      }, [businessParametersSetupStore.productList])\n\n      const edit = record => {\n        form.setFieldsValue({\n          product_type: '',\n          product_description: '',\n          transaction_limit: '',\n          daily_limit: '',\n          Specific: '',\n          ...record,\n        });\n        setEditingKey(record.key);\n      };\n      const EditableCell = ({\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      }) => {\n        const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n        return (\n          <td {...restProps}>\n            {editing ? (\n\n              <Form.Item\n                name={dataIndex == 'product_type' ? 'product_code' : dataIndex}\n                style={{\n                  margin: 0,\n                }}\n                rules={[\n                  {\n                    required: (inputType === 'number') ? true : false,\n                    message: `Please Input ${title}!`,\n                  },\n                ]}\n              >\n                {/* {inputNode} */}\n                {dataIndex == 'product_type' ? (\n                  <Select\n                    style={{ width: '100%' }}\n                    onChange={(e) => console.log(e)}\n                  >\n                    {productList.map((item, index) => <Option key={index} value={item.product_code}>{item.product_type}</Option>)}\n                  </Select>) : (\n                    <div>\n                      {inputNode}\n                    </div>\n                  )}\n              </Form.Item>\n            ) : (\n                children\n              )\n            }\n          </td>\n        );\n      };\n      const addRowProductList = () => {\n        let newProduct = {\n          key: dataSource.length + 1,\n          product_code: '',\n          product_description: '',\n          transaction_limit: '',\n          daily_limit: '',\n          Specific: '',\n        }\n        setDataSource([...dataSource, newProduct])\n        edit(newProduct)\n        setDisabledButtonAddRow(true)\n        businessParametersSetupStore.arrayProductLimit = dataSource\n      }\n      const submitAddnewProduct = async (key) => {\n        // Call api to update record status\n        const row = await form.validateFields();\n        // row.status = '2' //waiting confirm now use call new api\n        row.transaction_code = \"6931\"\n        let indexProduct = productList.findIndex(item => row.product_code === item.product_code)\n        row.product_type = productList[indexProduct].product_type\n        //waiting confirm\n        /* const newData = [...dataSource];\n        const index = newData.findIndex(item => key === item.key);\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, { ...item, ...row });\n          setDataSource(newData);\n          setEditingKey('');\n        } else {\n          newData.push(row);\n          setDataSource(newData);\n          setEditingKey('');\n        } */\n        setEditingKey('');\n        setDisabledButtonAddRow(false)\n        businessParametersSetupStore.addNewProductLimit(row)\n      }\n\n      const cancelAddNewProduct = async (key) => {\n        setDisabledButtonAddRow(false)\n        let indexProduct = dataSource.findIndex(item => key === item.key)\n        const newData = [...dataSource]\n        newData.splice(indexProduct, 1)\n        setDataSource(newData);\n        setEditingKey('');\n      }\n\n      const submitDeleteProduct = (record) => {\n        //call api to update record status\n        console.log(toJS(record))\n        let indexRecordDelete = dataSource.findIndex(item => record.key === item.key)\n        const newData = [...dataSource];\n        newData[indexRecordDelete].status = '2'\n        businessParametersSetupStore.deleteProductLimit(record)\n        setDataSource(newData) //waiting useEffect to check api success\n      }\n      const renderOnclickHandler = (text, record) => {\n        let stringToNumber = new Number(text)\n        if (isNaN(stringToNumber)) {\n          return <p>{text}</p>\n        } else {\n          let customText = stringToNumber.toLocaleString()\n          return <p style={{ textAlign: \"right\" }}>{customText}</p>\n        }\n      }\n      const selectProductToViewDetail = (rowSelected) => {\n        //call api to get Detail Product\n        businessParametersSetupStore.getDataDetailProductLimit(rowSelected.product_code)\n        // businessParametersSetupStore.getDataChannelPartnerList()\n      }\n\n      const selectProductToSpecificLimit = (record) => {\n        businessParametersSetupStore.productSelect = record\n        businessParametersSetupStore.nextPageIsAddPartner = true\n        // setViewSpecificProduct(true)\n      }\n      const renderActionAddDeleteHandler = (record, index) => {\n        if (record.status === '1') {\n          return (\n            <div style={{ textAlign: \"center\" }}>\n              <TcrbPopconfirm title=\"Sure to Delete?\" onConfirm={(e) => { submitDeleteProduct(record) }} disabled={editingKey !== ''}>\n                <a><DeleteOutlined style={{ fontSize: '18px' }} /></a>\n              </TcrbPopconfirm>\n              <a onClick={() => selectProductToViewDetail(record)}><FormOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a>\n              {/* <a onClick={() => selectProductToSpecificLimit(record)}><ApartmentOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a> */}\n            </div>)\n        } else if (record.status === '2') {\n          return null\n        } else {\n          return (<div>\n            <TcrbPopconfirm title={\"Confirm to Add !!!\"} onConfirm={() => { submitAddnewProduct(record.key) }} >\n              <a>Confirm</a>\n            </TcrbPopconfirm><br />\n            <TcrbPopconfirm title={\"Confirm to Cancel !!!\"} onConfirm={() => { cancelAddNewProduct(record.key) }} >\n              <a>Cancel</a>\n            </TcrbPopconfirm>\n          </div>)\n        }\n      }\n      const renderStatus = (record) => {\n        if (record.status === '1') {\n          return <p style={{ color: green[6] }}>Active</p>\n        } else if (record.status === '2') {\n          return <p style={{ color: gold[6] }}>Pending</p>\n        } else {\n          return null\n        }\n      }\n      const renderActionSpecificHandler = (record) => {\n        if (record.status === '1') {\n          return <div style={{ textAlign: \"center\" }}><a onClick={() => selectProductToSpecificLimit(record)}><ApartmentOutlined style={{ fontSize: '18px', color: '#FBA928' }} /></a></div>\n        } else {\n          return null\n        }\n      }\n      const columns = [\n        {\n          dataIndex: 'operation',\n          render: (text, record, index) =>\n            renderStatus(record, index)\n        },\n        {\n          title: 'Product_Code',\n          dataIndex: 'product_type',\n          width: '5%',\n          editable: true,\n          sorter: (a, b) => a.product_type.localeCompare(b.product_type),\n          render: (text, record) => addCommaInData(text, false),\n          sortDirections: ['descend', 'ascend'],\n        },\n        {\n          title: 'Product_Description',\n          dataIndex: 'product_description',\n          // editable: true,\n          render: (text, record) => addCommaInData(text, false),\n          sorter: (a, b) => a.product_description.localeCompare(b.product_description),\n          sortDirections: ['descend', 'ascend'],\n        },\n        {\n          title: 'All-Channel Txn Limit',\n          dataIndex: 'transaction_limit',\n          editable: true,\n          render: (text, record) => addCommaInData(text, true),\n          sorter: (a, b) => a.product_description.localeCompare(b.product_description),\n          sortDirections: ['descend', 'ascend'],\n        },\n        {\n          title: 'All-Channel Daily Limit',\n          dataIndex: 'daily_limit',\n          editable: true,\n          render: (text, record) => addCommaInData(text, true)\n        },\n        {\n          title: 'Specific Channel Limit',\n          dataIndex: 'Specific',\n          // editable: true,\n          render: (text, record) => renderActionSpecificHandler(record)\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          render: (text, record, index) =>\n            renderActionAddDeleteHandler(record, index)\n        },\n      ];\n\n      const mergedColumns = columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            inputType: col.dataIndex === 'product_description' ? 'text' : 'number',\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n      return (\n        <div>\n          <Row>\n            <TcrbButton\n              onClick={() => addRowProductList()}\n              style={{\n                marginBottom: 16,\n              }}\n              disabled={disabledButtonAddRow}\n              className=\"primary\">Add a Product</TcrbButton>\n          </Row>\n          <Row>\n            <Col flex={100}>\n              <Form form={form} component={false}>\n\n                <Table\n                  components={{\n                    body: {\n                      cell: EditableCell,\n                    },\n                  }}\n                  bordered\n                  dataSource={dataSource}\n                  columns={mergedColumns}\n                  size=\"small\"\n                />\n              </Form>\n            </Col>\n\n          </Row>\n        </div>\n      )\n    }))\nexport default withTranslation('common')(ProductList)\n"]},"metadata":{},"sourceType":"module"}