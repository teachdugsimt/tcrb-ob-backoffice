{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _temp;\n\nimport { observable, action, toJS } from 'mobx';\nimport { StartupApi } from '../services';\nvar CustomerServicesMenuStore = (_class = (_temp = function CustomerServicesMenuStore() {\n  _classCallCheck(this, CustomerServicesMenuStore);\n\n  _initializerDefineProperty(this, \"citizenId\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"accountId\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"accountSelected\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"accountInfo\", _descriptor4, this);\n\n  _initializerDefineProperty(this, \"arrayAccountInfo\", _descriptor5, this);\n\n  _initializerDefineProperty(this, \"getData\", _descriptor6, this);\n\n  _initializerDefineProperty(this, \"setCitizenId\", _descriptor7, this);\n\n  _initializerDefineProperty(this, \"setAccountId\", _descriptor8, this);\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"citizenId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"accountId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"accountSelected\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"accountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"arrayAccountInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"getData\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n        var tmp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.citizenId = value;\n                _context.next = 3;\n                return StartupApi.getAccountInfo(value);\n\n              case 3:\n                tmp = _context.sent;\n                _this.accountInfo = tmp.data; // this.arrayAccountInfo = toJS(tmp.data)\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"setCitizenId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (id) {\n      _this2.citizenId = {\n        idCard: id\n      };\n    };\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"setAccountId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function (id) {\n      _this3.accountId = id;\n    };\n  }\n})), _class);\nexport default CustomerServicesMenuStore;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/stores/customer-services-menu-store.js"],"names":["observable","action","toJS","StartupApi","CustomerServicesMenuStore","value","citizenId","getAccountInfo","tmp","accountInfo","data","id","idCard","accountId"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,SAASC,UAAT,QAA2B,aAA3B;IAEMC,yB;;;;;;;;;;;;;;;;;;oFACHJ,U;;;;;WAAuB,E;;6EACvBA,U;;;;;WAAuB,E;;mFACvBA,U;;;;;WAA6B,E;;+EAC7BA,U;;;;;WAAyB,E;;oFACzBA,U;;;;;WAA8B,E;;2EAE9BC,M;;;;;;;;0EAAiB,iBAAOI,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,gBAAA,KAAI,CAACC,SAAL,GAAiBD,KAAjB;AADgB;AAAA,uBAEAF,UAAU,CAACI,cAAX,CAA0BF,KAA1B,CAFA;;AAAA;AAEZG,gBAAAA,GAFY;AAIhB,gBAAA,KAAI,CAACC,WAAL,GAAmBD,GAAG,CAACE,IAAvB,CAJgB,CAKhB;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;gFAOjBT,M;;;;;;;WAAsB,UAACU,EAAD,EAAQ;AAC7B,MAAA,MAAI,CAACL,SAAL,GAAiB;AAAEM,QAAAA,MAAM,EAAED;AAAV,OAAjB;AACD,K;;gFACAV,M;;;;;;;WAAsB,UAACU,EAAD,EAAQ;AAC7B,MAAA,MAAI,CAACE,SAAL,GAAiBF,EAAjB;AACD,K;;;AAEH,eAAeP,yBAAf","sourcesContent":["import { observable, action, toJS } from 'mobx'\nimport { StartupApi } from '../services'\n\nclass CustomerServicesMenuStore {\n  @observable citizenId = ''\n  @observable accountId = {}\n  @observable accountSelected = {}\n  @observable accountInfo = []\n  @observable arrayAccountInfo = []\n\n  @action getData = async (value) => {\n    this.citizenId = value\n    let tmp = await StartupApi.getAccountInfo(value)\n\n    this.accountInfo = tmp.data\n    // this.arrayAccountInfo = toJS(tmp.data)\n  }\n  @action setCitizenId = (id) => {\n    this.citizenId = { idCard: id }\n  }\n  @action setAccountId = (id) => {\n    this.accountId = id\n  }\n}\nexport default CustomerServicesMenuStore\n"]},"metadata":{},"sourceType":"module"}