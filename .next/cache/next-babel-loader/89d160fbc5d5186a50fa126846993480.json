{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Input, Row, Col, Button } from 'antd';\nimport styled from 'styled-components';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../i18n';\nimport SimpleModal from '../simple-modal';\nconst StyledInput = styled(Input).withConfig({\n  displayName: \"otp-setup__StyledInput\",\n  componentId: \"y1xkpv-0\"\n})([\"background-color:unset !important;border:unset !important;border-bottom:1px solid black !important;box-shadow:none !important;.ant-input{text-align:center !important;background-color:unset !important;\", \"}\"], ''\n/* cursor:not-allowed !important; */\n);\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null);\n\n  const setFocus = () => {\n    htmlElRef.current && htmlElRef.current.focus();\n  };\n\n  return [htmlElRef, setFocus];\n};\n\nconst OtpSetup = inject('businessParametersSetupStore')(observer(props => {\n  const {\n    t,\n    businessParametersSetupStore\n  } = props;\n  const {\n    0: expireOtp,\n    1: setExpire\n  } = useState(null);\n  const {\n    0: visibleExpireEdit,\n    1: setvisibleExpireEdit\n  } = useState(true);\n  const {\n    0: visibleExpireSubmit,\n    1: setvisibleExpireSubmit\n  } = useState(false);\n  const {\n    0: disExpire,\n    1: setdisExpire\n  } = useState(false);\n  const {\n    0: maximumOtp,\n    1: setMaximum\n  } = useState(null);\n  const {\n    0: visibleEditMaximum,\n    1: setvisibleEditMaximum\n  } = useState(true);\n  const {\n    0: visibleSubmitMaximum,\n    1: setvisibleSubmitMaximum\n  } = useState(false);\n  const {\n    0: disMaximum,\n    1: setdisMaximum\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModal\n  } = useState(\"\"); // const [inputRef, setInputFocus] = useFocus()\n\n  useEffect(() => {\n    let data = {\n      otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\"\n    };\n    businessParametersSetupStore.getOTPdata(data);\n  }, []);\n  useEffect(() => {\n    let newProps = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue));\n    console.log(\"Will Receive props : \", newProps);\n\n    if (newProps && newProps != undefined) {\n      if (!expireOtp || !maximumOtp) {\n        let tmpExpire = newProps.find(e => e.Name == \"OTP_EXPIRE_TIME\");\n        let tmpMaximum = newProps.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\");\n        setExpire(tmpExpire.Value);\n        setMaximum(tmpMaximum.Value);\n      }\n    }\n  }, [businessParametersSetupStore.responseGetOtpValue]);\n\n  const _onClickExpiration = () => {\n    let expire = document.getElementById(\"otp-expiration-period\");\n    expire.style.color = \"orange\";\n    expire.focus();\n    setvisibleExpireEdit(false);\n    setvisibleExpireSubmit(true);\n  };\n\n  const _onClickMaximumRetry = () => {\n    let maximum = document.getElementById(\"otp-maximum-retrying\");\n    maximum.style.color = \"orange\";\n    maximum.focus();\n    setvisibleEditMaximum(false);\n    setvisibleSubmitMaximum(true);\n  };\n\n  const _openPopup = text => {\n    setVisible(true);\n    setModal(\"Confirm update otp \" + text);\n  };\n\n  const _onConfirm = async () => {\n    if (modalString.includes(\"expire\")) {\n      if (getValueFromStore(\"expire\") != expireOtp) {\n        await businessParametersSetupStore.updateOTPdata({\n          OTP_EXPIRE_TIME: expireOtp\n        });\n        businessParametersSetupStore.closeExpire(true);\n        setdisExpire(false);\n      } else {// alert(\"don't have any change\")\n      }\n    } else {\n      if (getValueFromStore(\"maximum\") != maximumOtp) {\n        await businessParametersSetupStore.updateOTPdata({\n          OTP_MAXIMUN_ENTERED: maximumOtp\n        });\n        businessParametersSetupStore.closeMaximum(true);\n        setdisMaximum(false);\n      } else {// alert(\"don't have any change\")\n      }\n    }\n  };\n\n  const getValueFromStore = type => {\n    let old_data = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue));\n\n    if (type == \"expire\") {\n      let tmpExpire = old_data.find(e => e.Name == \"OTP_EXPIRE_TIME\");\n      return tmpExpire.Value;\n    } else {\n      let tmpMaximum = old_data.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\");\n      return tmpMaximum.Value;\n    }\n  };\n\n  const _onCancel = () => {\n    setVisible(false);\n\n    if (modalString.includes(\"expire\")) {\n      setModal(\"\");\n      setvisibleExpireEdit(true);\n      setvisibleExpireSubmit(false);\n      setExpire(getValueFromStore(\"expire\"));\n    } else {\n      setModal(\"\");\n      setvisibleEditMaximum(true);\n      setvisibleSubmitMaximum(false);\n      setMaximum(getValueFromStore(\"maximum\"));\n    }\n\n    let expire = document.getElementById(\"otp-expiration-period\");\n    let maximum = document.getElementById(\"otp-maximum-retrying\");\n    expire.style.color = \"rgba(0, 0, 0, 0.65)\";\n    expire.blur();\n    maximum.style.color = \"rgba(0, 0, 0, 0.65)\";\n    maximum.blur();\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [8, 8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    disabled: businessParametersSetupStore.editOtpMaximumRetry != null ? businessParametersSetupStore.editOtpMaximumRetry : disMaximum,\n    id: \"otp-maximum-retrying\",\n    value: maximumOtp,\n    onChange: e => setMaximum(e.target.value),\n    prefix: \"OTP Maximum Retrying\",\n    suffix: \"Times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, visibleEditMaximum && __jsx(Button, {\n    onClick: () => _onClickMaximumRetry(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 38\n    }\n  }, t(\"edit\")), visibleSubmitMaximum && __jsx(Button, {\n    onClick: () => _openPopup(\"maximum\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 40\n    }\n  }, t(\"submit\")))), __jsx(Row, {\n    gutter: [8, 8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    disabled: businessParametersSetupStore.editOtpExpirationPeriod != null ? businessParametersSetupStore.editOtpExpirationPeriod : disExpire\n    /*ref={inputRef}*/\n    ,\n    id: \"otp-expiration-period\",\n    value: expireOtp,\n    onChange: e => setExpire(e.target.value),\n    prefix: \"OTP Expiration Perlod\",\n    suffix: \"Seconds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, visibleExpireEdit && __jsx(Button\n  /*onClick={setInputFocus}*/\n  , {\n    onClick: () => _onClickExpiration(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 37\n    }\n  }, t(\"edit\")), visibleExpireSubmit && __jsx(Button\n  /*onClick={setInputFocus}*/\n  , {\n    onClick: () => _openPopup(\"expire\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 39\n    }\n  }, t(\"submit\")))), __jsx(SimpleModal, {\n    onOk: () => _onConfirm(),\n    onCancel: () => _onCancel(),\n    okText: t(\"confirm\"),\n    cancelText: t(\"cancel\"),\n    modalString: modalString,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }));\n}));\nexport default withTranslation('common')(OtpSetup); // original text : rgba(0, 0, 0, 0.65);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/otp-setup.js"],"names":["React","useEffect","useRef","useState","Input","Row","Col","Button","styled","inject","observer","withTranslation","SimpleModal","StyledInput","useFocus","htmlElRef","setFocus","current","focus","OtpSetup","props","t","businessParametersSetupStore","expireOtp","setExpire","visibleExpireEdit","setvisibleExpireEdit","visibleExpireSubmit","setvisibleExpireSubmit","disExpire","setdisExpire","maximumOtp","setMaximum","visibleEditMaximum","setvisibleEditMaximum","visibleSubmitMaximum","setvisibleSubmitMaximum","disMaximum","setdisMaximum","visible","setVisible","modalString","setModal","data","otpParamsField","getOTPdata","newProps","JSON","parse","stringify","responseGetOtpValue","console","log","undefined","tmpExpire","find","e","Name","tmpMaximum","Value","_onClickExpiration","expire","document","getElementById","style","color","_onClickMaximumRetry","maximum","_openPopup","text","_onConfirm","includes","getValueFromStore","updateOTPdata","OTP_EXPIRE_TIME","closeExpire","OTP_MAXIMUN_ENTERED","closeMaximum","type","old_data","_onCancel","blur","editOtpMaximumRetry","target","value","editOtpExpirationPeriod"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { Input, Row, Col, Button } from 'antd'\nimport styled from 'styled-components'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../i18n'\nimport SimpleModal from '../simple-modal'\n\nconst StyledInput = styled(Input)`\n  background-color: unset !important;\n  border: unset !important;\n  border-bottom: 1px solid black !important;\n  box-shadow: none !important;\n  .ant-input{\n    text-align: center !important;\n    background-color: unset !important;\n    ${'' /* cursor:not-allowed !important; */}\n  }\n`\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null)\n  const setFocus = () => { htmlElRef.current && htmlElRef.current.focus() }\n  return [htmlElRef, setFocus]\n}\n\nconst OtpSetup =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const { t, businessParametersSetupStore } = props\n      const [expireOtp, setExpire] = useState(null)\n      const [visibleExpireEdit, setvisibleExpireEdit] = useState(true)\n      const [visibleExpireSubmit, setvisibleExpireSubmit] = useState(false)\n      const [disExpire, setdisExpire] = useState(false)\n\n      const [maximumOtp, setMaximum] = useState(null)\n      const [visibleEditMaximum, setvisibleEditMaximum] = useState(true)\n      const [visibleSubmitMaximum, setvisibleSubmitMaximum] = useState(false)\n      const [disMaximum, setdisMaximum] = useState(false)\n\n      const [visible, setVisible] = useState(false)\n      const [modalString, setModal] = useState(\"\")\n      // const [inputRef, setInputFocus] = useFocus()\n\n      useEffect(() => {\n        let data = { otpParamsField: \"OTP_EXPIRE_TIME,OTP_MAXIMUM_ENTERED,OTP_TOKEN_EXPIRE_TIME\" }\n        businessParametersSetupStore.getOTPdata(data)\n      }, [])\n\n      useEffect(() => {\n        let newProps = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue))\n        console.log(\"Will Receive props : \", newProps)\n        if (newProps && newProps != undefined) {\n          if (!expireOtp || !maximumOtp) {\n            let tmpExpire = newProps.find(e => e.Name == \"OTP_EXPIRE_TIME\")\n            let tmpMaximum = newProps.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\")\n            setExpire(tmpExpire.Value)\n            setMaximum(tmpMaximum.Value)\n          }\n        }\n      }, [businessParametersSetupStore.responseGetOtpValue])\n\n      const _onClickExpiration = () => {\n        let expire = document.getElementById(\"otp-expiration-period\")\n        expire.style.color = \"orange\"\n        expire.focus()\n        setvisibleExpireEdit(false)\n        setvisibleExpireSubmit(true)\n      }\n\n      const _onClickMaximumRetry = () => {\n        let maximum = document.getElementById(\"otp-maximum-retrying\")\n        maximum.style.color = \"orange\"\n        maximum.focus()\n        setvisibleEditMaximum(false)\n        setvisibleSubmitMaximum(true)\n      }\n\n      const _openPopup = (text) => {\n        setVisible(true)\n        setModal(\"Confirm update otp \" + text)\n      }\n\n      const _onConfirm = async () => {\n        if (modalString.includes(\"expire\")) {\n          if (getValueFromStore(\"expire\") != expireOtp) {\n            await businessParametersSetupStore.updateOTPdata({\n              OTP_EXPIRE_TIME: expireOtp\n            })\n            businessParametersSetupStore.closeExpire(true)\n            setdisExpire(false)\n          } else {\n            // alert(\"don't have any change\")\n          }\n        } else {\n          if (getValueFromStore(\"maximum\") != maximumOtp) {\n            await businessParametersSetupStore.updateOTPdata({\n              OTP_MAXIMUN_ENTERED: maximumOtp\n            })\n            businessParametersSetupStore.closeMaximum(true)\n            setdisMaximum(false)\n          } else {\n            // alert(\"don't have any change\")\n          }\n        }\n      }\n\n      const getValueFromStore = (type) => {\n        let old_data = JSON.parse(JSON.stringify(businessParametersSetupStore.responseGetOtpValue))\n        if (type == \"expire\") {\n          let tmpExpire = old_data.find(e => e.Name == \"OTP_EXPIRE_TIME\")\n          return tmpExpire.Value\n        } else {\n          let tmpMaximum = old_data.find(e => e.Name == \"OTP_MAXIMUM_ENTERED\")\n          return tmpMaximum.Value\n        }\n      }\n\n      const _onCancel = () => {\n        setVisible(false)\n        if (modalString.includes(\"expire\")) {\n          setModal(\"\")\n          setvisibleExpireEdit(true)\n          setvisibleExpireSubmit(false)\n          setExpire(getValueFromStore(\"expire\"))\n        } else {\n          setModal(\"\")\n          setvisibleEditMaximum(true)\n          setvisibleSubmitMaximum(false)\n          setMaximum(getValueFromStore(\"maximum\"))\n        }\n        let expire = document.getElementById(\"otp-expiration-period\")\n        let maximum = document.getElementById(\"otp-maximum-retrying\")\n        expire.style.color = \"rgba(0, 0, 0, 0.65)\"\n        expire.blur()\n        maximum.style.color = \"rgba(0, 0, 0, 0.65)\"\n        maximum.blur()\n      }\n\n      return (\n        <div>\n          <Row gutter={[8, 8]}>\n            <Col span={8}>\n              <StyledInput disabled={businessParametersSetupStore.editOtpMaximumRetry != null ? businessParametersSetupStore.editOtpMaximumRetry : disMaximum} id={\"otp-maximum-retrying\"} value={maximumOtp} onChange={(e) => setMaximum(e.target.value)} prefix=\"OTP Maximum Retrying\" suffix=\"Times\" />\n            </Col>\n            <Col span={6}>\n              {visibleEditMaximum && <Button onClick={() => _onClickMaximumRetry()}>{t(\"edit\")}</Button>}\n              {visibleSubmitMaximum && <Button onClick={() => _openPopup(\"maximum\")}>{t(\"submit\")}</Button>}\n            </Col>\n          </Row>\n          <Row gutter={[8, 8]}>\n            <Col span={8}>\n              <StyledInput disabled={businessParametersSetupStore.editOtpExpirationPeriod != null ? businessParametersSetupStore.editOtpExpirationPeriod : disExpire} /*ref={inputRef}*/ id={\"otp-expiration-period\"} value={expireOtp} onChange={(e) => setExpire(e.target.value)} prefix=\"OTP Expiration Perlod\" suffix=\"Seconds\" />\n            </Col>\n            <Col span={6}>\n              {visibleExpireEdit && <Button /*onClick={setInputFocus}*/ onClick={() => _onClickExpiration()} >{t(\"edit\")}</Button>}\n              {visibleExpireSubmit && <Button /*onClick={setInputFocus}*/ onClick={() => _openPopup(\"expire\")} >{t(\"submit\")}</Button>}\n            </Col>\n          </Row>\n          <SimpleModal\n            onOk={() => _onConfirm()}\n            onCancel={() => _onCancel()}\n            okText={t(\"confirm\")}\n            cancelText={t(\"cancel\")}\n            modalString={modalString}\n            visible={visible}\n          />\n        </div>\n      )\n    }))\n\nexport default withTranslation('common')(OtpSetup)\n// original text : rgba(0, 0, 0, 0.65);\n"]},"metadata":{},"sourceType":"module"}