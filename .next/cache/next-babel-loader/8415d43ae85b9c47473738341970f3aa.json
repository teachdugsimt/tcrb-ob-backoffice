{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { checkDefaultStatus } from '../../data-utility';\nimport SimpleInput from '../../simple-input';\nconst {\n  Option\n} = Select;\n\nconst UserList = () => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: mockDataUser,\n    1: setMockDataUser\n  } = useState([]);\n  const [form] = Form.useForm();\n  useEffect(() => {\n    setMockDataUser(testAddUser());\n  }, []);\n\n  const CollectionCreateForm = ({\n    visible,\n    onCreate,\n    onCancel\n  }) => {\n    return __jsx(Modal, {\n      visible: visible,\n      title: \"Add new User\",\n      okText: \"Submit\",\n      cancelText: \"Cancel\",\n      onCancel: onCancel,\n      width: 900,\n      onOk: () => {\n        form.validateFields().then(values => {\n          form.resetFields();\n          onCreate(values);\n        }).catch(info => {\n          console.log('Validate Failed:', info);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, __jsx(Form, {\n      form: form,\n      layout: \"vertical\",\n      name: \"form_in_modal\",\n      initialValues: {\n        modifier: 'public'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Employee ID\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Supervisor\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"supervisor\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \"Name\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Surname\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"surname\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"Username\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"Username\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, \"Email\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"email\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, __jsx(SimpleInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, \"Join Date\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"jonDate\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, \"Last working date\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"lastWorkingDate\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    })))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      span: 4,\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, \"Status\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"status\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }))), __jsx(Col, {\n      span: 4,\n      style: {\n        paddingLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, \"Section\")), __jsx(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      name: \"section\",\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      onChange: value => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }))))));\n  };\n\n  const testAddUser = () => {\n    let newUser = [];\n\n    for (let index = 1; index < 6; index++) {\n      newUser.push({\n        id: index,\n        key: index,\n        username: \"Username_\" + index,\n        name: 'name' + index,\n        surname: 'Surname' + index,\n        supervisor: 'Supervisor' + index,\n        department: 'Department' + index,\n        groups: 3,\n        request_status: 'ACTIVE'\n      });\n    }\n\n    return newUser;\n  };\n\n  const onCreate = values => {\n    console.log('Received values of form: ', values);\n    setVisible(false);\n  };\n\n  const renderActionUser = record => {\n    if (record.request_status == 'APPROVE') {\n      return __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        disabled: editingKey !== '',\n        onClick: () => viewDepartmentDetail(record),\n        style: {\n          marginRight: 8,\n          color: '#FBA928'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }\n      }, \"Edit\"), __jsx(TcrbPopconfirm, {\n        title: \"Sure to Deactivate?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#FBA928'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }\n      }, \"Deactivate\")));\n    } else if (record.request_status == 'PENDING') {\n      return null;\n    } else {\n      return null;\n    }\n  };\n\n  const columnUser = [{\n    title: '',\n    dataIndex: 'status',\n    width: '5%',\n    render: (text, record) => checkDefaultStatus(record)\n  }, {\n    title: 'Username',\n    dataIndex: 'username',\n    editable: true // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n\n  }, {\n    title: 'Name',\n    dataIndex: 'name' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Surname',\n    dataIndex: 'surname' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Supervisor',\n    dataIndex: 'supervisor' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Department',\n    dataIndex: 'department' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Groups',\n    dataIndex: 'groups' // render: (text, record) => renderSection(record)\n\n  }, {\n    title: 'Action',\n    dataIndex: 'operation',\n    width: '10%',\n    render: (text, record) => renderActionUser(record)\n  }];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: () => setVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 11\n    }\n  }, \"Add User\"))), __jsx(Table, {\n    bordered: true,\n    dataSource: mockDataUser,\n    columns: columnUser,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }), __jsx(CollectionCreateForm, {\n    visible: visible,\n    onCreate: onCreate,\n    onCancel: () => {\n      setVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js"],"names":["React","useState","useEffect","Table","Row","Col","Menu","Card","Input","Select","InputNumber","Divider","Button","Modal","Drawer","Form","DatePicker","Space","TcrbButton","TcrbPopconfirm","checkDefaultStatus","SimpleInput","Option","UserList","visible","setVisible","mockDataUser","setMockDataUser","form","useForm","testAddUser","CollectionCreateForm","onCreate","onCancel","validateFields","then","values","resetFields","catch","info","console","log","modifier","padding","required","message","paddingLeft","width","value","type","newUser","index","push","id","key","username","name","surname","supervisor","department","groups","request_status","renderActionUser","record","textAlign","editingKey","viewDepartmentDetail","marginRight","color","columnUser","title","dataIndex","render","text","editable"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer, Form, DatePicker, Space } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\n\nimport { checkDefaultStatus } from '../../data-utility'\nimport SimpleInput from '../../simple-input'\n\nconst { Option } = Select;\n\nconst UserList = () => {\n  const [visible, setVisible] = useState(false)\n  const [mockDataUser, setMockDataUser] = useState([])\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    setMockDataUser(testAddUser())\n  }, [])\n  const CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\n    return (\n      <Modal\n        visible={visible}\n        title=\"Add new User\"\n        okText=\"Submit\"\n        cancelText=\"Cancel\"\n        onCancel={onCancel}\n        width={900}\n        onOk={() => {\n          form\n            .validateFields()\n            .then(values => {\n              form.resetFields();\n              onCreate(values);\n            })\n            .catch(info => {\n              console.log('Validate Failed:', info);\n            });\n        }}\n      >\n        <Form\n          form={form}\n          layout=\"vertical\"\n          name=\"form_in_modal\"\n          initialValues={{\n            modifier: 'public',\n          }}\n        >\n\n          <Row >\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Employee ID\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"title\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Supervisor\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"supervisor\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => null}\n                >\n                  {/* {children} */}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row >\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Name\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"name\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Surname\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"surname\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Username\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"Username\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput />\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Email\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  {\n                    type: 'email',\n                    message: 'The input is not valid E-mail!',\n                  },\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <SimpleInput />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Join Date\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"jonDate\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <DatePicker style={{ width: '100%' }} />\n\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Last working date\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"lastWorkingDate\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <DatePicker style={{ width: '100%' }} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4} style={{ padding: 4 }}>\n              <span>\n                Status\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"status\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => null}\n                >\n                  {/* {children} */}\n                </Select>\n\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ paddingLeft: 16 }}>\n              <span>\n                Section\n              </span>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                name=\"section\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input the title of collection!',\n                  },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  placeholder=\"Please select\"\n                  onChange={(value) => null}\n                >\n                  {/* {children} */}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n\n\n\n        </Form>\n      </Modal>\n    );\n  }\n\n  const testAddUser = () => {\n    let newUser = []\n    for (let index = 1; index < 6; index++) {\n      newUser.push(\n        {\n          id: index,\n          key: index,\n          username: \"Username_\" + index,\n          name: 'name' + index,\n          surname: 'Surname' + index,\n          supervisor: 'Supervisor' + index,\n          department: 'Department' + index,\n          groups: 3,\n          request_status: 'ACTIVE'\n        }\n      )\n    }\n    return newUser\n  }\n  const onCreate = values => {\n    console.log('Received values of form: ', values);\n    setVisible(false);\n  }\n\n  const renderActionUser = (record) => {\n    if (record.request_status == 'APPROVE') {\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <a disabled={editingKey !== ''} onClick={() => viewDepartmentDetail(record)} style={{ marginRight: 8, color: '#FBA928' }}>\n            Edit\n          </a>\n          <TcrbPopconfirm title=\"Sure to Deactivate?\" >\n            <a style={{ color: '#FBA928' }}>Deactivate</a>\n          </TcrbPopconfirm>\n        </div>\n      )\n    } else if (record.request_status == 'PENDING') {\n      return null\n    } else {\n      return null\n    }\n  }\n\n  const columnUser = [\n    {\n      title: '',\n      dataIndex: 'status',\n      width: '5%',\n      render: (text, record) => checkDefaultStatus(record)\n    },\n    {\n      title: 'Username',\n      dataIndex: 'username',\n      editable: true,\n      // render: (text, record) => (record.partner_code + \"/\" + record.partner_abbreviation)\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      // render: (text, record) => renderSection(record)\n    },\n    {\n      title: 'Surname',\n      dataIndex: 'surname',\n      // render: (text, record) => renderSection(record)\n    },\n    {\n      title: 'Supervisor',\n      dataIndex: 'supervisor',\n      // render: (text, record) => renderSection(record)\n    },\n    {\n      title: 'Department',\n      dataIndex: 'department',\n      // render: (text, record) => renderSection(record)\n    },\n    {\n      title: 'Groups',\n      dataIndex: 'groups',\n      // render: (text, record) => renderSection(record)\n    },\n    {\n      title: 'Action',\n      dataIndex: 'operation',\n      width: '10%',\n      render: (text, record) => renderActionUser(record)\n    }\n  ]\n\n\n  return (\n    <div>\n      <Row gutter={[4, 24]}>\n        <Col span={2}>\n          <TcrbButton className=\"primary\" onClick={() => setVisible(true)} >Add User</TcrbButton>\n        </Col>\n      </Row>\n      <Table\n        bordered\n        dataSource={mockDataUser}\n        columns={columnUser}\n        size=\"small\"\n      />\n      <CollectionCreateForm\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n    </div>\n  )\n}\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}