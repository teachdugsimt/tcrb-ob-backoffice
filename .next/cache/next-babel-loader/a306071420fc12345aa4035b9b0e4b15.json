{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useEffect, createRef } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from '../../i18n';\nimport styled from 'styled-components';\nimport { toJS } from 'mobx';\nimport SimpleMenu from '../simple-menu';\nimport SimpleInput from '../simple-input';\nimport SimpleModal from '../simple-modal';\nconst {\n  Option\n} = _Select;\nconst testOption = [{\n  partner_code: \"TMDS\",\n  partner_abbreviation: \"Micropay\",\n  partner_code_group: \"TMDS\"\n}, {\n  partner_code: \"TRUM\",\n  partner_abbreviation: \"TrueWallet\",\n  partner_code_group: \"TRUM\"\n}, {\n  partner_code: \"TMD1\",\n  partner_abbreviation: \"ThaiMicropay\",\n  partner_code_group: null\n}, {\n  partner_code: \"OBCH\",\n  partner_abbreviation: \"TCRB\",\n  partner_code_group: null\n}];\n\nconst EditableCell = (_ref) => {\n  let {\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children\n  } = _ref,\n      restProps = _objectWithoutProperties(_ref, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n  // const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n  return __jsx(\"td\", _extends({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), editing ? __jsx(_Form.Item, {\n    name: dataIndex,\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    // onChange={(value) => selectPartnerChanel(value)}\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, testOption.map((item, index) => __jsx(Option, {\n    key: index,\n    value: item.product_type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 46\n    }\n  }, item.partner_code)))) : children);\n};\n\nconst ProductLimitSetup = inject('businessParametersSetupStore')(observer(props => {\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    0: viewDetailProduct,\n    1: setViewDetailProduct\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisble\n  } = useState(false);\n  const {\n    0: modalString,\n    1: setModalString\n  } = useState('');\n  const {\n    0: showLimitPartner,\n    1: setShowLimitPartner\n  } = useState(false);\n  const {\n    0: editingKey,\n    1: setEditingKey\n  } = useState('');\n  const {\n    0: titleModal,\n    1: setTitleModal\n  } = useState('');\n  const {\n    0: modalType,\n    1: setModalType\n  } = useState('');\n  const {\n    0: selectPartnerAndProduct,\n    1: setSelectPartnerAndProduct\n  } = useState({});\n  const {\n    businessParametersSetupStore,\n    t\n  } = props;\n\n  const [form] = _Form.useForm();\n\n  var txnLimit,\n      dailyLimit = ''; // var selectPartnerAndProduct = {}\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue(_objectSpread({\n      name: '',\n      age: '',\n      address: ''\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  useEffect(() => {\n    // setDataSource(mockDataSource)\n    businessParametersSetupStore.getDataProductLimit();\n  }, []);\n  useEffect(() => {\n    if (businessParametersSetupStore.productLimit.length > 0) {\n      addKeyToDataSource(businessParametersSetupStore.productLimit).then(result => {\n        businessParametersSetupStore.arrayProductLimit = result;\n        setDataSource(result);\n      });\n    }\n  }, [businessParametersSetupStore.productLimit]);\n\n  const handleDelete = key => {\n    // const dataSource = [...this.state.dataSource];\n    // setDataSource(dataSource.filter(item => item.key !== key))\n    console.log(key);\n  };\n\n  const addKeyToDataSource = arrayDataSource => {\n    let newDataSource = arrayDataSource;\n\n    for (let index = 0; index < newDataSource.length; index++) {\n      newDataSource[index].key = index + 1;\n    }\n\n    return new Promise(resolve => {\n      resolve(newDataSource);\n    });\n  };\n\n  const convertToArrayOptionSelect = arrayObject => {\n    let result = arrayObject.map(partnerList => [partnerList.partner_code, partnerList.partner_code + '/' + partnerList.partner_abbreviation]);\n    return new Promise(resolve => resolve(result));\n  };\n\n  const submitChangeLimit = () => {// txnLimit, dailyLimit\n    // call api\n  };\n\n  const submitChangeProductLimitSelect = () => {\n    //call api\n    setVisble(true);\n    setTitleModal('Confirm');\n    setModalType(\"confirm\");\n    setModalString(__jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \" Change Product Code \", selectPartnerAndProduct.partner_code, \" Limit \"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, \"for \", selectPartnerAndProduct.partner_code, \"/\", selectPartnerAndProduct.partner_abbreviation, \" Channel/Partner !!!\")));\n  };\n\n  const selectPartnerChanel = value => {\n    let productSelectObject = testOption.filter(item => item.partner_code == value); // selectPartnerAndProduct = productSelectObject[0]\n\n    setSelectPartnerAndProduct(productSelectObject[0]);\n    console.log(selectPartnerAndProduct); //partner_code, product_code\n    // businessParametersSetupStore.getPartnerChannel()\n\n    setShowLimitPartner(true);\n  };\n\n  const selectProductToViewDetail = rowSelected => {\n    //call api to get Detail Product\n    useEffect(() => {\n      //if(businessParametersSetupStore.productLimitDetail)\n      console.log(toJS(businessParametersSetupStore.productLimitDetail));\n    }, [businessParametersSetupStore.productLimitDetail]);\n    useEffect(() => {\n      console.log(toJS(businessParametersSetupStore.channelPartnerList));\n    }, [businessParametersSetupStore.channelPartnerList]);\n    businessParametersSetupStore.getDataDetailProductLimit({\n      product_code: rowSelected.product_code\n    });\n    businessParametersSetupStore.getDataChannelPartnerList(); // Output:\n    // {\n    //   responseCode:\"S0000\",\n    //   userMessage:\"Transaction successful\",\n    //   developerMessage:\"Normal success\",\n    //   responseDateTime:\"2020-06-18 14:43:04\",\n    // responseData: {\n    //   id:7,\n    //   created_on:\"2020-06-15T13:09:48.000Z\",\n    //   created_by:\"system\",\n    //   updated_on:null,\n    //   updated_by:null,\n    //   terminated_on:null,\n    //   terminated_by:null,\n    //   transaction_code:\"6619\",\n    //   partner_code:\"\",\n    //   transaction_limit:\"1000000\",\n    //   daily_limit:\"1000000\",\n    //   status:\"1\",\n    //   request_status:\"0\",\n    //   product_code:\"00006\",\n    //   product_description:\"Test Program - High LTV ดอกเบี้ยพิเศษ 9.99%\",\n    //   product_type:\"NG\"\n    // }\n    // }\n    //call api for channel/ partner\n    //Input:\n    // \"filter\": {\n    //   \"attributes\": [\"partner_code\", \"partner_abbreviation\"]\n    // }\n\n    setViewDetailProduct(true);\n  };\n\n  const addRowProductList = () => {\n    // console.log(toJS(businessParametersSetupStore.arrayProductLimit))\n    let newProduct = {\n      created_by: \"system\",\n      created_on: \"2020-06-15T13:09:48.000Z\",\n      daily_limit: \"1000000\",\n      id: 7,\n      partner_code: \"\",\n      product_code: \"00006\" + dataSource.length,\n      product_description: \"Test Program - High LTV ดอกเบี้ยพิเศษ 9.99%\",\n      product_type: \"NG\",\n      request_status: \"0\",\n      status: \"1\",\n      terminated_by: null,\n      terminated_on: null,\n      transaction_code: \"6619\",\n      transaction_limit: \"1000000\",\n      updated_by: null,\n      updated_on: null,\n      key: dataSource.length + 1\n    };\n    setDataSource([...dataSource, newProduct]);\n    edit(newProduct);\n    businessParametersSetupStore.arrayProductLimit = dataSource;\n  };\n\n  const goBackProductList = () => {\n    setViewDetailProduct(false);\n  };\n\n  const submitAddnewProduct = record => {\n    // Call api to update record status\n    dataSource.map(detailDataSource => {\n      if (detailDataSource.key === record.key) {\n        record.status = 2;\n      }\n    });\n    setEditingKey('');\n  };\n\n  const submitDeleteProduct = record => {\n    //call api to update record status\n    dataSource.map(detailDataSource => {\n      if (detailDataSource.key === record.key) {\n        record.status = 2;\n      }\n    }); //setDataSource() //<<waiting result api and  add key index\n  };\n\n  const renderOnclickHandler = (text, record) => {\n    return __jsx(\"p\", {\n      onClick: () => selectProductToViewDetail(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 16\n      }\n    }, text);\n  };\n\n  const renderActionAddDeleteHandler = (record, index) => {\n    if (index + 1 <= businessParametersSetupStore.arrayProductLimit.length) {\n      return __jsx(_Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: e => {\n          submitDeleteProduct(record);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 18\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, \"Delete\"));\n    } else if (record.status === 2) {\n      return null;\n    } else {\n      return __jsx(_Popconfirm, {\n        title: \"Confirm to add \" + record.product_type + record.product_description + \"!!!\",\n        onConfirm: () => {\n          submitAddnewProduct(record);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 18\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }, \"confirm\"));\n    }\n  };\n\n  const columns = [{\n    dataIndex: 'operation',\n    render: (text, record, index) => renderActionAddDeleteHandler(record, index)\n  }, {\n    title: 'Product_Code',\n    dataIndex: 'product_type',\n    width: '10%',\n    editable: true\n  }, {\n    title: 'Product_Description',\n    dataIndex: 'product_description',\n    render: (text, record) => renderOnclickHandler(text, record)\n  }, {\n    title: 'All-Channel Txn Limit',\n    dataIndex: 'TxnLimit',\n    render: (text, record) => renderOnclickHandler(text, record)\n  }, {\n    title: 'All-Channel Daily Limit',\n    dataIndex: 'daily_limit',\n    render: (text, record) => renderOnclickHandler(text, record)\n  }, {\n    title: 'Specific Channel Limit',\n    dataIndex: 'Specific',\n    render: (text, record) => renderOnclickHandler(text, record)\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: record => ({\n        record,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    });\n  });\n  const mockDataSource = [{\n    key: '0',\n    ProductCode: 'NE',\n    ProductDescription: 'Revolving Loan-Non TCG Nano',\n    TxnLimit: '100,000.00',\n    DailyLimit: '100,000.00'\n  }, {\n    key: '1',\n    ProductCode: 'NG',\n    ProductDescription: 'Revolving Loan-Non TCG Micro',\n    TxnLimit: '200,000.00',\n    DailyLimit: '200,000.00'\n  }, {\n    key: '2',\n    ProductCode: 'NH',\n    ProductDescription: 'Revolving Loan-TCG Nano',\n    TxnLimit: '100,000.00',\n    DailyLimit: '100,000.00'\n  }];\n\n  const detailProduct = () => {\n    // var optionList = []\n    // convertToArrayOptionSelect(testOption).then((result) => {\n    //   optionList = result\n    // })\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }\n    }, __jsx(_Card, {\n      style: {\n        padding: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }\n    }, __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 15\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }, \"Product_Code\"), __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.product_type)), __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, \"Product_Description\"), __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.product_description))), __jsx(_Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }\n    }, __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 15\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }\n    }, \"All-Channel Txn Limit\"), __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.transaction_limit)), __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 15\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }\n    }, \"All-Channel Daily Limit\"), __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }, businessParametersSetupStore.productLimitDetail.daily_limit))), __jsx(_Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }\n    }, __jsx(_Row, {\n      gutter: [4, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 15\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, \"Channel/Partner\"), __jsx(_Col, {\n      span: 6,\n      flex: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, __jsx(_Select, {\n      onChange: value => selectPartnerChanel(value),\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }, testOption.map((item, index) => __jsx(Option, {\n      key: index,\n      value: item.partner_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 54\n      }\n    }, item.partner_code, \"/\", item.partner_abbreviation))))), showLimitPartner ? __jsx(React.Fragment, null, __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 19\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }\n    }, __jsx(SimpleInput, {\n      readOnly: false,\n      defaultValue: null,\n      prefix: 'Txn Limit',\n      onChange: e => {\n        txnLimit = e;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 23\n      }\n    })), __jsx(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      style: {\n        paddingTop: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 23\n      }\n    }, \"THB\"))), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 19\n      }\n    }, __jsx(_Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }\n    }, __jsx(SimpleInput, {\n      readOnly: false,\n      defaultValue: null,\n      prefix: 'Daily Limit',\n      onChange: e => {\n        dailyLimit = e;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 23\n      }\n    })), __jsx(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      style: {\n        paddingTop: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 23\n      }\n    }, \"THB\")))) : ''), __jsx(_Row, {\n      justify: \"center\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 15\n      }\n    }, __jsx(_Button, {\n      onClick: () => goBackProductList(),\n      shape: \"round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }\n    }, \"Back\")), __jsx(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 15\n      }\n    }, __jsx(_Button, {\n      shape: \"round\",\n      type: \"primary\",\n      onClick: () => {\n        submitChangeProductLimitSelect();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }\n    }, \"Submit\"))), __jsx(SimpleModal, {\n      title: titleModal,\n      type: modalType,\n      onOk: () => unlockOTP(),\n      onCancel: () => setVisble(false),\n      textOk: t(\"confirm\"),\n      textCancel: t(\"cancel\"),\n      modalString: modalString,\n      visible: visible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const productList = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }\n    }, __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 13\n      }\n    }, __jsx(_Button, {\n      onClick: () => addRowProductList(),\n      type: \"primary\",\n      style: {\n        marginBottom: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 15\n      }\n    }, \"Add a row\")), __jsx(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 13\n      }\n    }, __jsx(_Col, {\n      flex: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 15\n      }\n    }, __jsx(_Form, {\n      form: form,\n      component: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }\n    }, __jsx(_Table, {\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: mergedColumns,\n      onRow: (record, rowIndex) => {\n        return {//onClick: event => { selectProductToViewDetail(record) }, // click row\n        };\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 19\n      }\n    })))));\n  };\n\n  return viewDetailProduct ? detailProduct() : productList();\n}));\nexport default withTranslation('common')(ProductLimitSetup);","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/business-parameters-setup/product-limit-setup.js"],"names":["React","useState","useEffect","createRef","inject","observer","withTranslation","styled","toJS","SimpleMenu","SimpleInput","SimpleModal","Option","testOption","partner_code","partner_abbreviation","partner_code_group","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","margin","width","map","item","product_type","ProductLimitSetup","props","dataSource","setDataSource","viewDetailProduct","setViewDetailProduct","visible","setVisble","modalString","setModalString","showLimitPartner","setShowLimitPartner","editingKey","setEditingKey","titleModal","setTitleModal","modalType","setModalType","selectPartnerAndProduct","setSelectPartnerAndProduct","businessParametersSetupStore","t","form","useForm","txnLimit","dailyLimit","isEditing","key","edit","setFieldsValue","name","age","address","getDataProductLimit","productLimit","length","addKeyToDataSource","then","result","arrayProductLimit","handleDelete","console","log","arrayDataSource","newDataSource","Promise","resolve","convertToArrayOptionSelect","arrayObject","partnerList","submitChangeLimit","submitChangeProductLimitSelect","textAlign","selectPartnerChanel","value","productSelectObject","filter","selectProductToViewDetail","rowSelected","productLimitDetail","channelPartnerList","getDataDetailProductLimit","product_code","getDataChannelPartnerList","addRowProductList","newProduct","created_by","created_on","daily_limit","id","product_description","request_status","status","terminated_by","terminated_on","transaction_code","transaction_limit","updated_by","updated_on","goBackProductList","submitAddnewProduct","detailDataSource","submitDeleteProduct","renderOnclickHandler","text","renderActionAddDeleteHandler","e","columns","render","editable","mergedColumns","col","onCell","mockDataSource","ProductCode","ProductDescription","TxnLimit","DailyLimit","detailProduct","padding","paddingTop","marginTop","unlockOTP","productList","marginBottom","body","cell","rowIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from 'react'\nimport { Button, Table, Popconfirm, Row, Col, Menu, Card, Input, Select, Form } from 'antd'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from '../../i18n'\nimport styled from 'styled-components'\nimport { toJS } from 'mobx'\nimport SimpleMenu from '../simple-menu'\nimport SimpleInput from '../simple-input'\nimport SimpleModal from '../simple-modal'\n\nconst { Option } = Select;\nconst testOption = [\n  {\n    partner_code: \"TMDS\",\n    partner_abbreviation: \"Micropay\",\n    partner_code_group: \"TMDS\"\n  },\n  {\n    partner_code: \"TRUM\",\n    partner_abbreviation: \"TrueWallet\",\n    partner_code_group: \"TRUM\"\n  },\n  {\n    partner_code: \"TMD1\",\n    partner_abbreviation: \"ThaiMicropay\",\n    partner_code_group: null\n  },\n  {\n    partner_code: \"OBCH\",\n    partner_abbreviation: \"TCRB\",\n    partner_code_group: null\n  }\n]\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  // const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n  return (\n    <td {...restProps}>\n      {editing ? (\n\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n        >\n          <Select\n            // onChange={(value) => selectPartnerChanel(value)}\n            style={{ width: '100%' }}\n          >\n            {testOption.map((item, index) => <Option key={index} value={item.product_type}>{item.partner_code}</Option>)}\n          </Select>\n        </Form.Item>\n      ) : (\n          children\n        )}\n    </td>\n  );\n};\n\nconst ProductLimitSetup =\n  inject('businessParametersSetupStore')\n    (observer((props) => {\n      const [dataSource, setDataSource] = useState([])\n      const [viewDetailProduct, setViewDetailProduct] = useState(false)\n      const [visible, setVisble] = useState(false)\n      const [modalString, setModalString] = useState('')\n      const [showLimitPartner, setShowLimitPartner] = useState(false)\n      const [editingKey, setEditingKey] = useState('')\n      const [titleModal, setTitleModal] = useState('')\n      const [modalType, setModalType] = useState('')\n      const [selectPartnerAndProduct, setSelectPartnerAndProduct] = useState({})\n      const { businessParametersSetupStore, t } = props\n      const [form] = Form.useForm();\n      var txnLimit, dailyLimit = ''\n      // var selectPartnerAndProduct = {}\n\n\n      const isEditing = record => record.key === editingKey;\n      const edit = record => {\n        form.setFieldsValue({\n          name: '',\n          age: '',\n          address: '',\n          ...record,\n        });\n        setEditingKey(record.key);\n      };\n      useEffect(() => {\n        // setDataSource(mockDataSource)\n        businessParametersSetupStore.getDataProductLimit()\n\n      }, []);\n\n      useEffect(() => {\n        if (businessParametersSetupStore.productLimit.length > 0) {\n          addKeyToDataSource(businessParametersSetupStore.productLimit).then((result) => {\n            businessParametersSetupStore.arrayProductLimit = result\n            setDataSource(result)\n          })\n        }\n      }, [businessParametersSetupStore.productLimit])\n\n\n\n\n      const handleDelete = key => {\n        // const dataSource = [...this.state.dataSource];\n        // setDataSource(dataSource.filter(item => item.key !== key))\n        console.log(key)\n\n      };\n\n      const addKeyToDataSource = (arrayDataSource) => {\n        let newDataSource = arrayDataSource\n        for (let index = 0; index < newDataSource.length; index++) {\n          newDataSource[index].key = index + 1;\n        }\n        return new Promise((resolve) => {\n          resolve(newDataSource)\n        })\n      }\n\n      const convertToArrayOptionSelect = (arrayObject) => {\n        let result = arrayObject.map(partnerList => [partnerList.partner_code, partnerList.partner_code + '/' + partnerList.partner_abbreviation]);\n        return new Promise((resolve) => resolve(result))\n      }\n\n      const submitChangeLimit = () => {\n        // txnLimit, dailyLimit\n        // call api\n      }\n\n      const submitChangeProductLimitSelect = () => {\n        //call api\n        setVisble(true)\n        setTitleModal('Confirm')\n        setModalType(\"confirm\")\n        setModalString(\n          <div style={{ textAlign: \"center\" }}>\n            <p> Change Product Code {selectPartnerAndProduct.partner_code} Limit </p>\n            <p>for {selectPartnerAndProduct.partner_code}/{selectPartnerAndProduct.partner_abbreviation} Channel/Partner !!!</p>\n          </div>\n        )\n      }\n\n      const selectPartnerChanel = (value) => {\n        let productSelectObject = testOption.filter(item => item.partner_code == value)\n        // selectPartnerAndProduct = productSelectObject[0]\n        setSelectPartnerAndProduct(productSelectObject[0])\n        console.log(selectPartnerAndProduct)\n        //partner_code, product_code\n        // businessParametersSetupStore.getPartnerChannel()\n        setShowLimitPartner(true)\n      }\n\n      const selectProductToViewDetail = (rowSelected) => {\n        //call api to get Detail Product\n        useEffect(() => {\n          //if(businessParametersSetupStore.productLimitDetail)\n          console.log(toJS(businessParametersSetupStore.productLimitDetail))\n        }, [businessParametersSetupStore.productLimitDetail])\n\n        useEffect(() => {\n          console.log(toJS(businessParametersSetupStore.channelPartnerList))\n        }, [businessParametersSetupStore.channelPartnerList])\n        businessParametersSetupStore.getDataDetailProductLimit({ product_code: rowSelected.product_code })\n        businessParametersSetupStore.getDataChannelPartnerList()\n        // Output:\n        // {\n        //   responseCode:\"S0000\",\n        //   userMessage:\"Transaction successful\",\n        //   developerMessage:\"Normal success\",\n        //   responseDateTime:\"2020-06-18 14:43:04\",\n        // responseData: {\n        //   id:7,\n        //   created_on:\"2020-06-15T13:09:48.000Z\",\n        //   created_by:\"system\",\n        //   updated_on:null,\n        //   updated_by:null,\n        //   terminated_on:null,\n        //   terminated_by:null,\n        //   transaction_code:\"6619\",\n        //   partner_code:\"\",\n        //   transaction_limit:\"1000000\",\n        //   daily_limit:\"1000000\",\n        //   status:\"1\",\n        //   request_status:\"0\",\n        //   product_code:\"00006\",\n        //   product_description:\"Test Program - High LTV ดอกเบี้ยพิเศษ 9.99%\",\n        //   product_type:\"NG\"\n        // }\n        // }\n        //call api for channel/ partner\n        //Input:\n        // \"filter\": {\n        //   \"attributes\": [\"partner_code\", \"partner_abbreviation\"]\n        // }\n        setViewDetailProduct(true)\n      }\n\n      const addRowProductList = () => {\n        // console.log(toJS(businessParametersSetupStore.arrayProductLimit))\n        let newProduct = {\n          created_by: \"system\",\n          created_on: \"2020-06-15T13:09:48.000Z\",\n          daily_limit: \"1000000\",\n          id: 7,\n          partner_code: \"\",\n          product_code: \"00006\" + dataSource.length,\n          product_description: \"Test Program - High LTV ดอกเบี้ยพิเศษ 9.99%\",\n          product_type: \"NG\",\n          request_status: \"0\",\n          status: \"1\",\n          terminated_by: null,\n          terminated_on: null,\n          transaction_code: \"6619\",\n          transaction_limit: \"1000000\",\n          updated_by: null,\n          updated_on: null,\n          key: dataSource.length + 1\n        }\n        setDataSource([...dataSource, newProduct])\n        edit(newProduct)\n        businessParametersSetupStore.arrayProductLimit = dataSource\n      }\n      const goBackProductList = () => {\n        setViewDetailProduct(false)\n      }\n      const submitAddnewProduct = (record) => {\n        // Call api to update record status\n        dataSource.map(detailDataSource => {\n          if (detailDataSource.key === record.key) {\n            record.status = 2\n          }\n        })\n        setEditingKey('')\n      }\n\n      const submitDeleteProduct = (record) => {\n        //call api to update record status\n        dataSource.map(detailDataSource => {\n          if (detailDataSource.key === record.key) {\n            record.status = 2\n          }\n        })\n        //setDataSource() //<<waiting result api and  add key index\n      }\n      const renderOnclickHandler = (text, record) => {\n        return <p onClick={() => selectProductToViewDetail(record)}>{text}</p>\n      }\n      const renderActionAddDeleteHandler = (record, index) => {\n        if (index + 1 <= businessParametersSetupStore.arrayProductLimit.length) {\n          return <Popconfirm title=\"Sure to delete?\" onConfirm={(e) => { submitDeleteProduct(record) }} >\n            <a>Delete</a>\n          </Popconfirm>\n        } else if (record.status === 2) {\n          return null\n        } else {\n          return <Popconfirm title={\"Confirm to add \" + record.product_type + record.product_description + \"!!!\"} onConfirm={() => { submitAddnewProduct(record) }} >\n            <a>confirm</a>\n          </Popconfirm>\n        }\n      }\n      const columns = [\n        {\n          dataIndex: 'operation',\n          render: (text, record, index) =>\n            renderActionAddDeleteHandler(record, index)\n        },\n        {\n          title: 'Product_Code',\n          dataIndex: 'product_type',\n          width: '10%',\n          editable: true,\n        },\n        {\n          title: 'Product_Description',\n          dataIndex: 'product_description',\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'All-Channel Txn Limit',\n          dataIndex: 'TxnLimit',\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'All-Channel Daily Limit',\n          dataIndex: 'daily_limit',\n          render: (text, record) => renderOnclickHandler(text, record)\n        },\n        {\n          title: 'Specific Channel Limit',\n          dataIndex: 'Specific',\n          render: (text, record) => renderOnclickHandler(text, record)\n\n        },\n      ];\n\n      const mergedColumns = columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        };\n      });\n\n      const mockDataSource = [\n        {\n          key: '0',\n          ProductCode: 'NE',\n          ProductDescription: 'Revolving Loan-Non TCG Nano',\n          TxnLimit: '100,000.00',\n          DailyLimit: '100,000.00'\n        },\n        {\n          key: '1',\n          ProductCode: 'NG',\n          ProductDescription: 'Revolving Loan-Non TCG Micro',\n          TxnLimit: '200,000.00',\n          DailyLimit: '200,000.00'\n        },\n        {\n          key: '2',\n          ProductCode: 'NH',\n          ProductDescription: 'Revolving Loan-TCG Nano',\n          TxnLimit: '100,000.00',\n          DailyLimit: '100,000.00'\n        },\n      ]\n\n      const detailProduct = () => {\n\n        // var optionList = []\n        // convertToArrayOptionSelect(testOption).then((result) => {\n        //   optionList = result\n        // })\n\n\n        return (\n          <div>\n            <Card style={{ padding: 8 }}>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>Product_Code</Col>\n                <Col span={6}>{businessParametersSetupStore.productLimitDetail.product_type}</Col>\n              </Row>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>Product_Description</Col>\n                <Col span={6}>{businessParametersSetupStore.productLimitDetail.product_description}</Col>\n              </Row>\n            </Card>\n            <Card>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>All-Channel Txn Limit</Col>\n                <Col span={6}>{businessParametersSetupStore.productLimitDetail.transaction_limit}</Col>\n              </Row>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>All-Channel Daily Limit</Col>\n                <Col span={6}>{businessParametersSetupStore.productLimitDetail.daily_limit}</Col>\n              </Row>\n            </Card>\n            <Card>\n              <Row gutter={[4, 24]}>\n                <Col span={6}>Channel/Partner</Col>\n                <Col span={6} flex={100}>\n                  {/* <SimpleMenu options={optionList} onChange={(e) => { selectPartnerChanel(e) }} /> */}\n                  <Select\n                    onChange={(value) => selectPartnerChanel(value)}\n                    style={{ width: '100%' }}\n                  >\n                    {testOption.map((item, index) => <Option key={index} value={item.partner_code}>{item.partner_code}/{item.partner_abbreviation}</Option>)}\n                  </Select>\n                </Col>\n              </Row>\n              {(showLimitPartner) ? (\n                <>\n                  <Row>\n                    <Col span={6}>\n                      <SimpleInput readOnly={false} defaultValue={null} prefix={'Txn Limit'} onChange={(e) => { txnLimit = e }} />\n                    </Col>\n                    <Col span={2}>\n                      <p style={{ paddingTop: 4 }}>THB</p>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col span={6}>\n                      <SimpleInput readOnly={false} defaultValue={null} prefix={'Daily Limit'} onChange={(e) => { dailyLimit = e }} />\n                    </Col>\n                    <Col span={2}>\n                      <p style={{ paddingTop: 4 }}>THB</p>\n                    </Col>\n                  </Row>\n\n                </>\n              ) : ('')}\n\n            </Card>\n            <Row justify=\"center\" style={{ marginTop: 8 }}>\n              <Col span={2}>\n                <Button onClick={() => goBackProductList()} shape=\"round\">Back</Button>\n              </Col>\n              <Col span={2}>\n                <Button shape=\"round\" type=\"primary\" onClick={() => { submitChangeProductLimitSelect() }}>Submit</Button>\n              </Col>\n            </Row>\n            <SimpleModal\n              title={titleModal}\n              type={modalType}\n              onOk={() => unlockOTP()}\n              onCancel={() => setVisble(false)}\n              textOk={t(\"confirm\")}\n              textCancel={t(\"cancel\")}\n              modalString={modalString}\n              visible={visible}\n            />\n          </div>\n        )\n      }\n\n      const productList = () => {\n        return (\n          <div>\n            <Row>\n              <Button\n                onClick={() => addRowProductList()}\n                type=\"primary\"\n                style={{\n                  marginBottom: 16,\n                }}\n              >Add a row</Button>\n            </Row>\n            <Row>\n              <Col flex={100}>\n                <Form form={form} component={false}>\n\n                  <Table\n                    components={{\n                      body: {\n                        cell: EditableCell,\n                      },\n                    }}\n                    rowClassName={() => 'editable-row'}\n                    bordered\n                    dataSource={dataSource}\n                    columns={mergedColumns}\n                    onRow={(record, rowIndex) => {\n                      return {\n                        //onClick: event => { selectProductToViewDetail(record) }, // click row\n                      };\n                    }}\n                  />\n                </Form>\n              </Col>\n\n            </Row>\n          </div>\n        )\n      }\n      return (viewDetailProduct) ? detailProduct() : productList()\n    }))\nexport default withTranslation('common')(ProductLimitSetup)\n"]},"metadata":{},"sourceType":"module"}