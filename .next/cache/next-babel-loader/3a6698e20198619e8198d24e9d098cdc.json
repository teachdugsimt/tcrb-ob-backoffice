{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer } from 'antd';\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles';\nimport { Formik, Field, Form } from \"formik\";\nimport SimpleInput from '../../simple-input';\n\nconst UserList = () => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [4, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(TcrbButton, {\n    className: \"primary\",\n    onClick: () => openModalAddNewRole(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, \"Add User\"))), __jsx(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    render: ({\n      touched,\n      errors,\n      values,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    }) => __jsx(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, __jsx(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, \"Email *\", touched.email && errors.email && __jsx(Text, {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 35\n      }\n    }, errors.email), __jsx(Input, {\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      border: touched.email && errors.email && \"1px solid red\",\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    })), __jsx(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Password *\", touched.password && errors.password && __jsx(Text, {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 38\n      }\n    }, errors.password), __jsx(Input, {\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      border: touched.password && errors.password && \"1px solid red\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    })), __jsx(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"Submit\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/components/user-access-management/user/user-list.js"],"names":["React","Table","Row","Col","Menu","Card","Input","Select","InputNumber","Divider","Button","Modal","Drawer","TcrbButton","TcrbPopconfirm","Formik","Field","Form","SimpleInput","UserList","openModalAddNewRole","name","email","values","console","log","touched","errors","handleChange","handleBlur","handleSubmit","password"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Table, Row, Col, Menu, Card, Input, Select, InputNumber, Divider, Button, Modal, Drawer } from 'antd'\nimport { TcrbButton, TcrbPopconfirm } from '../../antd-styles/styles'\nimport { Formik, Field, Form } from \"formik\";\n\nimport SimpleInput from '../../simple-input'\n\nconst UserList = () => {\n  return (\n    <div>\n      <Row gutter={[4, 24]}>\n        <Col span={2}>\n          <TcrbButton className=\"primary\" onClick={() => openModalAddNewRole()} >Add User</TcrbButton>\n        </Col>\n      </Row>\n      <Formik\n        initialValues={{ name: \"\", email: \"\" }}\n        onSubmit={values => {\n          console.log(values)\n        }}\n\n        render={({\n          touched,\n          errors,\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n            <Form onSubmit={handleSubmit}>\n              <Label>\n                Email *\n                {touched.email &&\n                  errors.email && <Text color=\"red\">{errors.email}</Text>}\n                <Input\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  border={touched.email && errors.email && \"1px solid red\"}\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                />\n              </Label>\n              <Label>\n                Password *\n                {touched.password &&\n                  errors.password && <Text color=\"red\">{errors.password}</Text>}\n                <Input\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  border={\n                    touched.password && errors.password && \"1px solid red\"\n                  }\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n              </Label>\n              <Button type=\"submit\">Submit</Button>\n            </Form>\n          )}\n      />\n    </div>\n  )\n}\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}