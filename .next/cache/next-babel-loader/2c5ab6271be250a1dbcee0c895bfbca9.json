{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/pages/test-lazy-loading.js\";\nvar __jsx = React.createElement;\n// import React,{ lazy, useState } from 'react'\n// export default function TestLazyLoading() {\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\nimport React, { lazy, useState, Suspense } from 'react'; // import shortid from 'shortid';\n\nconst importView = chartName => lazy(() => import(`../components/${chartName}`).catch(() => import(`../components/customer-services-menu`)));\n\nconst data = [{\n  id: 'php',\n  label: 'php',\n  value: 372,\n  color: 'hsl(233, 70%, 50%)'\n}, {\n  id: 'scala',\n  label: 'scala',\n  value: 363,\n  color: 'hsl(15, 70%, 50%)'\n}, {\n  id: 'go',\n  label: 'go',\n  value: 597,\n  color: 'hsl(79, 70%, 50%)'\n}, {\n  id: 'css',\n  label: 'css',\n  value: 524,\n  color: 'hsl(142, 70%, 50%)'\n}, {\n  id: 'hack',\n  label: 'hack',\n  value: 514,\n  color: 'hsl(198, 70%, 50%)'\n}];\n\nconst ChartList = ({\n  charts\n}) => {}; // Object.values(charts).map(Chart => (\n//   <Chart key={shortid.generate()} data={data} />\n// ));\n\n\nexport default function TestLazyLoading() {\n  //   const [charts, setCharts] = useState({});\n  // const addChart = chartName => {\n  //   // Optional step: Chart is already loaded. Don't load again.\n  //   if (charts[chartName]) return;\n  //   const Chart = importView(chartName);\n  //   setCharts(charts => ({ ...charts, [chartName]: Chart }));\n  // };\n  // const loadPieChart = () => addChart('Pie');\n  // const loadWaffleChart = () => addChart('Waffle');\n  return __jsx(React.Fragment, null, __jsx(Suspense, {\n    fallback: \"Loading charts...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Hello world\")))) // <main>\n  //   <section className=\"container\">\n  //     <button disabled={charts['Pie']} onClick={loadPieChart}>\n  //       Pie Chart\n  //     </button>\n  //     <button disabled={charts['Waffle']} onClick={loadWaffleChart}>\n  //       Waffle Chart\n  //     </button>\n  //   </section>\n  //   <section className=\"container\">\n  //     <Suspense fallback=\"Loading charts...\">\n  //       <div className=\"row\">\n  //         <ChartList charts={charts} />\n  //       </div>\n  //     </Suspense>\n  //   </section>\n  // </main>\n  ;\n}","map":{"version":3,"sources":["/Users/admin/Desktop/tcrb-ob-project/tcrb-ob-backoffice-frontend/pages/test-lazy-loading.js"],"names":["React","lazy","useState","Suspense","importView","chartName","catch","data","id","label","value","color","ChartList","charts","TestLazyLoading"],"mappings":";;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,QAAhC,QAAgD,OAAhD,C,CACA;;AAEA,MAAMC,UAAU,GAAGC,SAAS,IAC1BJ,IAAI,CAAC,MACH,OAAQ,iBAAgBI,SAAU,EAAlC,EAAqCC,KAArC,CAA2C,MAAM,OAAQ,sCAAR,CAAjD,CADE,CADN;;AAKA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,KAAK,EAAE,KAFT;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CADW,EAOX;AACEH,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,KAAK,EAAE,OAFT;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAPW,EAaX;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,IAFT;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAbW,EAmBX;AACEH,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,KAAK,EAAE,KAFT;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAnBW,EAyBX;AACEH,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAzBW,CAAb;;AAiCA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB,CAAE,CAApC,C,CACE;AACA;AACA;;;AAEF,eAAe,SAASC,eAAT,GAA2B;AACxC;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,SACE,4BACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADA,CADF,CADF,CAQE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBF;AA0BD","sourcesContent":["// import React,{ lazy, useState } from 'react'\n\n// export default function TestLazyLoading() {\n//   return (\n//     <div>\n\n//     </div>\n//   )\n// }\nimport React, { lazy, useState, Suspense } from 'react';\n// import shortid from 'shortid';\n\nconst importView = chartName =>\n  lazy(() =>\n    import(`../components/${chartName}`).catch(() => import(`../components/customer-services-menu`))\n  );\n\nconst data = [\n  {\n    id: 'php',\n    label: 'php',\n    value: 372,\n    color: 'hsl(233, 70%, 50%)'\n  },\n  {\n    id: 'scala',\n    label: 'scala',\n    value: 363,\n    color: 'hsl(15, 70%, 50%)'\n  },\n  {\n    id: 'go',\n    label: 'go',\n    value: 597,\n    color: 'hsl(79, 70%, 50%)'\n  },\n  {\n    id: 'css',\n    label: 'css',\n    value: 524,\n    color: 'hsl(142, 70%, 50%)'\n  },\n  {\n    id: 'hack',\n    label: 'hack',\n    value: 514,\n    color: 'hsl(198, 70%, 50%)'\n  }\n];\n\nconst ChartList = ({ charts }) => {}\n  // Object.values(charts).map(Chart => (\n  //   <Chart key={shortid.generate()} data={data} />\n  // ));\n\nexport default function TestLazyLoading() {\n  //   const [charts, setCharts] = useState({});\n\n  // const addChart = chartName => {\n  //   // Optional step: Chart is already loaded. Don't load again.\n  //   if (charts[chartName]) return;\n\n  //   const Chart = importView(chartName);\n  //   setCharts(charts => ({ ...charts, [chartName]: Chart }));\n  // };\n  // const loadPieChart = () => addChart('Pie');\n  // const loadWaffleChart = () => addChart('Waffle');\n\n  return (\n    <>\n      <Suspense fallback=\"Loading charts...\">\n      <div className=\"row\">\n        <div>Hello world</div>\n          </div>\n        </Suspense>\n    </>\n    // <main>\n    //   <section className=\"container\">\n    //     <button disabled={charts['Pie']} onClick={loadPieChart}>\n    //       Pie Chart\n    //     </button>\n    //     <button disabled={charts['Waffle']} onClick={loadWaffleChart}>\n    //       Waffle Chart\n    //     </button>\n    //   </section>\n    //   <section className=\"container\">\n    //     <Suspense fallback=\"Loading charts...\">\n    //       <div className=\"row\">\n    //         <ChartList charts={charts} />\n    //       </div>\n    //     </Suspense>\n    //   </section>\n    // </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}